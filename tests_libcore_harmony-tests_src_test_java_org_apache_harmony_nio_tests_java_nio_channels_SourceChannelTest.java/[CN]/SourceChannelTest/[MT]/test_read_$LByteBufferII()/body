{
  ByteBuffer[] bufArray={buffer,positionedBuffer};
  boolean[] sinkBlockingMode={true,true,false,false};
  boolean[] sourceBlockingMode={true,false,true,false};
  for (int i=0; i < sinkBlockingMode.length; ++i) {
    Pipe pipe=Pipe.open();
    sink=pipe.sink();
    source=pipe.source();
    sink.configureBlocking(sinkBlockingMode[i]);
    source.configureBlocking(sourceBlockingMode[i]);
    buffer.position(0);
    positionedBuffer.position(BUFFER_SIZE);
    try {
      sink.write(bufArray);
      sink.close();
      ByteBuffer[] readBufArray={ByteBuffer.allocate(BUFFER_SIZE),ByteBuffer.allocate(BUFFER_SIZE)};
      long totalCount=0;
      do {
        long count=source.read(readBufArray,0,2);
        if (count < 0) {
          break;
        }
        if (0 == count && BUFFER_SIZE == readBufArray[1].position()) {
          break;
        }
        totalCount+=count;
      }
 while (totalCount != 10);
      for (      ByteBuffer readBuf : readBufArray) {
        assertEquals(BUFFER_SIZE,readBuf.position());
        assertEquals("bytes",new String(readBuf.array(),ISO8859_1));
      }
    }
  finally {
      sink.close();
      source.close();
    }
  }
}
