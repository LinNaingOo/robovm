{
  int quarryLength=toBeReplaced.length();
  if (quarryLength <= 0) {
    return orig;
  }
  int index=orig.indexOf(toBeReplaced);
  if (index < 0) {
    return orig;
  }
 else {
    int from=0;
    StringBuffer sb;
    if (quarryLength < replacement.length()) {
      sb=new StringBuffer(orig.length());
    }
 else {
      sb=new StringBuffer(orig.length() * 2);
    }
    do {
      sb.append(orig.substring(from,index));
      sb.append(replacement);
      from=index + quarryLength;
      index=orig.indexOf(toBeReplaced,from);
    }
 while (index >= 0);
    sb.append(orig.substring(from));
    return sb.toString();
  }
}
