{
  TBTCert tbt_cert=new TBTCert(){
    public byte[] getEncoded(){
      return new byte[]{1,2,3};
    }
  }
;
  TBTCert tbt_cert_1=new TBTCert(){
    public byte[] getEncoded(){
      return new byte[]{1,2,3};
    }
  }
;
  TBTCert tbt_cert_2=new TBTCert(){
    public byte[] getEncoded(){
      return new byte[]{1,2,3};
    }
  }
;
  TBTCert tbt_cert_3=new TBTCert(){
    public byte[] getEncoded(){
      return new byte[]{3,2,1};
    }
  }
;
  assertTrue("The equivalence relation should be reflexive.",tbt_cert.equals(tbt_cert));
  assertEquals("The Certificates with equal encoded form should be equal",tbt_cert,tbt_cert_1);
  assertTrue("The equivalence relation should be symmetric.",tbt_cert_1.equals(tbt_cert));
  assertEquals("The Certificates with equal encoded form should be equal",tbt_cert_1,tbt_cert_2);
  assertTrue("The equivalence relation should be transitive.",tbt_cert.equals(tbt_cert_2));
  assertFalse("Should not be equal to null object.",tbt_cert.equals(null));
  assertFalse("The Certificates with differing encoded form " + "should not be equal",tbt_cert.equals(tbt_cert_3));
  assertFalse("The Certificates should not be equals to the object " + "which is not an instance of Certificate",tbt_cert.equals(new Object()));
}
