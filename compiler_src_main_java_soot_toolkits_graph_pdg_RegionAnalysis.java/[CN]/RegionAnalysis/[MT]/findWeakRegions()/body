{
  if (this.m_cfg instanceof ExceptionalUnitGraph)   this.m_blockCFG=new ExceptionalBlockGraph((ExceptionalUnitGraph)this.m_cfg);
 else   if (this.m_cfg instanceof EnhancedUnitGraph)   this.m_blockCFG=new EnhancedBlockGraph((EnhancedUnitGraph)this.m_cfg);
 else   if (this.m_cfg instanceof BriefUnitGraph)   this.m_blockCFG=new BriefBlockGraph((BriefUnitGraph)this.m_cfg);
 else   throw new RuntimeException("Unsupported CFG passed into the RegionAnalyis constructor!");
  this.m_dom=new MHGDominatorTree(new MHGDominatorsFinder(this.m_blockCFG));
  String s=dominatorTreeToString(this.m_dom,this.m_dom.getHead());
  if (Options.v().verbose())   G.v().out.println("[RegionAnalysis] Dominator tree: " + s);
  try {
    this.m_pdom=new MHGDominatorTree(new MHGPostDominatorsFinder(m_blockCFG));
    if (Options.v().verbose())     G.v().out.println("[RegionAnalysis] PostDominator tree: ");
    List heads=this.m_pdom.getHeads();
    for (Iterator headItr=heads.iterator(); headItr.hasNext(); ) {
      s=dominatorTreeToString(this.m_pdom,(DominatorNode)headItr.next());
      if (Options.v().verbose())       G.v().out.println(s);
    }
    this.m_regCount=-1;
    if (this.m_blockCFG.getHeads().size() == 1) {
      this.m_regCount++;
      this.m_regions.put(new Integer(this.m_regCount),this.createRegion(this.m_regCount));
      this.weakRegionDFS2((Block)this.m_blockCFG.getHeads().get(0),this.m_regCount);
    }
 else     if (this.m_blockCFG.getTails().size() == 1) {
      this.m_regCount++;
      this.m_regions.put(new Integer(this.m_regCount),this.createRegion(this.m_regCount));
      this.weakRegionDFS((Block)this.m_blockCFG.getTails().get(0),this.m_regCount);
    }
 else {
      if (Options.v().verbose())       G.v().out.println("WARNING: RegionAnalysis: the CFG is multi-headed and tailed, so, the results of this analysis might not be reliable!");
      for (int i=0; i < this.m_blockCFG.getTails().size(); i++) {
        this.m_regCount++;
        this.m_regions.put(new Integer(this.m_regCount),this.createRegion(this.m_regCount));
        this.weakRegionDFS((Block)this.m_blockCFG.getTails().get(i),this.m_regCount);
      }
    }
  }
 catch (  RuntimeException e) {
    G.v().out.println("[RegionAnalysis] Exception in findWeakRegions: " + e);
  }
}
