{
  if (inStream == null) {
    throw new CertificateException(Messages.getString("security.153"));
  }
  ArrayList result=new ArrayList();
  try {
    if (!inStream.markSupported()) {
      inStream=new RestoringInputStream(inStream);
    }
    byte[] encoding=null;
    int second_asn1_tag=-1;
    inStream.mark(1);
    int ch;
    while ((ch=inStream.read()) != -1) {
      if (ch == '-') {
        encoding=decodePEM(inStream,FREE_BOUND_SUFFIX);
      }
 else       if (ch == 0x30) {
        encoding=null;
        inStream.reset();
        inStream.mark(CERT_CACHE_SEED_LENGTH);
      }
 else {
        if (result.size() == 0) {
          throw new CertificateException(Messages.getString("security.15F"));
        }
 else {
          inStream.reset();
          return result;
        }
      }
      BerInputStream in=(encoding == null) ? new BerInputStream(inStream) : new BerInputStream(encoding);
      second_asn1_tag=in.next();
      if (encoding == null) {
        inStream.reset();
      }
      if (second_asn1_tag != ASN1Constants.TAG_C_SEQUENCE) {
        if (result.size() == 0) {
          break;
        }
 else {
          return result;
        }
      }
 else {
        if (encoding == null) {
          result.add(getCertificate(inStream));
        }
 else {
          result.add(getCertificate(encoding));
        }
      }
      inStream.mark(1);
    }
    if (result.size() != 0) {
      return result;
    }
 else     if (ch == -1) {
      throw new CertificateException(Messages.getString("security.155"));
    }
    if (second_asn1_tag == ASN1Constants.TAG_OID) {
      ContentInfo info=(ContentInfo)((encoding != null) ? ContentInfo.ASN1.decode(encoding) : ContentInfo.ASN1.decode(inStream));
      SignedData data=info.getSignedData();
      if (data == null) {
        throw new CertificateException(Messages.getString("security.154"));
      }
      List certs=data.getCertificates();
      if (certs != null) {
        for (int i=0; i < certs.size(); i++) {
          result.add(new X509CertImpl((org.apache.harmony.security.x509.Certificate)certs.get(i)));
        }
      }
      return result;
    }
    throw new CertificateException(Messages.getString("security.15F"));
  }
 catch (  IOException e) {
    throw new CertificateException(e);
  }
}
