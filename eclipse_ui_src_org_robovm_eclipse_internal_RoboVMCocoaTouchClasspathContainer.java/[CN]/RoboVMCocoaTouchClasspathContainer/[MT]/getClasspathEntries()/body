{
  Config.Home home=RoboVMPlugin.getRoboVMHome();
  File f=home.getRtPath();
  List<IClasspathEntry> entries=new ArrayList<IClasspathEntry>();
  if (!home.isDev()) {
    File libDir=f.getParentFile();
    entries.add(JavaCore.newLibraryEntry(new Path(new File(libDir,"robovm-objc.jar").getAbsolutePath()),new Path(new File(libDir,"robovm-objc-sources.jar").getAbsolutePath()),new Path(""),new IAccessRule[]{},new IClasspathAttribute[]{},false));
    entries.add(JavaCore.newLibraryEntry(new Path(new File(libDir,"robovm-cocoatouch.jar").getAbsolutePath()),new Path(new File(libDir,"robovm-cocoatouch-sources.jar").getAbsolutePath()),new Path(""),new IAccessRule[]{},new IClasspathAttribute[]{},false));
  }
 else {
    File rootDir=f.getParentFile().getParentFile().getParentFile();
    entries.add(JavaCore.newLibraryEntry(new Path(new File(rootDir,"objc/target/classes").getAbsolutePath()),new Path(new File(rootDir,"objc/src/main/java").getAbsolutePath()),new Path(""),new IAccessRule[]{},new IClasspathAttribute[]{},false));
    entries.add(JavaCore.newLibraryEntry(new Path(new File(rootDir,"cocoatouch/target/classes").getAbsolutePath()),new Path(new File(rootDir,"cocoatouch/src/main/java").getAbsolutePath()),new Path(""),new IAccessRule[]{},new IClasspathAttribute[]{},false));
  }
  return entries.toArray(new IClasspathEntry[entries.size()]);
}
