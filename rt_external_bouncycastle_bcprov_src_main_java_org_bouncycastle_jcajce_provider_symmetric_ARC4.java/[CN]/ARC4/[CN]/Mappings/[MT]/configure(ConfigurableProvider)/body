{
  provider.addAlgorithm("Cipher.ARC4",PREFIX + "$Base");
  provider.addAlgorithm("Alg.Alias.Cipher." + PKCSObjectIdentifiers.rc4,"ARC4");
  provider.addAlgorithm("Alg.Alias.Cipher.ARCFOUR","ARC4");
  provider.addAlgorithm("Alg.Alias.Cipher.RC4","ARC4");
  provider.addAlgorithm("KeyGenerator.ARC4",PREFIX + "$KeyGen");
  provider.addAlgorithm("Alg.Alias.KeyGenerator.RC4","ARC4");
  provider.addAlgorithm("Alg.Alias.KeyGenerator.1.2.840.113549.3.4","ARC4");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHAAND128BITRC4",PREFIX + "$PBEWithSHAAnd128BitKeyFactory");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHAAND40BITRC4",PREFIX + "$PBEWithSHAAnd40BitKeyFactory");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + PKCSObjectIdentifiers.pbeWithSHAAnd128BitRC4,"PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + PKCSObjectIdentifiers.pbeWithSHAAnd40BitRC4,"PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND40BITRC4","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND128BITRC4","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAANDRC4","PKCS12PBE");
  provider.addAlgorithm("Cipher.PBEWITHSHAAND128BITRC4",PREFIX + "$PBEWithSHAAnd128Bit");
  provider.addAlgorithm("Cipher.PBEWITHSHAAND40BITRC4",PREFIX + "$PBEWithSHAAnd40Bit");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + PKCSObjectIdentifiers.pbeWithSHAAnd128BitRC4,"PBEWITHSHAAND128BITRC4");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + PKCSObjectIdentifiers.pbeWithSHAAnd40BitRC4,"PBEWITHSHAAND40BITRC4");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1AND128BITRC4","PBEWITHSHAAND128BITRC4");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1AND40BITRC4","PBEWITHSHAAND40BITRC4");
  provider.addAlgorithm("Alg.Alias.Cipher." + PKCSObjectIdentifiers.pbeWithSHAAnd128BitRC4,"PBEWITHSHAAND128BITRC4");
  provider.addAlgorithm("Alg.Alias.Cipher." + PKCSObjectIdentifiers.pbeWithSHAAnd40BitRC4,"PBEWITHSHAAND40BITRC4");
}
