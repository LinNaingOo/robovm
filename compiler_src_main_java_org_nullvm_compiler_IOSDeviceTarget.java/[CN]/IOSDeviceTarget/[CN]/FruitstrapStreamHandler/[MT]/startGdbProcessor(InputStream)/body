{
  MICommandInjector injector=new MICommandInjector(){
    public void log(    String data){
    }
    public void inject(    String data){
      processIn.print(data);
      processIn.flush();
    }
  }
;
  MIProxy proxy=new MIProxy(injector,"(gdb)",System.getProperty("file.encoding")){
    boolean started=false;
    @Override protected void targetStreamOutput(    MIRecord record){
      String s=unescape(record.stream());
      try {
        out.write(s.getBytes());
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
    }
    @Override protected void prompt(){
      if (!started) {
        started=true;
        send(new SimpleMICommand(0,"-exec-continue"){
          @Override protected void onStopped(          MIRecord record){
            send(new SimpleMICommand(0,"-gdb-exit"));
          }
        }
);
      }
    }
  }
;
  BufferedReader gdbReader=new BufferedReader(new InputStreamReader(gdbStream));
  String line=null;
  while ((line=gdbReader.readLine()) != null) {
    proxy.processLine(line);
  }
}
