{
  if (fromStart && ((!loInclusive && startKeyInclusive) ? m.keyCompare(start,lo) <= 0 : m.keyCompare(start,lo) < 0) || (toEnd && ((!hiInclusive && (endKeyInclusive || (startKeyInclusive && start.equals(end)))) ? m.keyCompare(end,hi) >= 0 : m.keyCompare(end,hi) > 0))) {
    throw new IllegalArgumentException();
  }
  if (m.keyCompare(start,end) > 0) {
    throw new IllegalArgumentException();
  }
  return new AscendingSubMap<K,V>(start,startKeyInclusive,m,end,endKeyInclusive);
}
