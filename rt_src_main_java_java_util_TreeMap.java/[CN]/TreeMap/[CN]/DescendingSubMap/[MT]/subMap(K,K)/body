{
  if (!checkLowerBound(start) || !checkUpperBound(start)) {
    throw new IllegalArgumentException();
  }
  int result=-1;
  if (toEnd) {
    result=(null != comparator()) ? comparator().compare(end,hi) : toComparable(end).compareTo(hi);
  }
  if (((!hiInclusive && start.equals(end)) ? result < 0 : result <= 0)) {
    if ((null != comparator()) ? comparator().compare(start,end) > 0 : toComparable(start).compareTo(end) > 0) {
      throw new IllegalArgumentException();
    }
    return new DescendingSubMap<K,V>(start,true,m,end,false);
  }
  throw new IllegalArgumentException();
}
