{
  boolean isInRange=true;
  int result;
  if (map.toEnd) {
    result=(null != comparator()) ? comparator().compare(start,map.hi) : toComparable(start).compareTo(map.hi);
    isInRange=(map.hiInclusive || !startInclusive) ? result <= 0 : result < 0;
  }
  if (map.fromStart) {
    result=(null != comparator()) ? comparator().compare(start,map.lo) : toComparable(start).compareTo(map.lo);
    isInRange=isInRange && ((map.loInclusive || !startInclusive) ? result >= 0 : result > 0);
  }
  if (isInRange) {
    if (map.toEnd) {
      return new AscendingSubMapKeySet<K,V>(new AscendingSubMap<K,V>(start,startInclusive,map.m,map.hi,map.hiInclusive));
    }
 else {
      return new AscendingSubMapKeySet<K,V>(new AscendingSubMap<K,V>(start,startInclusive,map.m));
    }
  }
  throw new IllegalArgumentException();
}
