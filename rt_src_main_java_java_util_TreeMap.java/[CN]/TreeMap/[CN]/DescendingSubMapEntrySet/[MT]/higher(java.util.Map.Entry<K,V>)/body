{
  Entry<K,V> node=map.m.findLowerEntry(e.getKey());
  if (node != null && !map.checkUpperBound(node.key)) {
    node=map.hiInclusive ? map.findFloorEntryImpl(map.hi) : map.findLowerEntryImpl(map.hi);
  }
  Comparable<K> object=map.comparator() == null ? toComparable((K)e.getKey()) : null;
  if (node != null && (map.cmp(object,e.getKey(),node.key)) > 0) {
    return null;
  }
  if (node != null && !map.checkLowerBound(node.key)) {
    TreeMap.Entry<K,V> first=map.loInclusive ? map.m.findFloorEntry(map.lo) : map.m.findLowerEntry(map.lo);
    if (first != null && map.cmp(object,e.getKey(),first.getKey()) < 0) {
      node=first;
    }
 else {
      node=null;
    }
  }
  return node;
}
