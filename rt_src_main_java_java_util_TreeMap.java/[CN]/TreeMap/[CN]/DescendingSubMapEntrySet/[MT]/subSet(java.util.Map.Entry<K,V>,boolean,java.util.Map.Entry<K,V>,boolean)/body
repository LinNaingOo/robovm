{
  Comparable<K> startobject=map.comparator() == null ? toComparable((K)start.getKey()) : null;
  Comparable<K> endobject=map.comparator() == null ? toComparable((K)end.getKey()) : null;
  if (map.fromStart && ((!map.loInclusive && startInclusive) ? map.cmp(startobject,start.getKey(),map.lo) <= 0 : map.cmp(startobject,start.getKey(),map.lo) < 0) || (map.toEnd && ((!map.hiInclusive && endInclusive) ? map.cmp(endobject,end.getKey(),map.hi) >= 0 : map.cmp(endobject,end.getKey(),map.hi) > 0))) {
    throw new IllegalArgumentException();
  }
  if (map.cmp(startobject,start.getKey(),end.getKey()) > 0) {
    throw new IllegalArgumentException();
  }
  return new DescendingSubMapEntrySet<K,V>(new DescendingSubMap<K,V>(start.getKey(),startInclusive,map.m,end.getKey(),endInclusive));
}
