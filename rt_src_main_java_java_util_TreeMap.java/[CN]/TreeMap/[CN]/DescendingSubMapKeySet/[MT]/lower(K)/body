{
  Entry<K,V> node=map.m.findHigherEntry(e);
  if (node != null && !map.checkUpperBound(node.key)) {
    node=map.hiInclusive ? map.m.findCeilingEntry(map.hi) : map.m.findHigherEntry(map.hi);
  }
  if (node != null && !map.checkLowerBound(node.key)) {
    Comparable<K> object=map.comparator() == null ? toComparable((K)e) : null;
    Entry<K,V> first=map.loInclusive ? map.m.findFloorEntry(map.lo) : map.m.findLowerEntry(map.lo);
    if (first != null && map.cmp(object,e,first.key) > 0 && map.checkUpperBound(first.key)) {
      node=first;
    }
 else {
      node=null;
    }
  }
  return node == null ? null : node.key;
}
