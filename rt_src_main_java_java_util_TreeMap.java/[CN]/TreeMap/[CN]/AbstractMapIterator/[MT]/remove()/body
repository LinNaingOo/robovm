{
  if (expectedModCount == backingMap.modCount) {
    if (lastNode != null) {
      int idx=lastOffset;
      K key=null;
      if (idx == lastNode.left_idx) {
        key=backingMap.removeLeftmost(lastNode);
      }
 else       if (idx == lastNode.right_idx) {
        key=backingMap.removeRightmost(lastNode);
      }
 else {
        int lastRight=lastNode.right_idx;
        key=backingMap.removeMiddleElement(node,idx);
        if (null == key && lastRight > lastNode.right_idx) {
          offset--;
        }
      }
      if (null != key) {
        Entry<K,V> entry=backingMap.find(key);
        node=entry.node;
        offset=entry.index;
      }
      lastNode=null;
      expectedModCount++;
    }
 else {
      throw new IllegalStateException();
    }
  }
 else {
    throw new ConcurrentModificationException();
  }
}
