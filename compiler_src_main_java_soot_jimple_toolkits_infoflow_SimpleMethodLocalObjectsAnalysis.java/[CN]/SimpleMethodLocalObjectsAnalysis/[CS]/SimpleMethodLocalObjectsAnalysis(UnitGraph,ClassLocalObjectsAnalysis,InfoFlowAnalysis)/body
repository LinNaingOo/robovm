{
  super(g,dfa,true,true);
  mlocounter++;
  printMessages=false;
  SootMethod method=g.getBody().getMethod();
  AbstractDataSource sharedDataSource=new AbstractDataSource(new String("SHARED"));
  for (int i=0; i < method.getParameterCount(); i++) {
    EquivalentValue paramEqVal=InfoFlowAnalysis.getNodeForParameterRef(method,i);
    if (!cloa.parameterIsLocal(method,paramEqVal)) {
      addToEntryInitialFlow(sharedDataSource,paramEqVal.getValue());
      addToNewInitialFlow(sharedDataSource,paramEqVal.getValue());
    }
  }
  for (  SootField sf : cloa.getSharedFields()) {
    EquivalentValue fieldRefEqVal=InfoFlowAnalysis.getNodeForFieldRef(method,sf);
    addToEntryInitialFlow(sharedDataSource,fieldRefEqVal.getValue());
    addToNewInitialFlow(sharedDataSource,fieldRefEqVal.getValue());
  }
  if (printMessages)   G.v().out.println("----- STARTING SHARED/LOCAL ANALYSIS FOR " + g.getBody().getMethod() + " -----");
  doFlowInsensitiveAnalysis();
  if (printMessages)   G.v().out.println("----- ENDING   SHARED/LOCAL ANALYSIS FOR " + g.getBody().getMethod() + " -----");
}
