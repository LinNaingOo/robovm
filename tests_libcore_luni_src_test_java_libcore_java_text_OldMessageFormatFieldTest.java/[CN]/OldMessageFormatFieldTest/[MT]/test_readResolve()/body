{
  ObjectOutputStream out=null;
  ObjectInputStream in=null;
  try {
    ByteArrayOutputStream bytes=new ByteArrayOutputStream();
    out=new ObjectOutputStream(bytes);
    MessageFormat.Field mfield, mfield2;
    MyMessageFormat field;
    mfield=MessageFormat.Field.ARGUMENT;
    field=new MyMessageFormat(null);
    out.writeObject(mfield);
    out.writeObject(field);
    in=new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()));
    try {
      mfield2=(MessageFormat.Field)in.readObject();
      assertSame("resolved incorrectly",mfield,mfield2);
    }
 catch (    IllegalArgumentException e) {
      fail("Unexpected IllegalArgumentException: " + e);
    }
    try {
      in.readObject();
      fail("Expected InvalidObjectException for subclass instance with null name");
    }
 catch (    InvalidObjectException e) {
    }
  }
 catch (  IOException e) {
    fail("unexpected IOException" + e);
  }
catch (  ClassNotFoundException e) {
    fail("unexpected ClassNotFoundException" + e);
  }
 finally {
    try {
      if (out != null)       out.close();
      if (in != null)       in.close();
    }
 catch (    IOException e) {
    }
  }
}
