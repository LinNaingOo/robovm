{
  int startIndex=0;
  boolean isNegative=false;
  StringBuilder result=new StringBuilder();
  char currentConversionType=formatToken.getConversionType();
  long value;
  if (formatToken.isFlagSet(FormatToken.FLAG_MINUS) || formatToken.isFlagSet(FormatToken.FLAG_ZERO)) {
    if (!formatToken.isWidthSet()) {
      throw new MissingFormatWidthException(formatToken.getStrFlags());
    }
  }
  if (formatToken.isFlagSet(FormatToken.FLAG_ADD) && formatToken.isFlagSet(FormatToken.FLAG_SPACE)) {
    throw new IllegalFormatFlagsException(formatToken.getStrFlags());
  }
  if (formatToken.isPrecisionSet()) {
    throw new IllegalFormatPrecisionException(formatToken.getPrecision());
  }
  if (arg instanceof Long) {
    value=((Long)arg).longValue();
  }
 else   if (arg instanceof Integer) {
    value=((Integer)arg).longValue();
  }
 else   if (arg instanceof Short) {
    value=((Short)arg).longValue();
  }
 else   if (arg instanceof Byte) {
    value=((Byte)arg).longValue();
  }
 else {
    throw new IllegalFormatConversionException(formatToken.getConversionType(),arg.getClass());
  }
  if ('d' != currentConversionType) {
    if (formatToken.isFlagSet(FormatToken.FLAG_ADD) || formatToken.isFlagSet(FormatToken.FLAG_SPACE) || formatToken.isFlagSet(FormatToken.FLAG_COMMA)|| formatToken.isFlagSet(FormatToken.FLAG_PARENTHESIS)) {
      throw new FormatFlagsConversionMismatchException(formatToken.getStrFlags(),formatToken.getConversionType());
    }
  }
  if (formatToken.isFlagSet(FormatToken.FLAG_SHARP)) {
    if ('d' == currentConversionType) {
      throw new FormatFlagsConversionMismatchException(formatToken.getStrFlags(),formatToken.getConversionType());
    }
 else     if ('o' == currentConversionType) {
      result.append("0");
      startIndex+=1;
    }
 else {
      result.append("0x");
      startIndex+=2;
    }
  }
  if (formatToken.isFlagSet(FormatToken.FLAG_MINUS) && formatToken.isFlagSet(FormatToken.FLAG_ZERO)) {
    throw new IllegalFormatFlagsException(formatToken.getStrFlags());
  }
  if (value < 0) {
    isNegative=true;
  }
  if ('d' == currentConversionType) {
    NumberFormat numberFormat=getNumberFormat();
    if (formatToken.isFlagSet(FormatToken.FLAG_COMMA)) {
      numberFormat.setGroupingUsed(true);
    }
 else {
      numberFormat.setGroupingUsed(false);
    }
    result.append(numberFormat.format(arg));
  }
 else {
    long BYTE_MASK=0x00000000000000FFL;
    long SHORT_MASK=0x000000000000FFFFL;
    long INT_MASK=0x00000000FFFFFFFFL;
    if (isNegative) {
      if (arg instanceof Byte) {
        value&=BYTE_MASK;
      }
 else       if (arg instanceof Short) {
        value&=SHORT_MASK;
      }
 else       if (arg instanceof Integer) {
        value&=INT_MASK;
      }
    }
    if ('o' == currentConversionType) {
      result.append(Long.toOctalString(value));
    }
 else {
      result.append(Long.toHexString(value));
    }
    isNegative=false;
  }
  if (!isNegative) {
    if (formatToken.isFlagSet(FormatToken.FLAG_ADD)) {
      result.insert(0,'+');
      startIndex+=1;
    }
    if (formatToken.isFlagSet(FormatToken.FLAG_SPACE)) {
      result.insert(0,' ');
      startIndex+=1;
    }
  }
  if (isNegative && formatToken.isFlagSet(FormatToken.FLAG_PARENTHESIS)) {
    result=wrapParentheses(result);
    return result.toString();
  }
  if (isNegative && formatToken.isFlagSet(FormatToken.FLAG_ZERO)) {
    startIndex++;
  }
  return padding(result,startIndex);
}
