{
  StringBuilder result=new StringBuilder();
  int startIndex=0;
  int flags=formatToken.getFlags();
  if (formatToken.isFlagSet(FormatToken.FLAG_MINUS) && !formatToken.isWidthSet()) {
    throw new MissingFormatWidthException("-" + formatToken.getConversionType());
  }
  if (FormatToken.FLAGS_UNSET != flags && FormatToken.FLAG_MINUS != flags) {
    throw new FormatFlagsConversionMismatchException(formatToken.getStrFlags(),formatToken.getConversionType());
  }
  if (formatToken.isPrecisionSet()) {
    throw new IllegalFormatPrecisionException(formatToken.getPrecision());
  }
  if (null == arg) {
    result.append("null");
  }
 else {
    if (arg instanceof Character) {
      result.append(arg);
    }
 else     if (arg instanceof Byte) {
      byte b=((Byte)arg).byteValue();
      if (!Character.isValidCodePoint(b)) {
        throw new IllegalFormatCodePointException(b);
      }
      result.append((char)b);
    }
 else     if (arg instanceof Short) {
      short s=((Short)arg).shortValue();
      if (!Character.isValidCodePoint(s)) {
        throw new IllegalFormatCodePointException(s);
      }
      result.append((char)s);
    }
 else     if (arg instanceof Integer) {
      int codePoint=((Integer)arg).intValue();
      if (!Character.isValidCodePoint(codePoint)) {
        throw new IllegalFormatCodePointException(codePoint);
      }
      result.append(String.valueOf(Character.toChars(codePoint)));
    }
 else {
      throw new IllegalFormatConversionException(formatToken.getConversionType(),arg.getClass());
    }
  }
  return padding(result,startIndex);
}
