{
  int token=record.token();
  MICommand cmd=pendingCommands.peek();
  if (processAsyncError(record)) {
    return;
  }
  while (cmd != null && cmd.getToken() < token) {
    cmd=pendingCommands.poll();
    injector.log(String.format("No answer for: %s\n\r",cmd.toString()));
    cmd=pendingCommands.peek();
  }
  if (cmd == null || cmd.getToken() != token) {
    injector.log(String.format("No command for record %s\n\r",record));
    streamMessages.clear();
    consoleMessages.clear();
    return;
  }
  record.setCommand(cmd);
  cmd.recordLogStream(streamMessages);
  streamMessages.clear();
  cmd.recordConsoleStream(consoleMessages);
  consoleMessages.clear();
  if (record.isError()) {
    injector.log(record.error() + "\n\r");
    finish(cmd);
    return;
  }
  if (record.type == '^') {
    if (record.cls.equals("done")) {
      cmd.onDone(record);
    }
 else     if (record.cls.equals("running")) {
      cmd.onRunning(record);
    }
 else     if (record.cls.equals("error")) {
      cmd.onError(record);
    }
 else     if (record.cls.equals("exit")) {
      cmd.onExit(record);
    }
 else {
      cmd.onOther(record);
    }
  }
 else   if (record.type == '*') {
    if (record.cls.equals("stopped")) {
      cmd.onStopped(record);
    }
 else {
      cmd.onOther(record);
    }
  }
 else {
    cmd.onOther(record);
  }
}
