{
  if (library == null) {
    throw new IllegalArgumentException("No @" + Library.class.getName() + " annotation found on class "+ method.getDeclaringClass().getName());
  }
  long handle=getHandle(library.value());
  String symbol=bridge.symbol();
  if (symbol == null || "".equals(symbol)) {
    symbol=method.getName();
  }
  long f=Dl.resolve(handle,symbol);
  if (f == 0L) {
    f=Dl.resolve(handle,UNHIDDEN_SYMBOL_PREFIX + symbol);
  }
  if (f == 0L && !bridge.optional()) {
    throw new UnsatisfiedLinkError("Failed to resolve native function '" + symbol + "' "+ "for method "+ method+ " with @Bridge annotation "+ bridge+ " in library "+ library);
  }
  return f;
}
