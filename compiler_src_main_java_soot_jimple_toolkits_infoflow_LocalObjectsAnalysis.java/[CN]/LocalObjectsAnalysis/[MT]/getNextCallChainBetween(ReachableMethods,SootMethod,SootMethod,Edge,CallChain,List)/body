{
  Pair cacheKey=new Pair(start,end);
  if (callChainsCache.containsKey(cacheKey)) {
    return null;
  }
  path=new CallChain(endToPath,path);
  if (start == end) {
    return path;
  }
  if (!rm.contains(end)) {
    return null;
  }
  Iterator edgeIt=cg.edgesInto(end);
  while (edgeIt.hasNext()) {
    Edge e=(Edge)edgeIt.next();
    SootMethod node=e.src();
    if (!path.containsMethod(node) && e.isExplicit() && e.srcStmt().containsInvokeExpr()) {
      CallChain newpath=getNextCallChainBetween(rm,start,node,e,path,previouslyFound);
      if (newpath != null) {
        if (!previouslyFound.contains(newpath))         return newpath;
      }
    }
 else {
    }
  }
  if (previouslyFound.size() == 0)   callChainsCache.put(cacheKey,null);
  return null;
}
