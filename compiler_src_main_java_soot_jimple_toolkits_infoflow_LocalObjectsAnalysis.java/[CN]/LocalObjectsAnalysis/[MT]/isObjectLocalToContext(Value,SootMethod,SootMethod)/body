{
  if (sm == context) {
    boolean isLocal=isObjectLocalToParent(localOrRef,sm);
    if (dfa.printDebug())     G.v().out.println("    " + (isLocal ? "LOCAL  (Directly Reachable from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")" : "SHARED (Directly Reachable from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")"));
    return isLocal;
  }
  if (localOrRef instanceof StaticFieldRef) {
    if (dfa.printDebug())     G.v().out.println("    SHARED (Static             from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
    return false;
  }
  if (!sm.isConcrete()) {
    throw new RuntimeException("Attempted to check if a local variable in a non-concrete method is shared/local.");
  }
  Body b=sm.retrieveActiveBody();
  CallLocalityContext mergedContext=getClassLocalObjectsAnalysis(context.getDeclaringClass()).getMergedContext(sm);
  if (mergedContext == null) {
    if (dfa.printDebug())     G.v().out.println("      ------ (Unreachable        from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
    return true;
  }
  if (localOrRef instanceof InstanceFieldRef) {
    InstanceFieldRef ifr=(InstanceFieldRef)localOrRef;
    Local thisLocal=null;
    try {
      thisLocal=b.getThisLocal();
    }
 catch (    RuntimeException re) {
    }
    if (ifr.getBase() == thisLocal) {
      boolean isLocal=mergedContext.isFieldLocal(InfoFlowAnalysis.getNodeForFieldRef(sm,ifr.getField()));
      if (dfa.printDebug()) {
        if (isLocal) {
          G.v().out.println("      LOCAL  (this  .localField  from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
        }
 else {
          G.v().out.println("      SHARED (this  .sharedField from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
        }
      }
      return isLocal;
    }
 else {
      boolean isLocal=SmartMethodLocalObjectsAnalysis.isObjectLocal(dfa,sm,mergedContext,ifr.getBase());
      if (isLocal) {
        ClassLocalObjectsAnalysis cloa=getClassLocalObjectsAnalysis(context.getDeclaringClass());
        isLocal=!cloa.getInnerSharedFields().contains(ifr.getField());
        if (dfa.printDebug()) {
          if (isLocal) {
            G.v().out.println("      LOCAL  (local .localField  from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
          }
 else {
            G.v().out.println("      SHARED (local .sharedField from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
          }
        }
        return isLocal;
      }
 else {
        if (dfa.printDebug())         G.v().out.println("      SHARED (shared.someField   from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
        return isLocal;
      }
    }
  }
  boolean isLocal=SmartMethodLocalObjectsAnalysis.isObjectLocal(dfa,sm,mergedContext,localOrRef);
  if (dfa.printDebug()) {
    if (isLocal) {
      G.v().out.println("      LOCAL  ( local             from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
    }
 else {
      G.v().out.println("      SHARED (shared             from " + context.getDeclaringClass().getShortName() + "."+ context.getName()+ ")");
    }
  }
  return isLocal;
}
