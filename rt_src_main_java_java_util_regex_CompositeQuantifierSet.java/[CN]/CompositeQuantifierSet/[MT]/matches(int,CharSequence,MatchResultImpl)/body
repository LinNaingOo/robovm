{
  int min=quantifier.min();
  int max=quantifier.max();
  int i=0;
  for (; i < min; i++) {
    if (stringIndex + leaf.charCount() > matchResult.getRightBound()) {
      matchResult.hitEnd=true;
      return -1;
    }
    int shift=leaf.accepts(stringIndex,testString);
    if (shift < 1) {
      return -1;
    }
    stringIndex+=shift;
  }
  for (; i < max; i++) {
    int shift;
    if (stringIndex + leaf.charCount() > matchResult.getRightBound() || (shift=leaf.accepts(stringIndex,testString)) < 1) {
      break;
    }
    stringIndex+=shift;
  }
  for (; i >= min; i--) {
    int shift=next.matches(stringIndex,testString,matchResult);
    if (shift >= 0) {
      return shift;
    }
    stringIndex-=leaf.charCount();
  }
  return -1;
}
