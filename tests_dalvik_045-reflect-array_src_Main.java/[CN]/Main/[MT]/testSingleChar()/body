{
  Object charArray=Array.newInstance(Character.TYPE,7);
  char[] array=(char[])charArray;
  array[0]='0';
  array[1]='W';
  array[2]='2';
  array[3]='3';
  array[4]='X';
  array[5]='5';
  array[6]='6';
  Array.setChar(charArray,1,'1');
  Array.setChar(charArray,4,'4');
  try {
    Array.setShort(charArray,3,(short)'Y');
    throw new RuntimeException("shouldn't allow short in char array");
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    Array.setInt(charArray,5,'Z');
    throw new RuntimeException("shouldn't allow int in char array");
  }
 catch (  IllegalArgumentException iae) {
  }
  try {
    for (int i=0; i < array.length; i++) {
      if (Array.getInt(charArray,i) - '0' != i) {
        throw new RuntimeException("mismatch: " + i + " is "+ array[i]);
      }
    }
    if (Array.getInt(charArray,4) != '4') {
      throw new RuntimeException("load should have worked");
    }
  }
 catch (  IllegalArgumentException iae) {
    System.err.println("Couldn't Array.getInt(charArray)");
  }
  try {
    Array.getByte(charArray,2);
    throw new RuntimeException("shouldn't allow read of char as byte");
  }
 catch (  IllegalArgumentException iae) {
  }
  Array.setChar(charArray,3,(char)0xffff);
  try {
    if (Array.getInt(charArray,3) != 0xffff) {
      throw new RuntimeException("char got sign-extended? " + Array.getInt(charArray,3));
    }
  }
 catch (  IllegalArgumentException iae) {
    System.err.println("Couldn't Array.getInt(charArray)");
  }
  System.out.println("ReflectArrayTest.testSingleChar passed");
}
