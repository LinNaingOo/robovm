{
  if (!b.getMethod().getName().equals("<init>"))   return;
  InvokeStmt invokeStmt=getFirstSpecialInvoke(b);
  if (invokeStmt == null)   return;
  SpecialInvokeExpr specInvokeExpr=(SpecialInvokeExpr)invokeStmt.getInvokeExpr();
  if (specInvokeExpr.getMethod().getDeclaringClass().equals(b.getMethod().getDeclaringClass())) {
    if (!specInvokeExpr.getMethod().hasActiveBody()) {
      specInvokeExpr.getMethod().retrieveActiveBody();
    }
    HashMap oldLocalsToNew=new HashMap();
    Iterator localsIt=specInvokeExpr.getMethod().getActiveBody().getLocals().iterator();
    while (localsIt.hasNext()) {
      Local l=(Local)localsIt.next();
      Local newLocal=(Local)l.clone();
      b.getLocals().add(newLocal);
      oldLocalsToNew.put(l,newLocal);
    }
    IdentityStmt origIdStmt=findIdentityStmt(b);
    HashMap<Stmt,Stmt> oldStmtsToNew=new HashMap<Stmt,Stmt>();
    Chain containerUnits=b.getUnits();
    Iterator inlineeIt=specInvokeExpr.getMethod().getActiveBody().getUnits().iterator();
    while (inlineeIt.hasNext()) {
      Stmt inlineeStmt=(Stmt)inlineeIt.next();
      if (inlineeStmt instanceof IdentityStmt) {
        IdentityStmt idStmt=(IdentityStmt)inlineeStmt;
        if (idStmt.getRightOp() instanceof ThisRef) {
          Stmt newThis=Jimple.v().newAssignStmt((Local)oldLocalsToNew.get(idStmt.getLeftOp()),origIdStmt.getLeftOp());
          containerUnits.insertBefore(newThis,invokeStmt);
          oldStmtsToNew.put(inlineeStmt,newThis);
        }
 else         if (idStmt.getRightOp() instanceof CaughtExceptionRef) {
          Stmt newInlinee=(Stmt)inlineeStmt.clone();
          Iterator localsToPatch=newInlinee.getUseAndDefBoxes().iterator();
          while (localsToPatch.hasNext()) {
            ValueBox next=(ValueBox)localsToPatch.next();
            if (next.getValue() instanceof Local) {
              next.setValue((Local)oldLocalsToNew.get(next.getValue()));
            }
          }
          containerUnits.insertBefore(newInlinee,invokeStmt);
          oldStmtsToNew.put(inlineeStmt,newInlinee);
        }
 else         if (idStmt.getRightOp() instanceof ParameterRef) {
          Stmt newParam=Jimple.v().newAssignStmt((Local)oldLocalsToNew.get(idStmt.getLeftOp()),specInvokeExpr.getArg(((ParameterRef)idStmt.getRightOp()).getIndex()));
          containerUnits.insertBefore(newParam,invokeStmt);
          oldStmtsToNew.put(inlineeStmt,newParam);
        }
      }
 else       if (inlineeStmt instanceof ReturnVoidStmt) {
        Stmt newRet=Jimple.v().newGotoStmt((Stmt)containerUnits.getSuccOf(invokeStmt));
        containerUnits.insertBefore(newRet,invokeStmt);
        System.out.println("adding to stmt map: " + inlineeStmt + " and "+ newRet);
        oldStmtsToNew.put(inlineeStmt,newRet);
      }
 else {
        Stmt newInlinee=(Stmt)inlineeStmt.clone();
        Iterator localsToPatch=newInlinee.getUseAndDefBoxes().iterator();
        while (localsToPatch.hasNext()) {
          ValueBox next=(ValueBox)localsToPatch.next();
          if (next.getValue() instanceof Local) {
            next.setValue((Local)oldLocalsToNew.get(next.getValue()));
          }
        }
        containerUnits.insertBefore(newInlinee,invokeStmt);
        oldStmtsToNew.put(inlineeStmt,newInlinee);
      }
    }
    Iterator trapsIt=specInvokeExpr.getMethod().getActiveBody().getTraps().iterator();
    while (trapsIt.hasNext()) {
      Trap t=(Trap)trapsIt.next();
      System.out.println("begin: " + t.getBeginUnit());
      Stmt newBegin=oldStmtsToNew.get(t.getBeginUnit());
      System.out.println("end: " + t.getEndUnit());
      Stmt newEnd=oldStmtsToNew.get(t.getEndUnit());
      System.out.println("handler: " + t.getHandlerUnit());
      Stmt newHandler=oldStmtsToNew.get(t.getHandlerUnit());
      if (newBegin == null || newEnd == null || newHandler == null)       throw new RuntimeException("couldn't map trap!");
      b.getTraps().add(Jimple.v().newTrap(t.getException(),newBegin,newEnd,newHandler));
    }
    inlineeIt=specInvokeExpr.getMethod().getActiveBody().getUnits().iterator();
    while (inlineeIt.hasNext()) {
      Stmt inlineeStmt=(Stmt)inlineeIt.next();
      if (inlineeStmt instanceof GotoStmt) {
        System.out.println("inlinee goto target: " + ((GotoStmt)inlineeStmt).getTarget());
        ((GotoStmt)oldStmtsToNew.get(inlineeStmt)).setTarget(oldStmtsToNew.get(((GotoStmt)inlineeStmt).getTarget()));
      }
    }
    containerUnits.remove(invokeStmt);
    LocalNameStandardizer.v().transform(b,"ji.lns");
  }
}
