{
  UnitGraph g=new ExceptionalUnitGraph(b);
  LocalDefs sld=new SmartLocalDefs(g,new SimpleLiveLocals(g));
  NaiveSideEffectTester nset=new NaiveSideEffectTester();
  LoopFinder lf=new LoopFinder();
  lf.internalTransform(b,phaseName,options);
  Collection<Loop> loops=lf.loops();
  constants=new ArrayList();
  if (loops.isEmpty())   return;
  Iterator<Loop> lIt=loops.iterator();
  while (lIt.hasNext()) {
    Loop loop=lIt.next();
    Stmt header=loop.getHead();
    Collection<Stmt> loopStmts=loop.getLoopStatements();
    Iterator<Stmt> bIt=loopStmts.iterator();
    while (bIt.hasNext()) {
      Stmt tStmt=bIt.next();
      handleLoopBodyStmt(tStmt,nset,loopStmts);
    }
  }
}
