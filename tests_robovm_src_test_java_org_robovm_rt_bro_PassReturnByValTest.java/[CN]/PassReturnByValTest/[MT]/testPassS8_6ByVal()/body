{
  S8_6 s=new S8_6();
  s.m0_0(0.1234);
  s.m0_1((byte)83);
  s.m1_0(123.4567);
  s.m1_1((byte)103);
  s.m2_0(123456.789);
  s.m2_1((byte)189);
  s.m3_0(12345678.90123);
  s.m3_1((byte)247);
  s.m4_0(0.1234);
  s.m4_1((byte)83);
  s.m5_0(123.4567);
  s.m5_1((byte)103);
  s.m6_0(123456.789);
  s.m6_1((byte)189);
  s.m7_0(12345678.90123);
  s.m7_1((byte)247);
  assertEquals(0.1234,native_get_S8_6_m0_0(s));
  assertEquals((byte)83,native_get_S8_6_m0_1(s));
  assertEquals(123.4567,native_get_S8_6_m1_0(s));
  assertEquals((byte)103,native_get_S8_6_m1_1(s));
  assertEquals(123456.789,native_get_S8_6_m2_0(s));
  assertEquals((byte)189,native_get_S8_6_m2_1(s));
  assertEquals(12345678.90123,native_get_S8_6_m3_0(s));
  assertEquals((byte)247,native_get_S8_6_m3_1(s));
  assertEquals(0.1234,native_get_S8_6_m4_0(s));
  assertEquals((byte)83,native_get_S8_6_m4_1(s));
  assertEquals(123.4567,native_get_S8_6_m5_0(s));
  assertEquals((byte)103,native_get_S8_6_m5_1(s));
  assertEquals(123456.789,native_get_S8_6_m6_0(s));
  assertEquals((byte)189,native_get_S8_6_m6_1(s));
  assertEquals(12345678.90123,native_get_S8_6_m7_0(s));
  assertEquals((byte)247,native_get_S8_6_m7_1(s));
}
