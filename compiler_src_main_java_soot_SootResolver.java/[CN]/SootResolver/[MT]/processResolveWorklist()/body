{
  for (int i=SootClass.BODIES; i >= SootClass.HIERARCHY; i--) {
    while (!worklist[i].isEmpty()) {
      SootClass sc=(SootClass)worklist[i].removeFirst();
      if (resolveEverything()) {
        boolean onlySignatures=sc.isPhantom() || (Options.v().no_bodies_for_excluded() && Scene.v().isExcluded(sc) && !Scene.v().getBasicClasses().contains(sc.getName()));
        if (onlySignatures) {
          bringToSignatures(sc);
          sc.setPhantomClass();
          if (sc.isPhantom()) {
            for (            SootMethod m : sc.getMethods()) {
              m.setPhantom(true);
            }
            for (            SootField f : sc.getFields()) {
              f.setPhantom(true);
            }
          }
        }
 else         bringToBodies(sc);
      }
 else {
switch (i) {
case SootClass.BODIES:
          bringToBodies(sc);
        break;
case SootClass.SIGNATURES:
      bringToSignatures(sc);
    break;
case SootClass.HIERARCHY:
  bringToHierarchy(sc);
break;
}
}
}
}
}
