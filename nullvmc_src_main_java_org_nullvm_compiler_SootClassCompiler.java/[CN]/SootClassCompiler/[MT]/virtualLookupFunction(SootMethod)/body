{
  String name=mangleMethod(method) + "_lookup";
  Function function=createFunction(name,method);
  FunctionType functionType=function.getType();
  function.newBasicBlock(new Object());
  Variable fptr=function.newVariable(I8_PTR);
  Value nameRef=new ConstantGetelementptr(new GlobalRef(addString(method.getName())),0,0);
  Value descRef=new ConstantGetelementptr(new GlobalRef(addString(getDescriptor(method.makeRef()))),0,0);
  function.add(new Call(fptr,NVM_BC_LOOKUP_VIRTUAL_METHOD,ENV,new VariableRef("this",OBJECT_PTR),nameRef,descRef));
  Variable f=function.newVariable(functionType);
  function.add(new Bitcast(f,new VariableRef(fptr),function.getType()));
  String[] parameterNames=function.getParameterNames();
  Type[] parameterTypes=function.getType().getParameterTypes();
  Value[] args=new Value[parameterNames.length];
  for (int i=0; i < args.length; i++) {
    args[i]=new VariableRef(parameterNames[i],parameterTypes[i]);
  }
  if (function.getType().getReturnType() == VOID) {
    function.add(new Call(new VariableRef(f),args));
    function.add(new Ret());
  }
 else {
    Variable result=function.newVariable(functionType.getReturnType());
    function.add(new Call(result,new VariableRef(f),args));
    function.add(new Ret(new VariableRef(result)));
  }
}
