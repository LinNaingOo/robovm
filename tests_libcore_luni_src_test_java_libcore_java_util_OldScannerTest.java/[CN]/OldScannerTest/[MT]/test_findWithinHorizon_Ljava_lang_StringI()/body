{
  s=new Scanner("123test");
  String result=s.findWithinHorizon("\\p{Lower}",5);
  assertEquals("t",result);
  MatchResult mresult=s.match();
  assertEquals(3,mresult.start());
  assertEquals(4,mresult.end());
  s=new Scanner("12345test1234test next");
  result=s.findWithinHorizon("\\p{Digit}+",2);
  assertEquals("12",result);
  mresult=s.match();
  assertEquals(0,mresult.start());
  assertEquals(2,mresult.end());
  result=s.findWithinHorizon("\\p{Digit}+",6);
  assertEquals("345",result);
  mresult=s.match();
  assertEquals(2,mresult.start());
  assertEquals(5,mresult.end());
  result=s.findWithinHorizon("\\p{Digit}+",3);
  assertNull(result);
  try {
    s.match();
    fail("Should throw IllegalStateException");
  }
 catch (  IllegalStateException e) {
  }
  assertEquals("345",mresult.group());
  assertEquals(2,mresult.start());
  assertEquals(5,mresult.end());
  result=s.findWithinHorizon("\\p{Digit}+",0);
  mresult=s.match();
  assertEquals(9,mresult.start());
  assertEquals(13,mresult.end());
  assertEquals("test",s.next());
  mresult=s.match();
  assertEquals(13,mresult.start());
  assertEquals(17,mresult.end());
  assertEquals("next",s.next());
  mresult=s.match();
  assertEquals(18,mresult.start());
  assertEquals(22,mresult.end());
  try {
    s.findWithinHorizon((String)null,1);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException e) {
  }
  try {
    s.findWithinHorizon("\\p{Digit}+",-1);
    fail("Should throw IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
  s.close();
  s=new Scanner("test");
  result=s.findWithinHorizon("\\w+",10);
  assertEquals("test",result);
  s=new Scanner("aa\n\rb");
  String patternStr="^(a)$";
  result=s.findWithinHorizon("a",5);
  assertEquals("a",result);
  mresult=s.match();
  assertEquals(0,mresult.start());
  assertEquals(1,mresult.end());
  result=s.findWithinHorizon(patternStr,5);
  assertNull(result);
  try {
    mresult=s.match();
    fail("Should throw IllegalStateException");
  }
 catch (  IllegalStateException e) {
  }
  s=new Scanner("");
  result=s.findWithinHorizon("^",0);
  assertEquals("",result);
  MatchResult matchResult=s.match();
  assertEquals(0,matchResult.start());
  assertEquals(0,matchResult.end());
  result=s.findWithinHorizon("$",0);
  assertEquals("",result);
  matchResult=s.match();
  assertEquals(0,matchResult.start());
  assertEquals(0,matchResult.end());
  s=new Scanner("1 fish 2 fish red fish blue fish");
  result=s.findWithinHorizon("(\\d+) fish (\\d+) fish (\\w+) fish (\\w+)",10);
  assertNull(result);
  try {
    mresult=s.match();
    fail("Should throw IllegalStateException");
  }
 catch (  IllegalStateException e) {
  }
  assertEquals(0,mresult.groupCount());
  result=s.findWithinHorizon("(\\d+) fish (\\d+) fish (\\w+) fish (\\w+)",100);
  assertEquals("1 fish 2 fish red fish blue",result);
  mresult=s.match();
  assertEquals(4,mresult.groupCount());
  assertEquals("1",mresult.group(1));
  assertEquals("2",mresult.group(2));
  assertEquals("red",mresult.group(3));
  assertEquals("blue",mresult.group(4));
  s=new Scanner("test");
  s.close();
  try {
    s.findWithinHorizon("test",1);
    fail("Should throw IllegalStateException");
  }
 catch (  IllegalStateException e) {
  }
  s=new Scanner("word1 WorD2  ");
  s.close();
  try {
    s.findWithinHorizon("\\d+",10);
    fail("should throw IllegalStateException");
  }
 catch (  IllegalStateException e) {
  }
  s=new Scanner("word1 WorD2 wOrd3 ");
  patternStr="\\d+";
  assertEquals("1",s.findWithinHorizon(patternStr,10));
  assertEquals("WorD2",s.next());
  assertEquals("3",s.findWithinHorizon(patternStr,15));
  s=new Scanner(new MockStringReader("MockStringReader"));
  patternStr="test";
  result=s.findWithinHorizon(patternStr,10);
  assertEquals("test",result);
  StringBuilder stringBuilder=new StringBuilder();
  for (int i=0; i < 1026; i++) {
    stringBuilder.append('a');
  }
  s=new Scanner(stringBuilder.toString());
  patternStr="\\p{Lower}+";
  result=s.findWithinHorizon(patternStr,1026);
  assertEquals(stringBuilder.toString(),result);
  stringBuilder=new StringBuilder();
  for (int i=0; i < 1026; i++) {
    stringBuilder.append('a');
  }
  s=new Scanner(stringBuilder.toString());
  patternStr="\\p{Lower}+";
  result=s.findWithinHorizon(patternStr,1022);
  assertEquals(1022,result.length());
  assertEquals(stringBuilder.subSequence(0,1022),result);
  stringBuilder=new StringBuilder();
  for (int i=0; i < 1022; i++) {
    stringBuilder.append(' ');
  }
  stringBuilder.append("bbc");
  assertEquals(1025,stringBuilder.length());
  s=new Scanner(stringBuilder.toString());
  patternStr="bbc";
  result=s.findWithinHorizon(patternStr,1025);
  assertEquals(3,result.length());
  assertEquals(stringBuilder.subSequence(1022,1025),result);
  stringBuilder=new StringBuilder();
  for (int i=0; i < 1026; i++) {
    stringBuilder.append('a');
  }
  s=new Scanner(stringBuilder.toString());
  patternStr="\\p{Lower}+";
  result=s.findWithinHorizon(patternStr,0);
  assertEquals(stringBuilder.toString(),result);
  stringBuilder=new StringBuilder();
  for (int i=0; i < 10240; i++) {
    stringBuilder.append('-');
  }
  stringBuilder.replace(0,2,"aa");
  s=new Scanner(stringBuilder.toString());
  result=s.findWithinHorizon("aa",0);
  assertEquals("aa",result);
  s=new Scanner("aaaa");
  result=s.findWithinHorizon("a*",0);
  assertEquals("aaaa",result);
}
