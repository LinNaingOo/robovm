{
  Set<Value> usedFieldRefs=new HashSet<Value>();
  for (  Unit unit : this.graph) {
    Stmt s=(Stmt)unit;
    List<ValueBox> useBoxes=s.getUseBoxes();
    for (    ValueBox useBox : useBoxes) {
      Value val=useBox.getValue();
      if (val instanceof FieldRef) {
        FieldRef fieldRef=(FieldRef)val;
        if (fieldRef.getType() instanceof RefLikeType)         usedFieldRefs.add(new EquivalentValue(fieldRef));
      }
    }
  }
  if (!usedFieldRefs.isEmpty()) {
    if (!Scene.v().hasCallGraph()) {
      throw new IllegalStateException("No call graph found!");
    }
    CallGraph cg=Scene.v().getCallGraph();
    ReachableMethods reachableMethods=new ReachableMethods(cg,Collections.<MethodOrMethodContext>singletonList(container));
    reachableMethods.update();
    for (Iterator<MethodOrMethodContext> iterator=reachableMethods.listener(); iterator.hasNext(); ) {
      SootMethod m=(SootMethod)iterator.next();
      if (m.hasActiveBody() && !(m.getName().equals(SootMethod.staticInitializerName) && m.getDeclaringClass().equals(container.getDeclaringClass()))) {
        for (        Unit u : m.getActiveBody().getUnits()) {
          List<ValueBox> defBoxes=u.getDefBoxes();
          for (          ValueBox defBox : defBoxes) {
            Value value=defBox.getValue();
            if (value instanceof FieldRef) {
              usedFieldRefs.remove(new EquivalentValue(value));
            }
          }
        }
      }
    }
  }
  return usedFieldRefs;
}
