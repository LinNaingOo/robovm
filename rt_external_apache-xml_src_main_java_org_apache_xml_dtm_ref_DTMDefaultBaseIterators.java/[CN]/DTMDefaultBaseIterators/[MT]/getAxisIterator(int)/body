{
  DTMAxisIterator iterator=null;
switch (axis) {
case Axis.SELF:
    iterator=new SingletonIterator();
  break;
case Axis.CHILD:
iterator=new ChildrenIterator();
break;
case Axis.PARENT:
return (new ParentIterator());
case Axis.ANCESTOR:
return (new AncestorIterator());
case Axis.ANCESTORORSELF:
return ((new AncestorIterator()).includeSelf());
case Axis.ATTRIBUTE:
return (new AttributeIterator());
case Axis.DESCENDANT:
iterator=new DescendantIterator();
break;
case Axis.DESCENDANTORSELF:
iterator=(new DescendantIterator()).includeSelf();
break;
case Axis.FOLLOWING:
iterator=new FollowingIterator();
break;
case Axis.PRECEDING:
iterator=new PrecedingIterator();
break;
case Axis.FOLLOWINGSIBLING:
iterator=new FollowingSiblingIterator();
break;
case Axis.PRECEDINGSIBLING:
iterator=new PrecedingSiblingIterator();
break;
case Axis.NAMESPACE:
iterator=new NamespaceIterator();
break;
case Axis.ROOT:
iterator=new RootIterator();
break;
default :
throw new DTMException(XMLMessages.createXMLMessage(XMLErrorResources.ER_ITERATOR_AXIS_NOT_IMPLEMENTED,new Object[]{Axis.getNames(axis)}));
}
return (iterator);
}
