{
  BigInteger exp=new BigInteger("0");
  BigInteger[] base=new BigInteger[]{new BigInteger("-1"),new BigInteger("0"),new BigInteger("1")};
  BigInteger[] mod=new BigInteger[]{new BigInteger("2"),new BigInteger("10"),new BigInteger("2147483648")};
  for (int i=0; i < base.length; ++i) {
    for (int j=0; j < mod.length; ++j) {
      assertEquals(base[i] + " modePow(" + exp+ ", "+ mod[j]+ ") should be "+ BigInteger.ONE,BigInteger.ONE,base[i].modPow(exp,mod[j]));
    }
  }
  mod=new BigInteger[]{new BigInteger("1")};
  for (int i=0; i < base.length; ++i) {
    for (int j=0; j < mod.length; ++j) {
      assertEquals(base[i] + " modePow(" + exp+ ", "+ mod[j]+ ") should be "+ BigInteger.ZERO,BigInteger.ZERO,base[i].modPow(exp,mod[j]));
    }
  }
}
