{
  bi=new BigInteger(10,5,rand);
  bi2=new BigInteger(10,5,rand);
  assertTrue("Random number one is negative",bi.compareTo(zero) >= 0);
  assertTrue("Random number one is too big",bi.compareTo(twoToTheTen) < 0);
  assertTrue("Random number two is negative",bi2.compareTo(zero) >= 0);
  assertTrue("Random number two is too big",bi2.compareTo(twoToTheTen) < 0);
  Random rand=new Random();
  BigInteger bi;
  int certainty[]={0,1,2,3,4,5,6,7,8,9,10,Integer.MIN_VALUE,Integer.MIN_VALUE + 1,-2,-1};
  for (int i=2; i <= 20; i++) {
    for (int c=0; c < certainty.length; c++) {
      bi=new BigInteger(i,c,rand);
      assertTrue("Bit length incorrect",bi.bitLength() == i);
    }
  }
  try {
    new BigInteger(1,80,(Random)null);
    fail("ArithmeticException expected");
  }
 catch (  ArithmeticException e) {
  }
  try {
    new BigInteger(-1,(Random)null);
    fail("IllegalArgumentException expected");
  }
 catch (  IllegalArgumentException e) {
  }
}
