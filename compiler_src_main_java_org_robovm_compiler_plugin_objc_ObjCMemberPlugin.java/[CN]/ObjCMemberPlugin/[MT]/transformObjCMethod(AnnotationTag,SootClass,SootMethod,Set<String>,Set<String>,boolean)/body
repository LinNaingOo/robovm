{
  String selectorName=getObjCMethodSelectorName(annotation,method,extensions);
  if (!extensions && isCustomClass(sootClass)) {
    createCallback(sootClass,method,method,selectorName,getReceiverType(sootClass));
  }
  if (method.isNative()) {
    if (checkOverridable(overridables,selectorName,method)) {
      overridables.add(selectorName);
    }
    selectors.add(selectorName);
    createBridge(sootClass,method,selectorName,false,extensions);
  }
}
