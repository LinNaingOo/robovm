{
  List<Type> paramTypes=new ArrayList<>();
  if (extensions) {
    paramTypes.add(method.getParameterType(0));
  }
 else   if (method.isStatic()) {
    paramTypes.add(org_robovm_objc_ObjCClass.getType());
  }
 else {
    paramTypes.add(receiverType == null ? method.getDeclaringClass().getType() : receiverType);
  }
  paramTypes.add(org_robovm_objc_Selector.getType());
  if (extensions) {
    paramTypes.addAll(method.getParameterTypes().subList(1,method.getParameterTypes().size()));
  }
 else {
    paramTypes.addAll(method.getParameterTypes());
  }
  SootMethod m=new SootMethod((isCallback ? "$cb$" : "$m$") + selectorName.replace(':','$'),paramTypes,method.getReturnType(),STATIC | PRIVATE | (isCallback ? 0 : NATIVE));
  copyAnnotations(method,m,Visibility.RuntimeVisible);
  if (extensions) {
    copyParameterAnnotations(method,m,0,1,0,Visibility.RuntimeVisible);
    if (method.getParameterCount() > 1) {
      copyParameterAnnotations(method,m,1,method.getParameterCount(),1,Visibility.RuntimeVisible);
    }
  }
 else {
    copyParameterAnnotations(method,m,0,method.getParameterCount(),2,Visibility.RuntimeVisible);
  }
  return m;
}
