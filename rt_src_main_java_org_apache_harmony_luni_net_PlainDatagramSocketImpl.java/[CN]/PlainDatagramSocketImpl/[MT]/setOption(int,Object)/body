{
  if (optID == SocketOptions.SO_REUSEADDR) {
    optID=REUSEADDR_AND_REUSEPORT;
  }
  if (optID == SocketOptions.SO_TIMEOUT) {
    receiveTimeout=((Integer)val).intValue();
  }
 else {
    int flags=netImpl.getSocketFlags();
    try {
      netImpl.setSocketOption(fd,optID | (flags << 16),val);
    }
 catch (    SocketException e) {
      if (optID != SocketOptions.IP_TOS) {
        throw e;
      }
    }
    if (optID == SocketOptions.IP_MULTICAST_IF && (flags & MULTICAST_IF) != 0) {
      InetAddress inet=(InetAddress)val;
      if (NetUtil.bytesToInt(inet.getAddress(),0) == 0 || inet.isLoopbackAddress()) {
        ipaddress=((InetAddress)val).getAddress();
      }
 else {
        InetAddress local=null;
        try {
          local=InetAddress.getLocalHost();
        }
 catch (        UnknownHostException e) {
          throw new SocketException("getLocalHost(): " + e.toString());
        }
        if (inet.equals(local)) {
          ipaddress=((InetAddress)val).getAddress();
        }
 else {
          throw new SocketException(val + " != getLocalHost(): " + local);
        }
      }
    }
    if (optID == SocketOptions.IP_TOS) {
      trafficClass=((Integer)val).intValue();
    }
  }
}
