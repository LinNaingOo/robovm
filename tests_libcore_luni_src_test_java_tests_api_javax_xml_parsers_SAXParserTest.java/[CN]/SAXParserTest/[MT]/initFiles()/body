{
  try {
    SAXParser parser=SAXParserFactory.newInstance().newSAXParser();
    validating=parser.isValidating();
  }
 catch (  Exception e) {
    fail("could not obtain a SAXParser");
  }
  String tmpPath=System.getProperty("java.io.tmpdir");
  list_wf=new File[]{new File(tmpPath + "/" + SAXParserTestSupport.XML_WF+ "staff.xml")};
  list_nwf=new File[]{new File(tmpPath + "/" + SAXParserTestSupport.XML_NWF+ "staff.xml")};
  list_out_dh=new File[]{new File(tmpPath + "/" + SAXParserTestSupport.XML_WF_OUT_DH+ "staff.out")};
  list_out_hb=new File[]{new File(tmpPath + "/" + SAXParserTestSupport.XML_WF_OUT_HB+ "staff.out")};
  list_wf[0].deleteOnExit();
  list_nwf[0].deleteOnExit();
  list_out_hb[0].deleteOnExit();
  list_out_dh[0].deleteOnExit();
  Support_Resources.copyLocalFileto(list_wf[0],getResource(SAXParserTestSupport.XML_WF + "staff.xml"));
  Support_Resources.copyLocalFileto(new File(tmpPath + "/" + SAXParserTestSupport.XML_WF+ "staff.dtd"),getResource(SAXParserTestSupport.XML_WF + "staff.dtd"));
  Support_Resources.copyLocalFileto(list_nwf[0],getResource(SAXParserTestSupport.XML_NWF + "staff.xml"));
  Support_Resources.copyLocalFileto(new File(tmpPath + "/" + SAXParserTestSupport.XML_NWF+ "staff.dtd"),getResource(SAXParserTestSupport.XML_NWF + "staff.dtd"));
  Support_Resources.copyLocalFileto(list_out_dh[0],getResource(SAXParserTestSupport.XML_WF_OUT_DH + "staff.out"));
  Support_Resources.copyLocalFileto(list_out_hb[0],getResource(SAXParserTestSupport.XML_WF_OUT_HB + "staff.out"));
}
