{
  byte[] directionalities={Character.DIRECTIONALITY_LEFT_TO_RIGHT,Character.DIRECTIONALITY_LEFT_TO_RIGHT,Character.DIRECTIONALITY_RIGHT_TO_LEFT,Character.DIRECTIONALITY_ARABIC_NUMBER,Character.DIRECTIONALITY_EUROPEAN_NUMBER,Character.DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR,Character.DIRECTIONALITY_ARABIC_NUMBER,Character.DIRECTIONALITY_COMMON_NUMBER_SEPARATOR,Character.DIRECTIONALITY_NONSPACING_MARK,Character.DIRECTIONALITY_BOUNDARY_NEUTRAL,Character.DIRECTIONALITY_PARAGRAPH_SEPARATOR,Character.DIRECTIONALITY_SEGMENT_SEPARATOR,Character.DIRECTIONALITY_WHITESPACE,Character.DIRECTIONALITY_OTHER_NEUTRALS,Character.DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING,Character.DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE,Character.DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING,Character.DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE,Character.DIRECTIONALITY_POP_DIRECTIONAL_FORMAT};
  char[] characters={'\u0370','\u00B5','\u05BE','\u0600','\u00B2','\u00B1','\u0660','\u00A0','\u0300','\u009F','\u0085','\u001F','\u0020','\u00AB','\u202A','\u202D','\u202B','\u202E','\u202C'};
  for (int i=0; i < directionalities.length; i++) {
    assertEquals(directionalities[i],Character.getDirectionality(characters[i]));
  }
}
