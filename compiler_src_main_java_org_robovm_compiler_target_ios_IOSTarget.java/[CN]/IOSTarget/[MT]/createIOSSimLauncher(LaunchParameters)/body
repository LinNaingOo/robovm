{
  File dir=getAppDir();
  String iosSimPath=new File(config.getHome().getBinDir(),"ios-sim").getAbsolutePath();
  List<Object> args=new ArrayList<Object>();
  args.add("launch");
  args.add(dir);
  args.add("--timeout");
  args.add("90");
  args.add("--unbuffered");
  if (((IOSSimulatorLaunchParameters)launchParameters).getSdk() != null) {
    args.add("--sdk");
    args.add(((IOSSimulatorLaunchParameters)launchParameters).getSdk());
  }
  args.addAll(((IOSSimulatorLaunchParameters)launchParameters).getFamily().getIosSimArgs());
  if (launchParameters.getStdoutFifo() != null) {
    args.add("--stdout");
    args.add(launchParameters.getStdoutFifo());
  }
  if (launchParameters.getStderrFifo() != null) {
    args.add("--stderr");
    args.add(launchParameters.getStderrFifo());
  }
  if (launchParameters.getEnvironment() != null) {
    for (    Entry<String,String> entry : launchParameters.getEnvironment().entrySet()) {
      args.add("--setenv");
      args.add(entry.getKey() + "=" + entry.getValue());
    }
  }
  if (!launchParameters.getArguments().isEmpty()) {
    args.add("--args");
    args.addAll(launchParameters.getArguments());
  }
  File xcodePath=new File(ToolchainUtil.findXcodePath());
  Map<String,String> env=Collections.singletonMap("DEVELOPER_DIR",xcodePath.getAbsolutePath());
  return new Executor(config.getLogger(),iosSimPath).args(args).wd(launchParameters.getWorkingDirectory()).inheritEnv(false).env(env);
}
