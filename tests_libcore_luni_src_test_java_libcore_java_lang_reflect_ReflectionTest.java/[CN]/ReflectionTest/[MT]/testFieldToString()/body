{
  Field fieldOne=C.class.getDeclaredField("fieldOne");
  String fieldOneRaw="public static " + classA + " "+ classC+ ".fieldOne";
  assertEquals(fieldOneRaw,fieldOne.toString());
  assertEquals(fieldOneRaw,fieldOne.toGenericString());
  Field fieldTwo=C.class.getDeclaredField("fieldTwo");
  assertEquals("private transient volatile java.util.Map " + classC + ".fieldTwo",fieldTwo.toString());
  assertEquals("private transient volatile java.util.Map<" + classA + ", java.lang.String> "+ classC+ ".fieldTwo",fieldTwo.toGenericString());
  Field fieldThree=C.class.getDeclaredField("fieldThree");
  String fieldThreeRaw="protected java.lang.Object[] " + classC + ".fieldThree";
  assertEquals(fieldThreeRaw,fieldThree.toString());
  String fieldThreeGeneric="protected K[] " + classC + ".fieldThree";
  assertEquals(fieldThreeGeneric,fieldThree.toGenericString());
  Field fieldFour=C.class.getDeclaredField("fieldFour");
  String fieldFourRaw="java.util.Map " + classC + ".fieldFour";
  assertEquals(fieldFourRaw,fieldFour.toString());
  String fieldFourGeneric="java.util.Map<? super java.lang.Integer, java.lang.Integer[]> " + classC + ".fieldFour";
  assertEquals(fieldFourGeneric,fieldFour.toGenericString());
  Field fieldFive=C.class.getDeclaredField("fieldFive");
  String fieldFiveRaw="java.lang.String[][][][][] " + classC + ".fieldFive";
  assertEquals(fieldFiveRaw,fieldFive.toString());
  assertEquals(fieldFiveRaw,fieldFive.toGenericString());
}
