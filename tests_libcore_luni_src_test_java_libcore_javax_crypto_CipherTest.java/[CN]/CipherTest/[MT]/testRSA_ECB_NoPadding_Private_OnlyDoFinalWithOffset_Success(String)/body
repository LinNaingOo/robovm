{
  KeyFactory kf=KeyFactory.getInstance("RSA");
  RSAPrivateKeySpec keySpec=new RSAPrivateKeySpec(RSA_2048_modulus,RSA_2048_privateExponent);
  final PrivateKey privKey=kf.generatePrivate(keySpec);
  Cipher c=Cipher.getInstance("RSA/ECB/NoPadding",provider);
  c.init(Cipher.ENCRYPT_MODE,privKey);
  byte[] encrypted=new byte[RSA_Vector1_Encrypt_Private.length];
  final int encryptLen=c.doFinal(RSA_2048_Vector1,0,RSA_2048_Vector1.length,encrypted,0);
  assertEquals("Encrypted size should match expected",RSA_Vector1_Encrypt_Private.length,encryptLen);
  assertTrue("Encrypted should match expected",Arrays.equals(RSA_Vector1_Encrypt_Private,encrypted));
  c.init(Cipher.DECRYPT_MODE,privKey);
  final int decryptLen=c.doFinal(RSA_2048_Vector1,0,RSA_2048_Vector1.length,encrypted,0);
  assertEquals("Encrypted size should match expected",RSA_Vector1_Encrypt_Private.length,decryptLen);
  assertTrue("Encrypted should match expected",Arrays.equals(RSA_Vector1_Encrypt_Private,encrypted));
}
