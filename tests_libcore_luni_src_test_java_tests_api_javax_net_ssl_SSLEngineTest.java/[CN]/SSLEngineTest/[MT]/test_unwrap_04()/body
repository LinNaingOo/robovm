{
  String host="new host";
  int port=8080;
  ByteBuffer[] bbA={ByteBuffer.allocate(100),ByteBuffer.allocate(10),ByteBuffer.allocate(100)};
  ByteBuffer[] bbAN={ByteBuffer.allocate(100),null,ByteBuffer.allocate(100)};
  ByteBuffer[] bbN=null;
  ByteBuffer bb=ByteBuffer.allocate(10);
  ByteBuffer bN=null;
  SSLEngine sse=getEngine(host,port);
  sse.setUseClientMode(true);
  try {
    sse.unwrap(bN,bbA,0,3);
    fail("IllegalArgumentException wasn't thrown");
  }
 catch (  IllegalArgumentException iobe) {
  }
catch (  NullPointerException npe) {
  }
catch (  Exception e) {
    fail(e + " was thrown instead of IllegalArgumentException");
  }
  try {
    sse.unwrap(bb,bbAN,0,3);
    fail("IllegalArgumentException wasn't thrown");
  }
 catch (  IllegalArgumentException iobe) {
  }
catch (  NullPointerException npe) {
  }
catch (  Exception e) {
    fail(e + " was thrown instead of IllegalArgumentException");
  }
  try {
    sse.unwrap(bb,bbN,0,0);
    fail("IllegalArgumentException wasn't thrown");
  }
 catch (  IllegalArgumentException iobe) {
  }
catch (  NullPointerException npe) {
  }
catch (  Exception e) {
    fail(e + " was thrown instead of IllegalArgumentException");
  }
  try {
    sse.unwrap(bN,bbN,0,0);
    fail("IllegalArgumentException wasn't thrown");
  }
 catch (  IllegalArgumentException iobe) {
  }
catch (  NullPointerException npe) {
  }
catch (  Exception e) {
    fail(e + " was thrown instead of IllegalArgumentException");
  }
}
