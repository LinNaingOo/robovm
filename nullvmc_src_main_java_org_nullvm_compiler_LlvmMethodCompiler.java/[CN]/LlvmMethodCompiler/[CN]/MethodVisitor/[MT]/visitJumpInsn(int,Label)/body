{
  if (opcode >= Opcodes.IFEQ && opcode <= Opcodes.IFLE) {
    String operator=(new String[]{"eq","ne","slt","sge","sgt","sle"})[opcode - Opcodes.IFEQ];
    Var op=pop("op");
    Var cond=tmp("cond","i1");
    String falseLabel=cond.getName() + "False";
    out.format("    %s = icmp %s i32 %s, 0\n",cond,operator,op);
    out.format("    br i1 %s, label %%%s, label %%%s\n",cond,label,falseLabel);
    out.format("%s:\n",falseLabel);
  }
 else   if (opcode >= Opcodes.IF_ICMPEQ && opcode <= Opcodes.IF_ICMPLE) {
    String operator=(new String[]{"eq","ne","slt","sge","sgt","sle"})[opcode - Opcodes.IF_ICMPEQ];
    Var op1=pop("op1");
    Var op2=pop("op2");
    Var cond=tmp("cond","i1");
    String falseLabel=cond.getName() + "False";
    out.format("    %s = icmp %s i32 %s, %s\n",cond,operator,op2,op1);
    out.format("    br i1 %s, label %%%s, label %%%s\n",cond,label,falseLabel);
    out.format("%s:\n",falseLabel);
  }
 else   if (opcode >= Opcodes.IF_ACMPEQ && opcode <= Opcodes.IF_ACMPNE) {
    String operator=(new String[]{"eq","ne"})[opcode - Opcodes.IF_ACMPEQ];
    Var op1=pop("op1");
    Var op2=pop("op2");
    Var cond=tmp("cond","i1");
    String falseLabel=cond.getName() + "False";
    out.format("    %s = icmp %s %%jobject* %s, %s\n",cond,operator,op2,op1);
    out.format("    br i1 %s, label %%%s, label %%%s\n",cond,label,falseLabel);
    out.format("%s:\n",falseLabel);
  }
 else   if (opcode >= Opcodes.IFNULL && opcode <= Opcodes.IFNONNULL) {
    String operator=(new String[]{"eq","ne"})[opcode - Opcodes.IFNULL];
    Var op=pop("op");
    Var cond=tmp("cond","i1");
    String falseLabel=cond.getName() + "False";
    out.format("    %s = icmp %s %%jobject* %s, inttoptr (i32 0 to %%jobject*)\n",cond,operator,op);
    out.format("    br i1 %s, label %%%s, label %%%s\n",cond,label,falseLabel);
    out.format("%s:\n",falseLabel);
  }
 else   if (opcode == Opcodes.GOTO) {
    out.format("    br label %%%s\n",label.toString());
  }
 else {
    throw new RuntimeException("Opcode not implemented: " + opcodeNames[opcode]);
  }
}
