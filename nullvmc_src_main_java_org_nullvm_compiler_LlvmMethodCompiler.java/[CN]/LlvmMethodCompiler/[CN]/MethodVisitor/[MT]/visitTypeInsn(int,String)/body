{
switch (opcode) {
case Opcodes.NEW:
{
      String function="NEW_" + LlvmUtil.mangleString(type);
      Var v=tmp(function,"%Object* ()");
      out.format("    %s = load %s** @%s\n",v,v.getType(),function);
      Var res=tmpr("res");
      if (currentTryCatchBlocks.isEmpty()) {
        out.format("    %s = call %%Object* %s()\n",res,v);
      }
 else {
        String successLabel=String.format("NewInstanceSuccess%d",pc);
        out.format("    %s = invoke %%Object* %s() to label %%%s unwind label %%%s\n",res,v,successLabel,currentLandingPad.getLabel());
        out.format("%s:\n",successLabel);
      }
      push(res);
      break;
    }
case Opcodes.ANEWARRAY:
{
    Var length=pop("length");
    Var res=tmpr("res");
    if (currentTryCatchBlocks.isEmpty()) {
      out.format("    %s = call %%Object* @nvmANewArray(i8* %s, i32 %s)\n",res,LlvmUtil.getStringReference(type),length);
    }
 else {
      String successLabel=String.format("ANewArraySuccess%d",pc);
      out.format("    %s = invoke %%Object* @nvmANewArray(i8* %s, i32 %s) to label %%%s unwind label %%%s\n",res,LlvmUtil.getStringReference(type),length,successLabel,currentLandingPad.getLabel());
      out.format("%s:\n",successLabel);
    }
    push(res);
    break;
  }
case Opcodes.CHECKCAST:
{
  Var obj=pop("obj");
  String function="CHECKCAST_" + LlvmUtil.mangleString(type);
  Var v=tmp(function,"void (%Object*)");
  out.format("    %s = load %s** @%s\n",v,v.getType(),function);
  if (currentTryCatchBlocks.isEmpty()) {
    out.format("    call void %s(%%Object* %s)\n",v,obj);
  }
 else {
    String successLabel=String.format("CheckCastSuccess%d",pc);
    out.format("    invoke void %s(%%Object* %s) to label %%%s unwind label %%%s\n",v,obj,successLabel,currentLandingPad.getLabel());
    out.format("%s:\n",successLabel);
  }
  push(obj);
  break;
}
case Opcodes.INSTANCEOF:
{
Var obj=pop("obj");
String function="INSTANCEOF_" + LlvmUtil.mangleString(type);
Var v=tmp(function,"i32 (%Object*)");
out.format("    %s = load %s** @%s\n",v,v.getType(),function);
Var res=tmpi("res");
if (currentTryCatchBlocks.isEmpty()) {
  out.format("    %s = call i32 %s(%%Object* %s)\n",res,v,obj);
}
 else {
  String successLabel=String.format("InstanceOfSuccess%d",pc);
  out.format("    %s = invoke i32 %s(%%Object* %s) to label %%%s unwind label %%%s\n",res,v,obj,successLabel,currentLandingPad.getLabel());
  out.format("%s:\n",successLabel);
}
push(res);
break;
}
default :
throw new RuntimeException("Opcode not implemented: " + opcodeNames[opcode]);
}
}
