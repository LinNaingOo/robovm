{
  TypeNode initial=type;
  if (type == null) {
    throw new InternalTypingException();
  }
  if (type == this) {
    return this;
  }
  if (hasAncestor(type)) {
    return type;
  }
  if (hasDescendant(type)) {
    return this;
  }
  do {
    if (type.parents.size() == 1) {
      type=(TypeNode)type.parents.get(0);
    }
 else {
      if (DEBUG) {
        G.v().out.println("lca " + initial + " ("+ type+ ") & "+ this+ " =");
        for (Iterator i=type.parents.iterator(); i.hasNext(); ) {
          G.v().out.println("  " + i.next());
        }
      }
      return null;
    }
  }
 while (!hasAncestor(type));
  return type;
}
