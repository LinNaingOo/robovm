{
  if (type == null) {
    throw new InternalTypingException();
  }
  if (type == this) {
    return this;
  }
  if (hasAncestor(type)) {
    return type;
  }
  if (hasDescendant(type)) {
    return this;
  }
  do {
    type=type.parentClass;
    if (type == null) {
      try {
        TypeVariable.error("Type Error(12)");
      }
 catch (      TypeException e) {
        if (DEBUG)         e.printStackTrace();
        throw e;
      }
    }
  }
 while (!hasAncestor(type));
  return type;
}
