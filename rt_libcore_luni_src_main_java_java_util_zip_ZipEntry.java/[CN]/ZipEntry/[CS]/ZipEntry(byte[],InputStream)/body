{
  Streams.readFully(cdStream,cdeHdrBuf,0,cdeHdrBuf.length);
  BufferIterator it=HeapBufferIterator.iterator(cdeHdrBuf,0,cdeHdrBuf.length,ByteOrder.LITTLE_ENDIAN);
  int sig=it.readInt();
  if (sig != CENSIG) {
    ZipFile.throwZipException("Central Directory Entry",sig);
  }
  it.seek(8);
  int gpbf=it.readShort() & 0xffff;
  if ((gpbf & ZipFile.GPBF_UNSUPPORTED_MASK) != 0) {
    throw new ZipException("Invalid General Purpose Bit Flag: " + gpbf);
  }
  compressionMethod=it.readShort() & 0xffff;
  time=it.readShort() & 0xffff;
  modDate=it.readShort() & 0xffff;
  crc=((long)it.readInt()) & 0xffffffffL;
  compressedSize=((long)it.readInt()) & 0xffffffffL;
  size=((long)it.readInt()) & 0xffffffffL;
  nameLength=it.readShort() & 0xffff;
  int extraLength=it.readShort() & 0xffff;
  int commentByteCount=it.readShort() & 0xffff;
  it.seek(42);
  localHeaderRelOffset=((long)it.readInt()) & 0xffffffffL;
  byte[] nameBytes=new byte[nameLength];
  Streams.readFully(cdStream,nameBytes,0,nameBytes.length);
  if (containsNulByte(nameBytes)) {
    throw new ZipException("Filename contains NUL byte: " + Arrays.toString(nameBytes));
  }
  name=new String(nameBytes,0,nameBytes.length,StandardCharsets.UTF_8);
  if (extraLength > 0) {
    extra=new byte[extraLength];
    Streams.readFully(cdStream,extra,0,extraLength);
  }
  if (commentByteCount > 0) {
    byte[] commentBytes=new byte[commentByteCount];
    Streams.readFully(cdStream,commentBytes,0,commentByteCount);
    comment=new String(commentBytes,0,commentBytes.length,StandardCharsets.UTF_8);
  }
}
