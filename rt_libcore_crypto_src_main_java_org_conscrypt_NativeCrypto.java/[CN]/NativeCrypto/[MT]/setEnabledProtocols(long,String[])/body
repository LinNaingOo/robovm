{
  checkEnabledProtocols(protocols);
  long optionsToSet=(SSL_OP_NO_SSLv3 | SSL_OP_NO_TLSv1 | SSL_OP_NO_TLSv1_1| SSL_OP_NO_TLSv1_2);
  long optionsToClear=0;
  for (int i=0; i < protocols.length; i++) {
    String protocol=protocols[i];
    if (protocol.equals(SUPPORTED_PROTOCOL_SSLV3)) {
      optionsToSet&=~SSL_OP_NO_SSLv3;
      optionsToClear|=SSL_OP_NO_SSLv3;
    }
 else     if (protocol.equals(SUPPORTED_PROTOCOL_TLSV1)) {
      optionsToSet&=~SSL_OP_NO_TLSv1;
      optionsToClear|=SSL_OP_NO_TLSv1;
    }
 else     if (protocol.equals(SUPPORTED_PROTOCOL_TLSV1_1)) {
      optionsToSet&=~SSL_OP_NO_TLSv1_1;
      optionsToClear|=SSL_OP_NO_TLSv1_1;
    }
 else     if (protocol.equals(SUPPORTED_PROTOCOL_TLSV1_2)) {
      optionsToSet&=~SSL_OP_NO_TLSv1_2;
      optionsToClear|=SSL_OP_NO_TLSv1_2;
    }
 else {
      throw new IllegalStateException();
    }
  }
  SSL_set_options(ssl,optionsToSet);
  SSL_clear_options(ssl,optionsToClear);
}
