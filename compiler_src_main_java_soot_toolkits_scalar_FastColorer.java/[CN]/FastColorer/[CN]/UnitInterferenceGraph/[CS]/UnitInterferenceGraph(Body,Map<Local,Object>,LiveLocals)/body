{
  locals=new ArrayList();
  locals.addAll(body.getLocals());
{
    localToLocals=new HashMap<Local,ArraySet>(body.getLocalCount() * 2 + 1,0.7f);
    Iterator localIt=body.getLocals().iterator();
    while (localIt.hasNext()) {
      Local local=(Local)localIt.next();
      localToLocals.put(local,new ArraySet());
    }
  }
{
    Iterator codeIt=body.getUnits().iterator();
    while (codeIt.hasNext()) {
      Unit unit=(Unit)codeIt.next();
      List liveLocalsAtUnit=liveLocals.getLiveLocalsAfter(unit);
{
        List defBoxes=unit.getDefBoxes();
        if (!defBoxes.isEmpty()) {
          if (!(defBoxes.size() == 1))           throw new RuntimeException("invalid number of def boxes");
          if (((ValueBox)defBoxes.get(0)).getValue() instanceof Local) {
            Local defLocal=(Local)((ValueBox)defBoxes.get(0)).getValue();
            Iterator localIt=liveLocalsAtUnit.iterator();
            while (localIt.hasNext()) {
              Local otherLocal=(Local)localIt.next();
              if (localToGroup.get(otherLocal).equals(localToGroup.get(defLocal)))               setInterference(defLocal,otherLocal);
            }
          }
        }
      }
    }
  }
}
