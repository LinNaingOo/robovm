{
  ObjectOutputStream.PutField fields=stream.putFields();
  fields.put("positivePrefix",dform.getPositivePrefix());
  fields.put("positiveSuffix",dform.getPositiveSuffix());
  fields.put("negativePrefix",dform.getNegativePrefix());
  fields.put("negativeSuffix",dform.getNegativeSuffix());
  String posPrefixPattern=(String)Format.getInternalField("posPrefixPattern",dform);
  fields.put("posPrefixPattern",posPrefixPattern);
  String posSuffixPattern=(String)Format.getInternalField("posSuffixPattern",dform);
  fields.put("posSuffixPattern",posSuffixPattern);
  String negPrefixPattern=(String)Format.getInternalField("negPrefixPattern",dform);
  fields.put("negPrefixPattern",negPrefixPattern);
  String negSuffixPattern=(String)Format.getInternalField("negSuffixPattern",dform);
  fields.put("negSuffixPattern",negSuffixPattern);
  fields.put("multiplier",dform.getMultiplier());
  fields.put("groupingSize",(byte)dform.getGroupingSize());
  fields.put("decimalSeparatorAlwaysShown",dform.isDecimalSeparatorAlwaysShown());
  fields.put("parseBigDecimal",parseBigDecimal);
  fields.put("symbols",symbols);
  boolean useExponentialNotation=((Boolean)Format.getInternalField("useExponentialNotation",dform)).booleanValue();
  fields.put("useExponentialNotation",useExponentialNotation);
  byte minExponentDigits=((Byte)Format.getInternalField("minExponentDigits",dform)).byteValue();
  fields.put("minExponentDigits",minExponentDigits);
  fields.put("maximumIntegerDigits",dform.getMaximumIntegerDigits());
  fields.put("minimumIntegerDigits",dform.getMinimumIntegerDigits());
  fields.put("maximumFractionDigits",dform.getMaximumFractionDigits());
  fields.put("minimumFractionDigits",dform.getMinimumFractionDigits());
  fields.put("serialVersionOnStream",CURRENT_SERIAL_VERTION);
  stream.writeFields();
}
