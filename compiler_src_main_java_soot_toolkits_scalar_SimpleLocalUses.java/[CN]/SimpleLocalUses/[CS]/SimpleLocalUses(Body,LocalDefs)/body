{
  if (Options.v().time())   Timers.v().usesTimer.start();
  if (Options.v().time())   Timers.v().usePhase1Timer.start();
  if (Options.v().verbose())   G.v().out.println("[" + body.getMethod().getName() + "]     Constructing SimpleLocalUses...");
  Chain units=body.getUnits();
  unitToUses=new HashMap<Unit,List>(units.size() * 2 + 1,0.7f);
{
    Iterator it=units.iterator();
    while (it.hasNext()) {
      Unit s=(Unit)it.next();
      unitToUses.put(s,new ArrayList());
    }
  }
  if (Options.v().time())   Timers.v().usePhase1Timer.end();
  if (Options.v().time())   Timers.v().usePhase2Timer.start();
{
    Iterator it=units.iterator();
    while (it.hasNext()) {
      Unit s=(Unit)it.next();
      Iterator boxIt=s.getUseBoxes().iterator();
      while (boxIt.hasNext()) {
        ValueBox useBox=(ValueBox)boxIt.next();
        if (useBox.getValue() instanceof Local) {
          Local l=(Local)useBox.getValue();
          List<Unit> possibleDefs=localDefs.getDefsOfAt(l,s);
          Iterator<Unit> defIt=possibleDefs.iterator();
          while (defIt.hasNext()) {
            List<UnitValueBoxPair> useList=unitToUses.get(defIt.next());
            useList.add(new UnitValueBoxPair(s,useBox));
          }
        }
      }
    }
  }
  if (Options.v().time())   Timers.v().usePhase2Timer.end();
  if (Options.v().time())   Timers.v().usePhase3Timer.start();
{
    Iterator it=units.iterator();
    while (it.hasNext()) {
      Unit s=(Unit)it.next();
      unitToUses.put(s,Collections.unmodifiableList(unitToUses.get(s)));
    }
  }
  if (Options.v().time())   Timers.v().usePhase3Timer.end();
  if (Options.v().time())   Timers.v().usesTimer.end();
  if (Options.v().verbose())   G.v().out.println("[" + body.getMethod().getName() + "]     finished SimpleLocalUses...");
}
