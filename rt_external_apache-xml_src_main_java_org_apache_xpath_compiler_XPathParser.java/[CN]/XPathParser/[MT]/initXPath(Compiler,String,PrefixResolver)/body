{
  m_ops=compiler;
  m_namespaceContext=namespaceContext;
  m_functionTable=compiler.getFunctionTable();
  Lexer lexer=new Lexer(compiler,namespaceContext,this);
  lexer.tokenize(expression);
  m_ops.setOp(0,OpCodes.OP_XPATH);
  m_ops.setOp(OpMap.MAPINDEX_LENGTH,2);
  try {
    nextToken();
    Expr();
    if (null != m_token) {
      String extraTokens="";
      while (null != m_token) {
        extraTokens+="'" + m_token + "'";
        nextToken();
        if (null != m_token)         extraTokens+=", ";
      }
      error(XPATHErrorResources.ER_EXTRA_ILLEGAL_TOKENS,new Object[]{extraTokens});
    }
  }
 catch (  org.apache.xpath.XPathProcessorException e) {
    if (CONTINUE_AFTER_FATAL_ERROR.equals(e.getMessage())) {
      initXPath(compiler,"/..",namespaceContext);
    }
 else     throw e;
  }
  compiler.shrink();
}
