{
  int opPos=m_ops.getOp(OpMap.MAPINDEX_LENGTH);
  if (-1 == addPos)   addPos=opPos;
  RelationalExpr(-1);
  if (null != m_token) {
    if (tokenIs('!') && lookahead('=',1)) {
      nextToken();
      nextToken();
      insertOp(addPos,2,OpCodes.OP_NOTEQUALS);
      int opPlusLeftHandLen=m_ops.getOp(OpMap.MAPINDEX_LENGTH) - addPos;
      addPos=EqualityExpr(addPos);
      m_ops.setOp(addPos + OpMap.MAPINDEX_LENGTH,m_ops.getOp(addPos + opPlusLeftHandLen + 1) + opPlusLeftHandLen);
      addPos+=2;
    }
 else     if (tokenIs('=')) {
      nextToken();
      insertOp(addPos,2,OpCodes.OP_EQUALS);
      int opPlusLeftHandLen=m_ops.getOp(OpMap.MAPINDEX_LENGTH) - addPos;
      addPos=EqualityExpr(addPos);
      m_ops.setOp(addPos + OpMap.MAPINDEX_LENGTH,m_ops.getOp(addPos + opPlusLeftHandLen + 1) + opPlusLeftHandLen);
      addPos+=2;
    }
  }
  return addPos;
}
