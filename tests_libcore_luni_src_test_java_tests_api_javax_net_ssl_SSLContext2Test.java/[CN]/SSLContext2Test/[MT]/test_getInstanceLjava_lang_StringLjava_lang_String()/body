{
  try {
    SSLContext.getInstance(null,mProv.getName());
    fail("NoSuchAlgorithmException or NullPointerException should be thrown " + "(protocol is null)");
  }
 catch (  NoSuchAlgorithmException e) {
  }
catch (  NullPointerException e) {
  }
  for (int i=0; i < invalidValues.length; i++) {
    try {
      SSLContext.getInstance(invalidValues[i],mProv.getName());
      fail("NoSuchAlgorithmException must be thrown (protocol: ".concat(invalidValues[i]).concat(")"));
    }
 catch (    NoSuchAlgorithmException e) {
    }
  }
  String prov=null;
  for (int i=0; i < validValues.length; i++) {
    try {
      SSLContext.getInstance(validValues[i],prov);
      fail("IllegalArgumentException must be thrown when provider is null (protocol: ".concat(invalidValues[i]).concat(")"));
    }
 catch (    IllegalArgumentException e) {
    }
    try {
      SSLContext.getInstance(validValues[i],"");
      fail("IllegalArgumentException must be thrown when provider is empty (protocol: ".concat(invalidValues[i]).concat(")"));
    }
 catch (    IllegalArgumentException e) {
    }
  }
  for (int i=0; i < validValues.length; i++) {
    for (int j=1; j < invalidValues.length; j++) {
      try {
        SSLContext.getInstance(validValues[i],invalidValues[j]);
        fail("NoSuchProviderException must be thrown (protocol: ".concat(invalidValues[i]).concat(" provider: ").concat(invalidValues[j]).concat(")"));
      }
 catch (      NoSuchProviderException e) {
      }
    }
  }
  SSLContext sslC;
  for (int i=0; i < validValues.length; i++) {
    sslC=SSLContext.getInstance(validValues[i],mProv.getName());
    assertTrue("Not instanceof SSLContext object",sslC instanceof SSLContext);
    assertEquals("Incorrect protocol",sslC.getProtocol(),validValues[i]);
    assertEquals("Incorrect provider",sslC.getProvider().getName(),mProv.getName());
    checkSSLContext(sslC);
  }
}
