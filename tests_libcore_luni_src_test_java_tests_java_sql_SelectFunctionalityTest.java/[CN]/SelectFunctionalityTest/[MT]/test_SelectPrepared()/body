{
  String sql="SELECT finteger, ftext, fcharacter, fdecimal, fnumeric," + " fsmallint, ffloat, freal, fdouble, fdate, ftime" + " FROM " + DatabaseCreator.TEST_TABLE2 + " WHERE finteger = ? AND ftext = ? AND fcharacter = ? AND"+ " fdecimal = ? AND fnumeric = ? AND fsmallint = ? AND"+ " freal = ? AND fdouble = ? AND fdate = ?"+ " AND ftime = ?";
  PreparedStatement prepStatement=conn.prepareStatement(sql);
  CharArrayReader reader=new CharArrayReader(new String(DatabaseCreator.defaultCharacter + "1").toCharArray());
  prepStatement.setInt(1,1);
  prepStatement.setString(2,DatabaseCreator.defaultString + "1");
  prepStatement.setInt(6,1);
  prepStatement.setDouble(7,1.1);
  prepStatement.setDouble(8,1.1);
  prepStatement.setDate(9,date);
  prepStatement.setTime(10,time);
  int counter=0;
  ResultSet result=prepStatement.executeQuery();
  while (result.next()) {
    int id=result.getInt("finteger");
    assertEquals("expected value doesn't equal actual",DatabaseCreator.defaultString + id,result.getString("ftext"));
    assertEquals("expected value doesn't equal actual",DatabaseCreator.defaultCharacter + id,result.getString("fcharacter"));
    assertEquals("expected value doesn't equal actual",id,result.getInt("fsmallint"));
    assertEquals("expected value doesn't equal actual",(float)(id + 0.1),result.getFloat("ffloat"));
    assertEquals("expected value doesn't equal actual",(double)(id + 0.1),result.getDouble("freal"));
    assertEquals("expected value doesn't equal actual",(double)(id + 0.1),result.getDouble("fdouble"));
    assertEquals("expected value doesn't equal actual",date.toString(),result.getDate("fdate").toString());
    assertEquals("expected value doesn't equal actual",time.toString(),result.getTime("ftime").toString());
    counter++;
  }
  prepStatement.close();
  result.close();
}
