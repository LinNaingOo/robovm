{
  int length=string.length();
  int index=position.getIndex();
  if (max > 0 && max < length - index) {
    length=index + max;
  }
  while (index < length && (string.charAt(index) == ' ' || string.charAt(index) == '\t')) {
    ++index;
  }
  if (max == 0) {
    position.setIndex(index);
    Number n=numberFormat.parse(string,position);
    if (n != null && n.longValue() < 0) {
      if (numberFormat instanceof DecimalFormat) {
        DecimalFormat df=(DecimalFormat)numberFormat;
        char lastChar=string.charAt(position.getIndex() - 1);
        char minusSign=df.getDecimalFormatSymbols().getMinusSign();
        if (lastChar == minusSign) {
          n=Long.valueOf(-n.longValue());
          position.setIndex(position.getIndex() - 1);
        }
      }
    }
    return n;
  }
  int result=0;
  int digit;
  while (index < length && (digit=Character.digit(string.charAt(index),10)) != -1) {
    result=result * 10 + digit;
    ++index;
  }
  if (index == position.getIndex()) {
    position.setErrorIndex(index);
    return null;
  }
  position.setIndex(index);
  return Integer.valueOf(result);
}
