{
synchronized (lock) {
    checkNotClosed();
    maybeSwallowLF();
    for (int i=pos; i < end; ++i) {
      char ch=buf[i];
      if (ch == '\n' || ch == '\r') {
        String line=new String(buf,pos,i - pos);
        pos=i + 1;
        lastWasCR=(ch == '\r');
        return line;
      }
    }
    StringBuilder result=new StringBuilder(end - pos + 80);
    result.append(buf,pos,end - pos);
    while (true) {
      pos=end;
      if (fillBuf() == -1) {
        return (result.length() > 0) ? result.toString() : null;
      }
      for (int i=pos; i < end; ++i) {
        char ch=buf[i];
        if (ch == '\n' || ch == '\r') {
          result.append(buf,pos,i - pos);
          pos=i + 1;
          lastWasCR=(ch == '\r');
          return result.toString();
        }
      }
      result.append(buf,pos,end - pos);
    }
  }
}
