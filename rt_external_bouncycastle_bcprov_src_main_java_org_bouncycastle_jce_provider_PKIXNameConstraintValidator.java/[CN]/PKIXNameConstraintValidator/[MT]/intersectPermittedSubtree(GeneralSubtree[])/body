{
  Map subtreesMap=new HashMap();
  for (int i=0; i != permitted.length; i++) {
    GeneralSubtree subtree=permitted[i];
    Integer tagNo=Integers.valueOf(subtree.getBase().getTagNo());
    if (subtreesMap.get(tagNo) == null) {
      subtreesMap.put(tagNo,new HashSet());
    }
    ((Set)subtreesMap.get(tagNo)).add(subtree);
  }
  for (Iterator it=subtreesMap.entrySet().iterator(); it.hasNext(); ) {
    Map.Entry entry=(Map.Entry)it.next();
switch (((Integer)entry.getKey()).intValue()) {
case 1:
      permittedSubtreesEmail=intersectEmail(permittedSubtreesEmail,(Set)entry.getValue());
    break;
case 2:
  permittedSubtreesDNS=intersectDNS(permittedSubtreesDNS,(Set)entry.getValue());
break;
case 4:
permittedSubtreesDN=intersectDN(permittedSubtreesDN,(Set)entry.getValue());
break;
case 6:
permittedSubtreesURI=intersectURI(permittedSubtreesURI,(Set)entry.getValue());
break;
case 7:
permittedSubtreesIP=intersectIP(permittedSubtreesIP,(Set)entry.getValue());
}
}
}
