{
  unitToEarliest=new HashMap<Unit,FlowSet>(unitGraph.size() + 1,0.7f);
  Iterator unitIt=unitGraph.iterator();
  while (unitIt.hasNext()) {
    Unit currentUnit=(Unit)unitIt.next();
    FlowSet earliest=(FlowSet)set.emptySet();
    unitToEarliest.put(currentUnit,earliest);
    FlowSet downSafeSet=((FlowSet)downSafe.getFlowBefore(currentUnit)).clone();
    List predList=unitGraph.getPredsOf(currentUnit);
    if (predList.size() == 0) {
      earliest.union(downSafeSet);
    }
 else {
      Iterator predIt=predList.iterator();
      while (predIt.hasNext()) {
        Unit predecessor=(Unit)predIt.next();
{
          Iterator downSafeIt=downSafeSet.iterator();
          while (downSafeIt.hasNext()) {
            EquivalentValue equiVal=(EquivalentValue)downSafeIt.next();
            Value avail=equiVal.getValue();
            if (avail instanceof FieldRef) {
              if (sideEffect.unitCanWriteTo(predecessor,avail)) {
                earliest.add(equiVal);
                downSafeIt.remove();
              }
            }
 else {
              Iterator usesIt=avail.getUseBoxes().iterator();
              while (usesIt.hasNext()) {
                Value use=((ValueBox)usesIt.next()).getValue();
                if (sideEffect.unitCanWriteTo(predecessor,use)) {
                  earliest.add(equiVal);
                  downSafeIt.remove();
                  break;
                }
              }
            }
          }
        }
{
          Iterator downSafeIt=downSafeSet.iterator();
          while (downSafeIt.hasNext()) {
            EquivalentValue equiVal=(EquivalentValue)downSafeIt.next();
            FlowSet preDown=(FlowSet)downSafe.getFlowBefore(predecessor);
            FlowSet preUp=(FlowSet)upSafe.getFlowBefore(predecessor);
            if (!preDown.contains(equiVal) && !preUp.contains(equiVal)) {
              earliest.add(equiVal);
              downSafeIt.remove();
            }
          }
        }
      }
    }
  }
}
