{
  super(dg);
  this.st=st;
  ExceptionalUnitGraph g=(ExceptionalUnitGraph)dg;
  LocalDefs ld=new SmartLocalDefs(g,new SimpleLiveLocals(g));
  rhsToContainingStmt=new HashMap<Value,Unit>();
  emptySet=new ToppedSet(new ArraySparseSet());
{
    unitToGenerateSet=new HashMap<Unit,FlowSet>(g.size() * 2 + 1,0.7f);
    Iterator unitIt=g.iterator();
    while (unitIt.hasNext()) {
      Unit s=(Unit)unitIt.next();
      FlowSet genSet=emptySet.clone();
      if (s instanceof AssignStmt) {
        AssignStmt as=(AssignStmt)s;
        if (as.getRightOp() instanceof Expr || as.getRightOp() instanceof FieldRef) {
          Value gen=as.getRightOp();
          rhsToContainingStmt.put(gen,s);
          boolean cantAdd=false;
          if (gen instanceof NewExpr || gen instanceof NewArrayExpr || gen instanceof NewMultiArrayExpr)           cantAdd=true;
          if (gen instanceof InvokeExpr)           cantAdd=true;
          if (!cantAdd)           genSet.add(gen,genSet);
        }
      }
      unitToGenerateSet.put(s,genSet);
    }
  }
  doAnalysis();
}
