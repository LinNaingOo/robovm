{
  FlowSet in=(FlowSet)inValue, out=(FlowSet)outValue;
  in.copy(out);
  if (((ToppedSet)in).isTop())   return;
  out.union(unitToGenerateSet.get(unit),out);
  Unit u=(Unit)unit;
  List toRemove=new ArrayList();
  if (((ToppedSet)out).isTop()) {
    throw new RuntimeException("trying to kill on topped set!");
  }
  List l=new LinkedList();
  l.addAll((out).toList());
  Iterator it=l.iterator();
  while (it.hasNext()) {
    Value avail=(Value)it.next();
    if (avail instanceof FieldRef) {
      if (st.unitCanWriteTo(u,avail)) {
        out.remove(avail,out);
      }
    }
 else {
      Iterator usesIt=avail.getUseBoxes().iterator();
      while (usesIt.hasNext()) {
        Value use=((ValueBox)usesIt.next()).getValue();
        if (st.unitCanWriteTo(u,use)) {
          out.remove(avail,out);
        }
      }
    }
  }
}
