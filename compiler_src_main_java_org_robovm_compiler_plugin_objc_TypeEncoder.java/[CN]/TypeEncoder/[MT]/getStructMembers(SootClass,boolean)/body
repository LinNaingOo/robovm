{
  List<Member> members=new ArrayList<>();
  if (clazz.hasSuperclass()) {
    SootClass superclass=clazz.getSuperclass();
    if (!superclass.getName().equals("org.robovm.rt.bro.Struct")) {
      members.addAll(getStructMembers(clazz,is64bit));
    }
  }
  for (  SootMethod method : clazz.getMethods()) {
    int offset=getStructMemberOffset(method);
    if (offset != -1) {
      if (!method.isNative() && !method.isStatic()) {
        continue;
      }
      Type type;
      int idx;
      if (method.getParameterCount() == 0) {
        type=method.getReturnType();
        idx=-1;
      }
 else       if (method.getParameterCount() == 1) {
        type=method.getParameterType(0);
        idx=0;
      }
 else {
        continue;
      }
      Member member=new Member();
      member.offset=offset;
      member.type=encodeOne(method,type,idx,is64bit);
      members.add(member);
    }
  }
  return members;
}
