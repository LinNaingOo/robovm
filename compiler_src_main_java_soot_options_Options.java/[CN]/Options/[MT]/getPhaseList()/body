{
  return "" + padOpt("jb","Creates a JimpleBody for each method") + padVal("jb.ls","Local splitter: one local per DU-UD web")+ padVal("jb.a","Aggregator: removes some unnecessary copies")+ padVal("jb.ule","Unused local eliminator")+ padVal("jb.tr","Assigns types to locals")+ padVal("jb.ulp","Local packer: minimizes number of locals")+ padVal("jb.lns","Local name standardizer")+ padVal("jb.cp","Copy propagator")+ padVal("jb.dae","Dead assignment eliminator")+ padVal("jb.cp-ule","Post-copy propagation unused local eliminator")+ padVal("jb.lp","Local packer: minimizes number of locals")+ padVal("jb.ne","Nop eliminator")+ padVal("jb.uce","Unreachable code eliminator")+ padVal("jb.tt","Trap Tightener")+ padOpt("jj","Creates a JimpleBody for each method directly from source")+ padVal("jj.ls","Local splitter: one local per DU-UD web")+ padVal("jj.a","Aggregator: removes some unnecessary copies")+ padVal("jj.ule","Unused local eliminator")+ padVal("jj.tr","Assigns types to locals")+ padVal("jj.ulp","Local packer: minimizes number of locals")+ padVal("jj.lns","Local name standardizer")+ padVal("jj.cp","Copy propagator")+ padVal("jj.dae","Dead assignment eliminator")+ padVal("jj.cp-ule","Post-copy propagation unused local eliminator")+ padVal("jj.lp","Local packer: minimizes number of locals")+ padVal("jj.ne","Nop eliminator")+ padVal("jj.uce","Unreachable code eliminator")+ padOpt("cg","Call graph constructor")+ padVal("cg.cha","Builds call graph using Class Hierarchy Analysis")+ padVal("cg.spark","Spark points-to analysis framework")+ padVal("cg.paddle","Paddle points-to analysis framework")+ padOpt("wstp","Whole-shimple transformation pack")+ padOpt("wsop","Whole-shimple optimization pack")+ padOpt("wjtp","Whole-jimple transformation pack")+ padVal("wjtp.mhp","Determines what statements may be run concurrently")+ padVal("wjtp.tn","Finds critical sections, allocates locks")+ padOpt("wjop","Whole-jimple optimization pack")+ padVal("wjop.smb","Static method binder: Devirtualizes monomorphic calls")+ padVal("wjop.si","Static inliner: inlines monomorphic calls")+ padOpt("wjap","Whole-jimple annotation pack: adds interprocedural tags")+ padVal("wjap.ra","Rectangular array finder")+ padVal("wjap.umt","Tags all unreachable methods")+ padVal("wjap.uft","Tags all unreachable fields")+ padVal("wjap.tqt","Tags all qualifiers that could be tighter")+ padVal("wjap.cgg","Creates graphical call graph.")+ padVal("wjap.purity","Emit purity attributes")+ padOpt("shimple","Sets parameters for Shimple SSA form")+ padOpt("stp","Shimple transformation pack")+ padOpt("sop","Shimple optimization pack")+ padVal("sop.cpf","Shimple constant propagator and folder")+ padOpt("jtp","Jimple transformation pack: intraprocedural analyses added to Soot")+ padOpt("jop","Jimple optimization pack (intraprocedural)")+ padVal("jop.cse","Common subexpression eliminator")+ padVal("jop.bcm","Busy code motion: unaggressive partial redundancy elimination")+ padVal("jop.lcm","Lazy code motion: aggressive partial redundancy elimination")+ padVal("jop.cp","Copy propagator")+ padVal("jop.cpf","Constant propagator and folder")+ padVal("jop.cbf","Conditional branch folder")+ padVal("jop.dae","Dead assignment eliminator")+ padVal("jop.nce","Null Check Eliminator")+ padVal("jop.uce1","Unreachable code eliminator, pass 1")+ padVal("jop.ubf1","Unconditional branch folder, pass 1")+ padVal("jop.uce2","Unreachable code eliminator, pass 2")+ padVal("jop.ubf2","Unconditional branch folder, pass 2")+ padVal("jop.ule","Unused local eliminator")+ padOpt("jap","Jimple annotation pack: adds intraprocedural tags")+ padVal("jap.npc","Null pointer checker")+ padVal("jap.npcolorer","Null pointer colourer: tags references for eclipse")+ padVal("jap.abc","Array bound checker")+ padVal("jap.profiling","Instruments null pointer and array checks")+ padVal("jap.sea","Side effect tagger")+ padVal("jap.fieldrw","Field read/write tagger")+ padVal("jap.cgtagger","Call graph tagger")+ padVal("jap.parity","Parity tagger")+ padVal("jap.pat","Colour-codes method parameters that may be aliased")+ padVal("jap.lvtagger","Creates color tags for live variables")+ padVal("jap.rdtagger","Creates link tags for reaching defs")+ padVal("jap.che","Indicates whether cast checks can be eliminated")+ padVal("jap.umt","Inserts assertions into unreachable methods")+ padVal("jap.lit","Tags loop invariants")+ padVal("jap.aet","Tags statements with sets of available expressions")+ padVal("jap.dmt","Tags dominators of statement")+ padOpt("gb","Creates a GrimpBody for each method")+ padVal("gb.a1","Aggregator: removes some copies, pre-folding")+ padVal("gb.cf","Constructor folder")+ padVal("gb.a2","Aggregator: removes some copies, post-folding")+ padVal("gb.ule","Unused local eliminator")+ padOpt("gop","Grimp optimization pack")+ padOpt("bb","Creates Baf bodies")+ padVal("bb.lso","Load store optimizer")+ padVal("bb.pho","Peephole optimizer")+ padVal("bb.ule","Unused local eliminator")+ padVal("bb.lp","Local packer: minimizes number of locals")+ padOpt("bop","Baf optimization pack")+ padOpt("tag","Tag aggregator: turns tags into attributes")+ padVal("tag.ln","Line number aggregator")+ padVal("tag.an","Array bounds and null pointer check aggregator")+ padVal("tag.dep","Dependence aggregator")+ padVal("tag.fieldrw","Field read/write aggregator")+ padOpt("db","Dummy phase to store options for Dava")+ padVal("db.transformations","The Dava back-end with all its transformations")+ padVal("db.renamer","Apply heuristics based naming of local variables")+ padVal("db.deobfuscate"," Apply de-obfuscation analyses")+ padVal("db.force-recompile"," Try to get recompilable code.");
}
