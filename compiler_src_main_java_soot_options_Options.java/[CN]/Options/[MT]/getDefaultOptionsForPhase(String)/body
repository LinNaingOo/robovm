{
  if (phaseName.equals("jb"))   return "" + "enabled:true " + "use-original-names:false "+ "preserve-source-annotations:false ";
  if (phaseName.equals("jb.ls"))   return "" + "enabled:true ";
  if (phaseName.equals("jb.a"))   return "" + "enabled:true " + "only-stack-locals:true ";
  if (phaseName.equals("jb.ule"))   return "" + "enabled:true ";
  if (phaseName.equals("jb.tr"))   return "" + "enabled:true " + "ignore-wrong-staticness:false "+ "use-older-type-assigner:false "+ "compare-type-assigners:false ";
  if (phaseName.equals("jb.ulp"))   return "" + "enabled:true " + "unsplit-original-locals:true ";
  if (phaseName.equals("jb.lns"))   return "" + "enabled:true " + "only-stack-locals:false ";
  if (phaseName.equals("jb.cp"))   return "" + "enabled:true " + "only-regular-locals:false "+ "only-stack-locals:true ";
  if (phaseName.equals("jb.dae"))   return "" + "enabled:true " + "only-stack-locals:true ";
  if (phaseName.equals("jb.cp-ule"))   return "" + "enabled:true ";
  if (phaseName.equals("jb.lp"))   return "" + "enabled:false " + "unsplit-original-locals:false ";
  if (phaseName.equals("jb.ne"))   return "" + "enabled:true ";
  if (phaseName.equals("jb.uce"))   return "" + "enabled:true " + "remove-unreachable-traps:false ";
  if (phaseName.equals("jb.tt"))   return "" + "enabled:false ";
  if (phaseName.equals("jj"))   return "" + "enabled:true " + "use-original-names:true ";
  if (phaseName.equals("jj.ls"))   return "" + "enabled:false ";
  if (phaseName.equals("jj.a"))   return "" + "enabled:true " + "only-stack-locals:true ";
  if (phaseName.equals("jj.ule"))   return "" + "enabled:true ";
  if (phaseName.equals("jj.tr"))   return "" + "enabled:false ";
  if (phaseName.equals("jj.ulp"))   return "" + "enabled:false " + "unsplit-original-locals:false ";
  if (phaseName.equals("jj.lns"))   return "" + "enabled:true " + "only-stack-locals:false ";
  if (phaseName.equals("jj.cp"))   return "" + "enabled:true " + "only-regular-locals:false "+ "only-stack-locals:true ";
  if (phaseName.equals("jj.dae"))   return "" + "enabled:true " + "only-stack-locals:true ";
  if (phaseName.equals("jj.cp-ule"))   return "" + "enabled:true ";
  if (phaseName.equals("jj.lp"))   return "" + "enabled:false " + "unsplit-original-locals:false ";
  if (phaseName.equals("jj.ne"))   return "" + "enabled:true ";
  if (phaseName.equals("jj.uce"))   return "" + "enabled:true ";
  if (phaseName.equals("cg"))   return "" + "enabled:true " + "safe-forname:false "+ "safe-newinstance:false "+ "verbose:false "+ "jdkver:3 "+ "all-reachable:false "+ "implicit-entry:true "+ "trim-clinit:true "+ "guards:ignore ";
  if (phaseName.equals("cg.cha"))   return "" + "enabled:true " + "verbose:false ";
  if (phaseName.equals("cg.spark"))   return "" + "enabled:false " + "verbose:false "+ "ignore-types:false "+ "force-gc:false "+ "pre-jimplify:false "+ "vta:false "+ "rta:false "+ "field-based:false "+ "types-for-sites:false "+ "merge-stringbuffer:true "+ "string-constants:false "+ "simulate-natives:true "+ "empties-as-allocs:false "+ "simple-edges-bidirectional:false "+ "on-fly-cg:true "+ "simplify-offline:false "+ "simplify-sccs:false "+ "ignore-types-for-sccs:false "+ "propagator:worklist "+ "set-impl:double "+ "double-set-old:hybrid "+ "double-set-new:hybrid "+ "dump-html:false "+ "dump-pag:false "+ "dump-solution:false "+ "topo-sort:false "+ "dump-types:true "+ "class-method-var:true "+ "dump-answer:false "+ "add-tags:false "+ "set-mass:false "+ "cs-demand:false "+ "lazy-pts:true "+ "traversal:75000 "+ "passes:10 ";
  if (phaseName.equals("cg.paddle"))   return "" + "enabled:false " + "verbose:false "+ "conf:ofcg "+ "bdd:false "+ "order:32 "+ "profile:false "+ "verbosegc:false "+ "q:auto "+ "backend:auto "+ "bdd-nodes:0 "+ "ignore-types:false "+ "pre-jimplify:false "+ "context:insens "+ "k:2 "+ "context-heap:false "+ "rta:false "+ "field-based:false "+ "types-for-sites:false "+ "merge-stringbuffer:true "+ "string-constants:false "+ "simulate-natives:true "+ "global-nodes-in-natives:false "+ "simple-edges-bidirectional:false "+ "this-edges:false "+ "precise-newinstance:true "+ "propagator:auto "+ "set-impl:double "+ "double-set-old:hybrid "+ "double-set-new:hybrid "+ "context-counts:false "+ "total-context-counts:false "+ "method-context-counts:false "+ "set-mass:false "+ "number-nodes:true ";
  if (phaseName.equals("wstp"))   return "" + "enabled:true ";
  if (phaseName.equals("wsop"))   return "" + "enabled:false ";
  if (phaseName.equals("wjtp"))   return "" + "enabled:true ";
  if (phaseName.equals("wjtp.mhp"))   return "" + "enabled:false ";
  if (phaseName.equals("wjtp.tn"))   return "" + "enabled:false " + "locking-scheme:medium-grained "+ "avoid-deadlock:true "+ "open-nesting:true "+ "do-mhp:true "+ "do-tlo:true "+ "print-graph:false "+ "print-table:false "+ "print-debug:false ";
  if (phaseName.equals("wjop"))   return "" + "enabled:false ";
  if (phaseName.equals("wjop.smb"))   return "" + "enabled:false " + "insert-null-checks:true "+ "insert-redundant-casts:true "+ "allowed-modifier-changes:unsafe ";
  if (phaseName.equals("wjop.si"))   return "" + "enabled:true " + "rerun-jb:true "+ "insert-null-checks:true "+ "insert-redundant-casts:true "+ "allowed-modifier-changes:unsafe "+ "expansion-factor:3 "+ "max-container-size:5000 "+ "max-inlinee-size:20 ";
  if (phaseName.equals("wjap"))   return "" + "enabled:true ";
  if (phaseName.equals("wjap.ra"))   return "" + "enabled:false ";
  if (phaseName.equals("wjap.umt"))   return "" + "enabled:false ";
  if (phaseName.equals("wjap.uft"))   return "" + "enabled:false ";
  if (phaseName.equals("wjap.tqt"))   return "" + "enabled:false ";
  if (phaseName.equals("wjap.cgg"))   return "" + "enabled:false " + "show-lib-meths:false ";
  if (phaseName.equals("wjap.purity"))   return "" + "enabled:false " + "dump-summaries:true "+ "dump-cg:false "+ "dump-intra:false "+ "print:true "+ "verbose:false ";
  if (phaseName.equals("shimple"))   return "" + "enabled:true " + "node-elim-opt:true "+ "standard-local-names:false "+ "extended:false "+ "debug:false ";
  if (phaseName.equals("stp"))   return "" + "enabled:true ";
  if (phaseName.equals("sop"))   return "" + "enabled:false ";
  if (phaseName.equals("sop.cpf"))   return "" + "enabled:true " + "prune-cfg:true ";
  if (phaseName.equals("jtp"))   return "" + "enabled:true ";
  if (phaseName.equals("jop"))   return "" + "enabled:false ";
  if (phaseName.equals("jop.cse"))   return "" + "enabled:false " + "naive-side-effect:false ";
  if (phaseName.equals("jop.bcm"))   return "" + "enabled:false " + "naive-side-effect:false ";
  if (phaseName.equals("jop.lcm"))   return "" + "enabled:false " + "safety:safe "+ "unroll:true "+ "naive-side-effect:false ";
  if (phaseName.equals("jop.cp"))   return "" + "enabled:true " + "only-regular-locals:false "+ "only-stack-locals:false ";
  if (phaseName.equals("jop.cpf"))   return "" + "enabled:true ";
  if (phaseName.equals("jop.cbf"))   return "" + "enabled:true ";
  if (phaseName.equals("jop.dae"))   return "" + "enabled:true " + "only-tag:false "+ "only-stack-locals:false ";
  if (phaseName.equals("jop.nce"))   return "" + "enabled:false ";
  if (phaseName.equals("jop.uce1"))   return "" + "enabled:true " + "remove-unreachable-traps:false ";
  if (phaseName.equals("jop.ubf1"))   return "" + "enabled:true ";
  if (phaseName.equals("jop.uce2"))   return "" + "enabled:true " + "remove-unreachable-traps:false ";
  if (phaseName.equals("jop.ubf2"))   return "" + "enabled:true ";
  if (phaseName.equals("jop.ule"))   return "" + "enabled:true ";
  if (phaseName.equals("jap"))   return "" + "enabled:true ";
  if (phaseName.equals("jap.npc"))   return "" + "enabled:false " + "only-array-ref:false "+ "profiling:false ";
  if (phaseName.equals("jap.npcolorer"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.abc"))   return "" + "enabled:false " + "with-all:false "+ "with-cse:false "+ "with-arrayref:false "+ "with-fieldref:false "+ "with-classfield:false "+ "with-rectarray:false "+ "profiling:false "+ "add-color-tags:false ";
  if (phaseName.equals("jap.profiling"))   return "" + "enabled:false " + "notmainentry:false ";
  if (phaseName.equals("jap.sea"))   return "" + "enabled:false " + "naive:false ";
  if (phaseName.equals("jap.fieldrw"))   return "" + "enabled:false " + "threshold:100 ";
  if (phaseName.equals("jap.cgtagger"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.parity"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.pat"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.lvtagger"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.rdtagger"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.che"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.umt"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.lit"))   return "" + "enabled:false ";
  if (phaseName.equals("jap.aet"))   return "" + "enabled:false " + "kind:optimistic ";
  if (phaseName.equals("jap.dmt"))   return "" + "enabled:false ";
  if (phaseName.equals("gb"))   return "" + "enabled:true ";
  if (phaseName.equals("gb.a1"))   return "" + "enabled:true " + "only-stack-locals:true ";
  if (phaseName.equals("gb.cf"))   return "" + "enabled:true ";
  if (phaseName.equals("gb.a2"))   return "" + "enabled:true " + "only-stack-locals:true ";
  if (phaseName.equals("gb.ule"))   return "" + "enabled:true ";
  if (phaseName.equals("gop"))   return "" + "enabled:false ";
  if (phaseName.equals("bb"))   return "" + "enabled:true ";
  if (phaseName.equals("bb.lso"))   return "" + "enabled:true " + "debug:false "+ "inter:false "+ "sl:true "+ "sl2:false "+ "sll:true "+ "sll2:false ";
  if (phaseName.equals("bb.pho"))   return "" + "enabled:true ";
  if (phaseName.equals("bb.ule"))   return "" + "enabled:true ";
  if (phaseName.equals("bb.lp"))   return "" + "enabled:true " + "unsplit-original-locals:false ";
  if (phaseName.equals("bop"))   return "" + "enabled:false ";
  if (phaseName.equals("tag"))   return "" + "enabled:true ";
  if (phaseName.equals("tag.ln"))   return "" + "enabled:true ";
  if (phaseName.equals("tag.an"))   return "" + "enabled:false ";
  if (phaseName.equals("tag.dep"))   return "" + "enabled:false ";
  if (phaseName.equals("tag.fieldrw"))   return "" + "enabled:false ";
  if (phaseName.equals("db"))   return "" + "enabled:true " + "source-is-javac:true ";
  if (phaseName.equals("db.transformations"))   return "" + "enabled:true ";
  if (phaseName.equals("db.renamer"))   return "" + "enabled:false ";
  if (phaseName.equals("db.deobfuscate"))   return "" + "enabled:true ";
  if (phaseName.equals("db.force-recompile"))   return "" + "enabled:true ";
  return "enabled";
}
