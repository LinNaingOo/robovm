{
  if (phaseName.equals("jb"))   return "" + "enabled " + "use-original-names "+ "preserve-source-annotations ";
  if (phaseName.equals("jb.ls"))   return "" + "enabled ";
  if (phaseName.equals("jb.a"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("jb.ule"))   return "" + "enabled ";
  if (phaseName.equals("jb.tr"))   return "" + "enabled " + "ignore-wrong-staticness "+ "use-older-type-assigner "+ "compare-type-assigners ";
  if (phaseName.equals("jb.ulp"))   return "" + "enabled " + "unsplit-original-locals ";
  if (phaseName.equals("jb.lns"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("jb.cp"))   return "" + "enabled " + "only-regular-locals "+ "only-stack-locals ";
  if (phaseName.equals("jb.dae"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("jb.cp-ule"))   return "" + "enabled ";
  if (phaseName.equals("jb.lp"))   return "" + "enabled " + "unsplit-original-locals ";
  if (phaseName.equals("jb.ne"))   return "" + "enabled ";
  if (phaseName.equals("jb.uce"))   return "" + "enabled " + "remove-unreachable-traps ";
  if (phaseName.equals("jb.tt"))   return "" + "enabled ";
  if (phaseName.equals("jj"))   return "" + "enabled " + "use-original-names ";
  if (phaseName.equals("jj.ls"))   return "" + "enabled ";
  if (phaseName.equals("jj.a"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("jj.ule"))   return "" + "enabled ";
  if (phaseName.equals("jj.tr"))   return "" + "enabled ";
  if (phaseName.equals("jj.ulp"))   return "" + "enabled " + "unsplit-original-locals ";
  if (phaseName.equals("jj.lns"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("jj.cp"))   return "" + "enabled " + "only-regular-locals "+ "only-stack-locals ";
  if (phaseName.equals("jj.dae"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("jj.cp-ule"))   return "" + "enabled ";
  if (phaseName.equals("jj.lp"))   return "" + "enabled " + "unsplit-original-locals ";
  if (phaseName.equals("jj.ne"))   return "" + "enabled ";
  if (phaseName.equals("jj.uce"))   return "" + "enabled ";
  if (phaseName.equals("wjpp"))   return "" + "enabled ";
  if (phaseName.equals("wspp"))   return "" + "enabled ";
  if (phaseName.equals("cg"))   return "" + "enabled " + "safe-forname "+ "safe-newinstance "+ "verbose "+ "jdkver "+ "all-reachable "+ "implicit-entry "+ "trim-clinit "+ "reflection-log "+ "guards ";
  if (phaseName.equals("cg.cha"))   return "" + "enabled " + "verbose ";
  if (phaseName.equals("cg.spark"))   return "" + "enabled " + "verbose "+ "ignore-types "+ "force-gc "+ "pre-jimplify "+ "vta "+ "rta "+ "field-based "+ "types-for-sites "+ "merge-stringbuffer "+ "string-constants "+ "simulate-natives "+ "empties-as-allocs "+ "simple-edges-bidirectional "+ "on-fly-cg "+ "simplify-offline "+ "simplify-sccs "+ "ignore-types-for-sccs "+ "propagator "+ "set-impl "+ "double-set-old "+ "double-set-new "+ "dump-html "+ "dump-pag "+ "dump-solution "+ "topo-sort "+ "dump-types "+ "class-method-var "+ "dump-answer "+ "add-tags "+ "set-mass "+ "cs-demand "+ "lazy-pts "+ "traversal "+ "passes "+ "geom-pta "+ "geom-encoding "+ "geom-worklist "+ "geom-dump-verbose "+ "geom-verify-name "+ "geom-eval "+ "geom-trans "+ "geom-frac-base "+ "geom-blocking "+ "geom-runs ";
  if (phaseName.equals("cg.paddle"))   return "" + "enabled " + "verbose "+ "conf "+ "bdd "+ "order "+ "dynamic-order "+ "profile "+ "verbosegc "+ "q "+ "backend "+ "bdd-nodes "+ "ignore-types "+ "pre-jimplify "+ "context "+ "k "+ "context-heap "+ "rta "+ "field-based "+ "types-for-sites "+ "merge-stringbuffer "+ "string-constants "+ "simulate-natives "+ "global-nodes-in-natives "+ "simple-edges-bidirectional "+ "this-edges "+ "precise-newinstance "+ "propagator "+ "set-impl "+ "double-set-old "+ "double-set-new "+ "context-counts "+ "total-context-counts "+ "method-context-counts "+ "set-mass "+ "number-nodes ";
  if (phaseName.equals("wstp"))   return "" + "enabled ";
  if (phaseName.equals("wsop"))   return "" + "enabled ";
  if (phaseName.equals("wjtp"))   return "" + "enabled ";
  if (phaseName.equals("wjtp.mhp"))   return "" + "enabled ";
  if (phaseName.equals("wjtp.tn"))   return "" + "enabled " + "locking-scheme "+ "avoid-deadlock "+ "open-nesting "+ "do-mhp "+ "do-tlo "+ "print-graph "+ "print-table "+ "print-debug ";
  if (phaseName.equals("wjop"))   return "" + "enabled ";
  if (phaseName.equals("wjop.smb"))   return "" + "enabled " + "insert-null-checks "+ "insert-redundant-casts "+ "allowed-modifier-changes ";
  if (phaseName.equals("wjop.si"))   return "" + "enabled " + "rerun-jb "+ "insert-null-checks "+ "insert-redundant-casts "+ "allowed-modifier-changes "+ "expansion-factor "+ "max-container-size "+ "max-inlinee-size ";
  if (phaseName.equals("wjap"))   return "" + "enabled ";
  if (phaseName.equals("wjap.ra"))   return "" + "enabled ";
  if (phaseName.equals("wjap.umt"))   return "" + "enabled ";
  if (phaseName.equals("wjap.uft"))   return "" + "enabled ";
  if (phaseName.equals("wjap.tqt"))   return "" + "enabled ";
  if (phaseName.equals("wjap.cgg"))   return "" + "enabled " + "show-lib-meths ";
  if (phaseName.equals("wjap.purity"))   return "" + "enabled " + "dump-summaries "+ "dump-cg "+ "dump-intra "+ "print "+ "annotate "+ "verbose ";
  if (phaseName.equals("shimple"))   return "" + "enabled " + "node-elim-opt "+ "standard-local-names "+ "extended "+ "debug ";
  if (phaseName.equals("stp"))   return "" + "enabled ";
  if (phaseName.equals("sop"))   return "" + "enabled ";
  if (phaseName.equals("sop.cpf"))   return "" + "enabled " + "prune-cfg ";
  if (phaseName.equals("jtp"))   return "" + "enabled ";
  if (phaseName.equals("jop"))   return "" + "enabled ";
  if (phaseName.equals("jop.cse"))   return "" + "enabled " + "naive-side-effect ";
  if (phaseName.equals("jop.bcm"))   return "" + "enabled " + "naive-side-effect ";
  if (phaseName.equals("jop.lcm"))   return "" + "enabled " + "safety "+ "unroll "+ "naive-side-effect ";
  if (phaseName.equals("jop.cp"))   return "" + "enabled " + "only-regular-locals "+ "only-stack-locals ";
  if (phaseName.equals("jop.cpf"))   return "" + "enabled ";
  if (phaseName.equals("jop.cbf"))   return "" + "enabled ";
  if (phaseName.equals("jop.dae"))   return "" + "enabled " + "only-tag "+ "only-stack-locals ";
  if (phaseName.equals("jop.nce"))   return "" + "enabled ";
  if (phaseName.equals("jop.uce1"))   return "" + "enabled " + "remove-unreachable-traps ";
  if (phaseName.equals("jop.ubf1"))   return "" + "enabled ";
  if (phaseName.equals("jop.uce2"))   return "" + "enabled " + "remove-unreachable-traps ";
  if (phaseName.equals("jop.ubf2"))   return "" + "enabled ";
  if (phaseName.equals("jop.ule"))   return "" + "enabled ";
  if (phaseName.equals("jap"))   return "" + "enabled ";
  if (phaseName.equals("jap.npc"))   return "" + "enabled " + "only-array-ref "+ "profiling ";
  if (phaseName.equals("jap.npcolorer"))   return "" + "enabled ";
  if (phaseName.equals("jap.abc"))   return "" + "enabled " + "with-all "+ "with-cse "+ "with-arrayref "+ "with-fieldref "+ "with-classfield "+ "with-rectarray "+ "profiling "+ "add-color-tags ";
  if (phaseName.equals("jap.profiling"))   return "" + "enabled " + "notmainentry ";
  if (phaseName.equals("jap.sea"))   return "" + "enabled " + "naive ";
  if (phaseName.equals("jap.fieldrw"))   return "" + "enabled " + "threshold ";
  if (phaseName.equals("jap.cgtagger"))   return "" + "enabled ";
  if (phaseName.equals("jap.parity"))   return "" + "enabled ";
  if (phaseName.equals("jap.pat"))   return "" + "enabled ";
  if (phaseName.equals("jap.lvtagger"))   return "" + "enabled ";
  if (phaseName.equals("jap.rdtagger"))   return "" + "enabled ";
  if (phaseName.equals("jap.che"))   return "" + "enabled ";
  if (phaseName.equals("jap.umt"))   return "" + "enabled ";
  if (phaseName.equals("jap.lit"))   return "" + "enabled ";
  if (phaseName.equals("jap.aet"))   return "" + "enabled " + "kind ";
  if (phaseName.equals("jap.dmt"))   return "" + "enabled ";
  if (phaseName.equals("gb"))   return "" + "enabled ";
  if (phaseName.equals("gb.a1"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("gb.cf"))   return "" + "enabled ";
  if (phaseName.equals("gb.a2"))   return "" + "enabled " + "only-stack-locals ";
  if (phaseName.equals("gb.ule"))   return "" + "enabled ";
  if (phaseName.equals("gop"))   return "" + "enabled ";
  if (phaseName.equals("bb"))   return "" + "enabled ";
  if (phaseName.equals("bb.lso"))   return "" + "enabled " + "debug "+ "inter "+ "sl "+ "sl2 "+ "sll "+ "sll2 ";
  if (phaseName.equals("bb.pho"))   return "" + "enabled ";
  if (phaseName.equals("bb.ule"))   return "" + "enabled ";
  if (phaseName.equals("bb.lp"))   return "" + "enabled " + "unsplit-original-locals ";
  if (phaseName.equals("bop"))   return "" + "enabled ";
  if (phaseName.equals("tag"))   return "" + "enabled ";
  if (phaseName.equals("tag.ln"))   return "" + "enabled ";
  if (phaseName.equals("tag.an"))   return "" + "enabled ";
  if (phaseName.equals("tag.dep"))   return "" + "enabled ";
  if (phaseName.equals("tag.fieldrw"))   return "" + "enabled ";
  if (phaseName.equals("db"))   return "" + "enabled " + "source-is-javac ";
  if (phaseName.equals("db.transformations"))   return "" + "enabled ";
  if (phaseName.equals("db.renamer"))   return "" + "enabled ";
  if (phaseName.equals("db.deobfuscate"))   return "" + "enabled ";
  if (phaseName.equals("db.force-recompile"))   return "" + "enabled ";
  return "enabled";
}
