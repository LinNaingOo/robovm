{
  Calendar cal=Calendar.getInstance(TimeZone.getTimeZone("EST"));
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  assertTrue("Incorrect result 0: " + cal.getTime().getTime(),cal.getTime().getTime() == 1009861200000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  assertTrue("Incorrect result 0a: " + cal.getTime(),cal.getTime().getTime() == 1014958800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DATE,24);
  assertTrue("Incorrect result 0b: " + cal.getTime(),cal.getTime().getTime() == 1011848400000L);
  cal.set(Calendar.MONTH,Calendar.OCTOBER);
  cal.set(Calendar.DATE,31);
  cal.set(Calendar.MONTH,Calendar.NOVEMBER);
  cal.set(Calendar.DATE,26);
  assertTrue("Incorrect month: " + cal.get(Calendar.MONTH),cal.get(Calendar.MONTH) == Calendar.NOVEMBER);
  int dow=cal.get(Calendar.DAY_OF_WEEK);
  cal.set(Calendar.DATE,27);
  assertTrue("Incorrect DAY_OF_WEEK: " + cal.get(Calendar.DAY_OF_WEEK) + " expected: "+ dow,cal.get(Calendar.DAY_OF_WEEK) != dow);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  assertTrue("Incorrect result 0c1: " + cal.getTime().getTime(),cal.getTime().getTime() == 1010379600000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.TUESDAY);
  assertTrue("Incorrect result 0c2: " + cal.getTime().getTime(),cal.getTime().getTime() == 1009861200000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.THURSDAY);
  assertTrue("Incorrect result 0c3: " + cal.getTime(),cal.getTime().getTime() == 1010034000000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_MONTH,2);
  assertTrue("Incorrect result 0d: " + cal.getTime(),cal.getTime().getTime() == 1010293200000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_WEEK_IN_MONTH,2);
  assertTrue("Incorrect result 0e: " + cal.getTime(),cal.getTime().getTime() == 1010898000000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  assertTrue("Incorrect result 0f: " + cal.getTime(),cal.getTime().getTime() == 1015736400000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DATE,24);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  assertTrue("Incorrect result 0g: " + cal.getTime(),cal.getTime().getTime() == 1011848400000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.get(Calendar.WEEK_OF_YEAR);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  assertTrue("Incorrect result 0h: " + cal.getTime(),cal.getTime().getTime() == 1015909200000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_YEAR,170);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  cal.set(Calendar.MONTH,Calendar.JANUARY);
  cal.set(Calendar.DATE,5);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  assertTrue("Incorrect result 1: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  cal.set(Calendar.MONTH,Calendar.JANUARY);
  cal.set(Calendar.DATE,5);
  cal.set(Calendar.DAY_OF_YEAR,170);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  assertTrue("Incorrect result 1a: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.DATE,11);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.TUESDAY);
  assertTrue("Incorrect result 1b: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.TUESDAY);
  assertEquals("Incorrect result 1b: " + cal.getTime(),1015304400000L,cal.getTime().getTime());
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DAY_OF_WEEK_IN_MONTH,1);
  cal.set(Calendar.WEEK_OF_MONTH,3);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.DATE,5);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  assertTrue("Incorrect result 2: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DAY_OF_WEEK_IN_MONTH,2);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.DATE,5);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  assertTrue("Incorrect result 3: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DAY_OF_WEEK_IN_MONTH,1);
  cal.set(Calendar.WEEK_OF_MONTH,3);
  cal.set(Calendar.DATE,25);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  assertTrue("Incorrect result 4: " + cal.getTime(),cal.getTime().getTime() == 1010984400000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  cal.set(Calendar.DATE,25);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  cal.set(Calendar.MONTH,Calendar.JANUARY);
  assertTrue("Incorrect result 5: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DATE,11);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  assertTrue("Incorrect result 5a: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DATE,11);
  cal.set(Calendar.WEEK_OF_MONTH,1);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  assertTrue("Incorrect result 5b: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DATE,5);
  cal.set(Calendar.WEEK_OF_MONTH,3);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  assertTrue("Incorrect result 5c: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.DATE,11);
  assertTrue("Incorrect result 6: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,12);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  cal.set(Calendar.DATE,14);
  assertTrue("Incorrect result 7: " + cal.getTime(),cal.getTime().getTime() == 1010984400000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_YEAR,70);
  cal.set(Calendar.MONTH,Calendar.JANUARY);
  assertTrue("Incorrect result 8: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_YEAR,170);
  cal.set(Calendar.DATE,11);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  assertTrue("Incorrect result 8a: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DATE,15);
  cal.set(Calendar.DAY_OF_YEAR,70);
  cal.set(Calendar.MONTH,Calendar.JANUARY);
  assertTrue("Incorrect result 8b: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_YEAR,70);
  cal.set(Calendar.DATE,14);
  assertTrue("Incorrect result 9: " + cal.getTime(),cal.getTime().getTime() == 1010984400000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_YEAR,15);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.THURSDAY);
  cal.set(Calendar.DATE,14);
  assertTrue("Incorrect result 9a: " + cal.getTime(),cal.getTime().getTime() == 1010984400000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
  cal.set(Calendar.DATE,14);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  assertTrue("Incorrect result 9b: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DATE,14);
  cal.set(Calendar.WEEK_OF_YEAR,11);
  assertTrue("Incorrect result 9c: " + cal.getTime(),cal.getTime().getTime() == 1010984400000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.WEEK_OF_MONTH,1);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.THURSDAY);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.DATE,11);
  assertTrue("Incorrect result 9d: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_YEAR,70);
  cal.set(Calendar.DAY_OF_WEEK,Calendar.TUESDAY);
  assertTrue("Incorrect result 10: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DATE,11);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.DAY_OF_WEEK_IN_MONTH,1);
  assertTrue("Incorrect result 11: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DATE,11);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.WEEK_OF_YEAR,15);
  assertTrue("Incorrect result 12: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DATE,11);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.WEEK_OF_MONTH,1);
  assertTrue("Incorrect result 13: " + cal.getTime(),cal.getTime().getTime() == 1015822800000L);
  cal.clear();
  cal.set(Calendar.YEAR,2002);
  cal.set(Calendar.DAY_OF_YEAR,111);
  cal.get(Calendar.YEAR);
  cal.set(Calendar.MONTH,Calendar.MARCH);
  cal.set(Calendar.AM_PM,Calendar.AM);
  assertTrue("Incorrect result 14: " + cal.getTime(),cal.getTime().getTime() == 1016686800000L);
  int hour=cal.get(Calendar.HOUR);
  cal.set(Calendar.HOUR,hour);
  cal.set(Calendar.AM_PM,Calendar.PM);
  assertEquals("AM_PM not changed",Calendar.PM,cal.get(Calendar.AM_PM));
  cal.set(Calendar.AM_PM,Calendar.AM);
  assertEquals("AM_PM was changed 1",Calendar.AM,cal.get(Calendar.AM_PM));
  int hourOfDay=cal.get(Calendar.HOUR_OF_DAY);
  hour=cal.get(Calendar.HOUR);
  cal.set(Calendar.AM_PM,Calendar.PM);
  assertEquals("AM_PM was changed 2",Calendar.PM,cal.get(Calendar.AM_PM));
  assertEquals(hour,cal.get(Calendar.HOUR));
  assertEquals(hourOfDay + 12,cal.get(Calendar.HOUR_OF_DAY));
  cal=Calendar.getInstance();
  int oldValue=cal.get(Calendar.AM_PM);
  int newValue=(oldValue == Calendar.AM) ? Calendar.PM : Calendar.AM;
  cal.set(Calendar.AM_PM,newValue);
  newValue=cal.get(Calendar.AM_PM);
  assertTrue(newValue != oldValue);
}
