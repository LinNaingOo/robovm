{
  for (Iterator useIt=v.getUseBoxes().iterator(); useIt.hasNext(); ) {
    final ValueBox use=(ValueBox)useIt.next();
    if (valueTouchesRWSet(s,use.getValue(),boxes))     return true;
  }
  if (v instanceof Constant)   return false;
  if (v instanceof Expr)   throw new RuntimeException("can't deal with expr");
  for (Iterator boxIt=boxes.iterator(); boxIt.hasNext(); ) {
    final ValueBox box=(ValueBox)boxIt.next();
    Value boxed=box.getValue();
    if (boxed.equivTo(v))     return true;
  }
  if (v instanceof Local) {
    return false;
  }
  if (v instanceof InstanceFieldRef) {
    InstanceFieldRef ifr=(InstanceFieldRef)v;
    if (s == null)     return false;
    PointsToSet o1=s.getBaseForField(ifr.getField());
    if (o1 == null)     return false;
    PointsToSet o2=reachingObjects((Local)ifr.getBase());
    if (o2 == null)     return false;
    return o1.hasNonEmptyIntersection(o2);
  }
  if (v instanceof ArrayRef) {
    ArrayRef ar=(ArrayRef)v;
    if (s == null)     return false;
    PointsToSet o1=s.getBaseForField(PointsToAnalysis.ARRAY_ELEMENTS_NODE);
    if (o1 == null)     return false;
    PointsToSet o2=reachingObjects((Local)ar.getBase());
    if (o2 == null)     return false;
    return o1.hasNonEmptyIntersection(o2);
  }
  if (v instanceof StaticFieldRef) {
    StaticFieldRef sfr=(StaticFieldRef)v;
    if (s == null)     return false;
    return s.getGlobals().contains(sfr.getField());
  }
  throw new RuntimeException("Forgot to handle value " + v);
}
