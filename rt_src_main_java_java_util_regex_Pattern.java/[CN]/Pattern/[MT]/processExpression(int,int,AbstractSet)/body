{
  ArrayList children=new ArrayList();
  AbstractSet child;
  int saveFlags=flags;
  FSet fSet;
  boolean saveChangedFlags=false;
  if (newFlags != flags) {
    flags=newFlags;
  }
switch (ch) {
case Lexer.CHAR_NONCAP_GROUP:
    fSet=new NonCapFSet(++consCount);
  break;
case Lexer.CHAR_POS_LOOKAHEAD:
case Lexer.CHAR_NEG_LOOKAHEAD:
fSet=new AheadFSet();
break;
case Lexer.CHAR_POS_LOOKBEHIND:
case Lexer.CHAR_NEG_LOOKBEHIND:
fSet=new BehindFSet(++consCount);
break;
case Lexer.CHAR_ATOMIC_GROUP:
fSet=new AtomicFSet(++consCount);
break;
default :
globalGroupIndex++;
if (last == null) {
fSet=new FinalSet();
saveChangedFlags=true;
}
 else {
fSet=new FSet(globalGroupIndex);
}
if (globalGroupIndex > -1 && globalGroupIndex < 10) {
backRefs[globalGroupIndex]=fSet;
}
break;
}
do {
if (lexemes.isLetter() && lexemes.lookAhead() == Lexer.CHAR_VERTICAL_BAR) {
child=processAlternations(fSet);
}
 else if (lexemes.peek() == Lexer.CHAR_VERTICAL_BAR) {
child=new EmptySet(fSet);
lexemes.next();
}
 else {
child=processSubExpression(fSet);
if (lexemes.peek() == Lexer.CHAR_VERTICAL_BAR) {
lexemes.next();
}
}
if (child != null) {
children.add(child);
}
}
 while (!(lexemes.isEmpty() || (lexemes.peek() == Lexer.CHAR_RIGHT_PARENTHESIS)));
if (lexemes.back() == Lexer.CHAR_VERTICAL_BAR) {
children.add(new EmptySet(fSet));
}
if (flags != saveFlags && !saveChangedFlags) {
flags=saveFlags;
lexemes.restoreFlags(flags);
}
switch (ch) {
case Lexer.CHAR_NONCAP_GROUP:
return new NonCapJointSet(children,fSet);
case Lexer.CHAR_POS_LOOKAHEAD:
return new PositiveLookAhead(children,fSet);
case Lexer.CHAR_NEG_LOOKAHEAD:
return new NegativeLookAhead(children,fSet);
case Lexer.CHAR_POS_LOOKBEHIND:
return new PositiveLookBehind(children,fSet);
case Lexer.CHAR_NEG_LOOKBEHIND:
return new NegativeLookBehind(children,fSet);
case Lexer.CHAR_ATOMIC_GROUP:
return new AtomicJointSet(children,fSet);
default :
switch (children.size()) {
case 0:
return new EmptySet(fSet);
case 1:
return new SingleSet((AbstractSet)children.get(0),fSet);
default :
return new JointSet(children,fSet);
}
}
}
