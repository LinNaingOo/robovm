{
  StringBuffer substring=new StringBuffer();
  while (!lexemes.isEmpty() && lexemes.isLetter() && !lexemes.isHighSurrogate()&& !lexemes.isLowSurrogate()&& ((!lexemes.isNextSpecial() && lexemes.lookAhead() == 0) || (!lexemes.isNextSpecial() && Lexer.isLetter(lexemes.lookAhead())) || lexemes.lookAhead() == Lexer.CHAR_RIGHT_PARENTHESIS || (lexemes.lookAhead() & 0x8000ffff) == Lexer.CHAR_LEFT_PARENTHESIS || lexemes.lookAhead() == Lexer.CHAR_VERTICAL_BAR || lexemes.lookAhead() == Lexer.CHAR_DOLLAR)) {
    int ch=lexemes.next();
    if (Character.isSupplementaryCodePoint(ch)) {
      substring.append(Character.toChars(ch));
    }
 else {
      substring.append((char)ch);
    }
  }
  if (!hasFlag(Pattern.CASE_INSENSITIVE)) {
    return new SequenceSet(substring);
  }
 else   if (!hasFlag(Pattern.UNICODE_CASE)) {
    return new CISequenceSet(substring);
  }
 else {
    return new UCISequenceSet(substring);
  }
}
