{
  try {
    magic=d.readInt() & 0xFFFFFFFFL;
    if (magic != MAGIC) {
      G.v().out.println("Wrong magic number in " + fn + ": "+ magic);
      return false;
    }
    minor_version=d.readUnsignedShort();
    major_version=d.readUnsignedShort();
    constant_pool_count=d.readUnsignedShort();
    if (!readConstantPool(d))     return false;
    access_flags=d.readUnsignedShort();
    this_class=d.readUnsignedShort();
    super_class=d.readUnsignedShort();
    interfaces_count=d.readUnsignedShort();
    if (interfaces_count > 0) {
      interfaces=new int[interfaces_count];
      int j;
      for (j=0; j < interfaces_count; j++)       interfaces[j]=d.readUnsignedShort();
    }
    Timers.v().fieldTimer.start();
    fields_count=d.readUnsignedShort();
    readFields(d);
    Timers.v().fieldTimer.end();
    Timers.v().methodTimer.start();
    methods_count=d.readUnsignedShort();
    readMethods(d);
    Timers.v().methodTimer.end();
    Timers.v().attributeTimer.start();
    attributes_count=d.readUnsignedShort();
    if (attributes_count > 0) {
      attributes=new attribute_info[attributes_count];
      readAttributes(d,attributes_count,attributes);
    }
    Timers.v().attributeTimer.end();
  }
 catch (  IOException e) {
    throw new RuntimeException("IOException with " + fn + ": "+ e.getMessage(),e);
  }
  return true;
}
