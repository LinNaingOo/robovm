{
  if (handler != null) {
    SecurityManager sm=System.getSecurityManager();
    if (sm != null) {
      sm.checkPermission(specifyStreamHandlerPermission);
    }
    strmHandler=handler;
  }
  if (spec == null) {
    throw new MalformedURLException();
  }
  spec=spec.trim();
  int index;
  try {
    index=spec.indexOf(':');
  }
 catch (  NullPointerException e) {
    throw new MalformedURLException(e.toString());
  }
  int startIPv6Addr=spec.indexOf('[');
  if (index >= 0) {
    if ((startIPv6Addr == -1) || (index < startIPv6Addr)) {
      protocol=spec.substring(0,index);
      char c=protocol.charAt(0);
      boolean valid=('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z');
      for (int i=1; valid && (i < protocol.length()); i++) {
        c=protocol.charAt(i);
        valid=('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z') || ('0' <= c && c <= '9')|| (c == '+')|| (c == '-')|| (c == '.');
      }
      if (!valid) {
        protocol=null;
        index=-1;
      }
 else {
        protocol=Util.toASCIILowerCase(protocol);
      }
    }
  }
  if (protocol != null) {
    if (context != null && protocol.equals(context.getProtocol())) {
      String cPath=context.getPath();
      if (cPath != null && cPath.startsWith("/")) {
        set(protocol,context.getHost(),context.getPort(),context.getAuthority(),context.getUserInfo(),cPath,context.getQuery(),null);
      }
      if (strmHandler == null) {
        strmHandler=context.strmHandler;
      }
    }
  }
 else {
    if (context == null) {
      throw new MalformedURLException(Messages.getString("luni.9B",spec));
    }
    set(context.getProtocol(),context.getHost(),context.getPort(),context.getAuthority(),context.getUserInfo(),context.getPath(),context.getQuery(),null);
    if (strmHandler == null) {
      strmHandler=context.strmHandler;
    }
  }
  if (strmHandler == null) {
    setupStreamHandler();
    if (strmHandler == null) {
      throw new MalformedURLException(Messages.getString("luni.9C",protocol));
    }
  }
  try {
    strmHandler.parseURL(this,spec,++index,spec.length());
  }
 catch (  Exception e) {
    throw new MalformedURLException(e.toString());
  }
  if (port < -1) {
    throw new MalformedURLException(Messages.getString("luni.56",port));
  }
}
