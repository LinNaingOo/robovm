{
  if (!DEFSupported) {
    fail(NotSupportMsg);
    return;
  }
  createKeys();
  KeyAgreement[] kAgs=createKAs();
  SecureRandom random=null;
  DSAParameterSpec dsa=new DSAParameterSpec(new BigInteger("56"),new BigInteger("56"),new BigInteger("56"));
  for (int i=0; i < kAgs.length; i++) {
    try {
      kAgs[i].init(privKey,dsa);
      fail("InvalidAlgorithmParameterException or InvalidKeyException must be throw");
    }
 catch (    InvalidAlgorithmParameterException e) {
    }
catch (    InvalidKeyException e) {
    }
    try {
      kAgs[i].init(privKey,dsa,new SecureRandom());
      fail("InvalidAlgorithmParameterException or InvalidKeyException must be throw");
    }
 catch (    InvalidAlgorithmParameterException e) {
    }
catch (    InvalidKeyException e) {
    }
    try {
      kAgs[i].init(privKey,dsa,random);
      fail("InvalidAlgorithmParameterException or InvalidKeyException must be throw");
    }
 catch (    InvalidAlgorithmParameterException e) {
    }
catch (    InvalidKeyException e) {
    }
  }
}
