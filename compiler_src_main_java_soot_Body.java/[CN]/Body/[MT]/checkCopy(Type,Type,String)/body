{
  if (leftType instanceof PrimType || rightType instanceof PrimType) {
    if (leftType instanceof IntType && rightType instanceof IntType)     return;
    if (leftType instanceof LongType && rightType instanceof LongType)     return;
    if (leftType instanceof FloatType && rightType instanceof FloatType)     return;
    if (leftType instanceof DoubleType && rightType instanceof DoubleType)     return;
    throw new RuntimeException("Warning: Bad use of primitive type" + errorSuffix + " in "+ getMethod());
  }
  if (rightType instanceof NullType)   return;
  if (leftType instanceof RefType && ((RefType)leftType).getClassName().equals("java.lang.Object"))   return;
  if (leftType instanceof ArrayType || rightType instanceof ArrayType) {
    if (leftType instanceof ArrayType && rightType instanceof ArrayType)     return;
    if (rightType instanceof ArrayType) {
      if (leftType.equals(RefType.v("java.io.Serializable")) || leftType.equals(RefType.v("java.lang.Cloneable")) || leftType.equals(RefType.v("java.lang.Object")))       return;
    }
    throw new RuntimeException("Warning: Bad use of array type" + errorSuffix + " in "+ getMethod());
  }
  if (leftType instanceof RefType && rightType instanceof RefType) {
    SootClass leftClass=((RefType)leftType).getSootClass();
    SootClass rightClass=((RefType)rightType).getSootClass();
    if (leftClass.isPhantom() || rightClass.isPhantom()) {
      return;
    }
    if (leftClass.isInterface()) {
      if (rightClass.isInterface()) {
        if (!(leftClass.getName().equals(rightClass.getName()) || Scene.v().getActiveHierarchy().isInterfaceSubinterfaceOf(rightClass,leftClass)))         throw new RuntimeException("Warning: Bad use of interface type" + errorSuffix + " in "+ getMethod());
      }
 else {
      }
    }
 else {
      if (rightClass.isInterface()) {
        throw new RuntimeException("Warning: trying to use interface type where non-Object class expected" + errorSuffix + " in "+ getMethod());
      }
 else {
        if (!Scene.v().getActiveHierarchy().isClassSubclassOfIncluding(rightClass,leftClass))         throw new RuntimeException("Warning: Bad use of class type" + errorSuffix + " in "+ getMethod());
      }
    }
    return;
  }
  throw new RuntimeException("Warning: Bad types" + errorSuffix + " in "+ getMethod());
}
