{
  HashMap<Object,Object> bindings=new HashMap<Object,Object>();
{
    Iterator<Unit> it=b.getUnits().iterator();
    while (it.hasNext()) {
      Unit original=it.next();
      Unit copy=(Unit)original.clone();
      copy.addAllTagsOf(original);
      unitChain.addLast(copy);
      bindings.put(original,copy);
    }
  }
{
    Iterator<Trap> it=b.getTraps().iterator();
    while (it.hasNext()) {
      Trap original=it.next();
      Trap copy=(Trap)original.clone();
      trapChain.addLast(copy);
      bindings.put(original,copy);
    }
  }
{
    Iterator<Local> it=b.getLocals().iterator();
    while (it.hasNext()) {
      Local original=it.next();
      Local copy=(Local)original.clone();
      localChain.addLast(copy);
      bindings.put(original,copy);
    }
  }
{
    Iterator<UnitBox> it=getAllUnitBoxes().iterator();
    while (it.hasNext()) {
      UnitBox box=it.next();
      Unit newObject, oldObject=box.getUnit();
      if ((newObject=(Unit)bindings.get(oldObject)) != null)       box.setUnit(newObject);
    }
  }
{
    Iterator<ValueBox> it=getUseBoxes().iterator();
    while (it.hasNext()) {
      ValueBox vb=it.next();
      if (vb.getValue() instanceof Local)       vb.setValue((Value)bindings.get(vb.getValue()));
    }
    it=getDefBoxes().iterator();
    while (it.hasNext()) {
      ValueBox vb=it.next();
      if (vb.getValue() instanceof Local)       vb.setValue((Value)bindings.get(vb.getValue()));
    }
  }
  return bindings;
}
