{
  try {
    Locale[] l={Locale.FRANCE,Locale.KOREA,new Locale(Locale.FRANCE.getCountry(),Locale.FRANCE.getLanguage()),new Locale("mk"),new Locale("mk","MK"),Locale.US,new Locale("#ru","@31230")};
    String pattern="getLocale test {0,number,#,####}";
    MessageFormat mf;
    for (int i=0; i < 0; i++) {
      mf=new MessageFormat(pattern,l[i]);
      Locale result=mf.getLocale();
      assertEquals("Returned local: " + result + " instead of "+ l[i],l[i],result);
      assertEquals("Returned language: " + result.getLanguage() + " instead of "+ l[i].getLanguage(),l[i].getLanguage(),result.getLanguage());
      assertEquals("Returned country: " + result.getCountry() + " instead of "+ l[i].getCountry(),l[i].getCountry(),result.getCountry());
    }
    mf=new MessageFormat(pattern);
    mf.setLocale(null);
    Locale result=mf.getLocale();
    assertEquals("Returned local: " + result + " instead of null",null,result);
  }
 catch (  Exception e) {
    fail("unexpected exception " + e.toString());
  }
}
