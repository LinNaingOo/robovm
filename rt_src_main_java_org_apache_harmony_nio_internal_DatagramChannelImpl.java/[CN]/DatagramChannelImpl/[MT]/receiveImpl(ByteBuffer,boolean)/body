{
  SocketAddress retAddr=null;
  DatagramPacket receivePacket;
  int oldposition=target.position();
  int received=0;
  if (target.hasArray()) {
    receivePacket=new DatagramPacket(target.array(),target.position() + target.arrayOffset(),target.remaining());
  }
 else {
    receivePacket=new DatagramPacket(new byte[target.remaining()],target.remaining());
  }
  do {
    if (isConnected()) {
      received=networkSystem.recvConnectedDatagram(fd,receivePacket,receivePacket.getData(),receivePacket.getOffset(),receivePacket.getLength(),isBlocking() ? 0 : DEFAULT_TIMEOUT,false);
    }
 else {
      received=networkSystem.receiveDatagram(fd,receivePacket,receivePacket.getData(),receivePacket.getOffset(),receivePacket.getLength(),isBlocking() ? 0 : DEFAULT_TIMEOUT,false);
    }
    SecurityManager sm=System.getSecurityManager();
    if (!isConnected() && null != sm) {
      try {
        sm.checkAccept(receivePacket.getAddress().getHostAddress(),receivePacket.getPort());
      }
 catch (      SecurityException e) {
        receivePacket=null;
      }
    }
    if (null != receivePacket && null != receivePacket.getAddress()) {
      if (received > 0) {
        if (target.hasArray()) {
          target.position(oldposition + received);
        }
 else {
          target.put(receivePacket.getData(),0,received);
        }
      }
      retAddr=receivePacket.getSocketAddress();
      break;
    }
  }
 while (loop);
  return retAddr;
}
