{
  Object res=null;
  try {
    primitiveType=Character.toUpperCase(primitiveType);
switch (primitiveType) {
case 'I':
      res=new Integer(f.getInt(o));
    break;
case 'J':
  res=new Long(f.getLong(o));
break;
case 'Z':
res=new Boolean(f.getBoolean(o));
break;
case 'S':
res=new Short(f.getShort(o));
break;
case 'B':
res=new Byte(f.getByte(o));
break;
case 'C':
res=new Character(f.getChar(o));
break;
case 'D':
res=new Double(f.getDouble(o));
break;
case 'F':
res=new Float(f.getFloat(o));
break;
default :
res=f.get(o);
}
if (expectedException != null) {
fail("expected exception " + expectedException.getName());
}
}
 catch (Exception e) {
if (expectedException == null) {
fail("unexpected exception " + e);
}
 else {
assertTrue("expected exception " + expectedException.getName() + " and got "+ e,e.getClass().equals(expectedException));
}
}
return res;
}
