{
  heads=graph.getHeads();
  nodeToFlowSet=new HashMap<N,BitSet>();
  nodeToIndex=new HashMap<N,Integer>();
  indexToNode=new HashMap<Integer,N>();
  fullSet=new BitSet(graph.size());
  fullSet.flip(0,graph.size());
  for (Iterator<N> i=graph.iterator(); i.hasNext(); ) {
    N o=i.next();
    if (heads.contains(o)) {
      BitSet self=new BitSet();
      self.set(indexOf(o));
      nodeToFlowSet.put(o,self);
    }
 else {
      nodeToFlowSet.put(o,fullSet);
    }
  }
  boolean changed=true;
  do {
    changed=false;
    for (Iterator<N> i=graph.iterator(); i.hasNext(); ) {
      N o=i.next();
      if (heads.contains(o))       continue;
      BitSet predsIntersect=(BitSet)fullSet.clone();
      for (Iterator<N> j=graph.getPredsOf(o).iterator(); j.hasNext(); ) {
        BitSet predSet=nodeToFlowSet.get(j.next());
        predsIntersect.and(predSet);
      }
      BitSet oldSet=nodeToFlowSet.get(o);
      predsIntersect.set(indexOf(o));
      if (!predsIntersect.equals(oldSet)) {
        nodeToFlowSet.put(o,predsIntersect);
        changed=true;
      }
    }
  }
 while (changed);
}
