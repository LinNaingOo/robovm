{
  DotGraph dot=new DotGraph(name);
  dot.setGraphLabel(name);
  dot.setGraphAttribute("compound","true");
  dot.setGraphAttribute("rankdir","LR");
  Map<Unit,Integer> node=new HashMap<Unit,Integer>();
  int id=0;
  Iterator it=graph.iterator();
  while (it.hasNext()) {
    Unit stmt=(Unit)it.next();
    PurityGraphBox ref=(PurityGraphBox)getFlowAfter(stmt);
    DotGraph sub=dot.createSubGraph("cluster" + id);
    DotGraphNode label=sub.drawNode("head" + id);
    String lbl=stmt.toString();
    if (lbl.startsWith("lookupswitch"))     lbl="lookupswitch...";
    if (lbl.startsWith("tableswitch"))     lbl="tableswitch...";
    sub.setGraphLabel(" ");
    label.setLabel(lbl);
    label.setAttribute("fontsize","18");
    label.setShape("box");
    ref.g.fillDotGraph("X" + id,sub);
    node.put(stmt,new Integer(id));
    id++;
  }
  it=graph.iterator();
  while (it.hasNext()) {
    Object src=it.next();
    Iterator itt=graph.getSuccsOf(src).iterator();
    while (itt.hasNext()) {
      Object dst=itt.next();
      DotGraphEdge edge=dot.drawEdge("head" + node.get(src),"head" + node.get(dst));
      edge.setAttribute("ltail","cluster" + node.get(src));
      edge.setAttribute("lhead","cluster" + node.get(dst));
    }
  }
  File f=new File(SourceLocator.v().getOutputDir(),prefix + name + DotGraph.DOT_EXTENSION);
  dot.plot(f.getPath());
}
