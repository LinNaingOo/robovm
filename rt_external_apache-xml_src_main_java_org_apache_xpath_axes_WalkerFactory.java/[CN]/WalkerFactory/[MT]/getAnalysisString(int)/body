{
  StringBuffer buf=new StringBuffer();
  buf.append("count: " + getStepCount(analysis) + " ");
  if ((analysis & BIT_NODETEST_ANY) != 0) {
    buf.append("NTANY|");
  }
  if ((analysis & BIT_PREDICATE) != 0) {
    buf.append("PRED|");
  }
  if ((analysis & BIT_ANCESTOR) != 0) {
    buf.append("ANC|");
  }
  if ((analysis & BIT_ANCESTOR_OR_SELF) != 0) {
    buf.append("ANCOS|");
  }
  if ((analysis & BIT_ATTRIBUTE) != 0) {
    buf.append("ATTR|");
  }
  if ((analysis & BIT_CHILD) != 0) {
    buf.append("CH|");
  }
  if ((analysis & BIT_DESCENDANT) != 0) {
    buf.append("DESC|");
  }
  if ((analysis & BIT_DESCENDANT_OR_SELF) != 0) {
    buf.append("DESCOS|");
  }
  if ((analysis & BIT_FOLLOWING) != 0) {
    buf.append("FOL|");
  }
  if ((analysis & BIT_FOLLOWING_SIBLING) != 0) {
    buf.append("FOLS|");
  }
  if ((analysis & BIT_NAMESPACE) != 0) {
    buf.append("NS|");
  }
  if ((analysis & BIT_PARENT) != 0) {
    buf.append("P|");
  }
  if ((analysis & BIT_PRECEDING) != 0) {
    buf.append("PREC|");
  }
  if ((analysis & BIT_PRECEDING_SIBLING) != 0) {
    buf.append("PRECS|");
  }
  if ((analysis & BIT_SELF) != 0) {
    buf.append(".|");
  }
  if ((analysis & BIT_FILTER) != 0) {
    buf.append("FLT|");
  }
  if ((analysis & BIT_ROOT) != 0) {
    buf.append("R|");
  }
  return buf.toString();
}
