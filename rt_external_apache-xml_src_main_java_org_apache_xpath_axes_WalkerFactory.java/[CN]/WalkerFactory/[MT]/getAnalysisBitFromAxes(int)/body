{
switch (axis) {
case Axis.ANCESTOR:
    return BIT_ANCESTOR;
case Axis.ANCESTORORSELF:
  return BIT_ANCESTOR_OR_SELF;
case Axis.ATTRIBUTE:
return BIT_ATTRIBUTE;
case Axis.CHILD:
return BIT_CHILD;
case Axis.DESCENDANT:
return BIT_DESCENDANT;
case Axis.DESCENDANTORSELF:
return BIT_DESCENDANT_OR_SELF;
case Axis.FOLLOWING:
return BIT_FOLLOWING;
case Axis.FOLLOWINGSIBLING:
return BIT_FOLLOWING_SIBLING;
case Axis.NAMESPACE:
case Axis.NAMESPACEDECLS:
return BIT_NAMESPACE;
case Axis.PARENT:
return BIT_PARENT;
case Axis.PRECEDING:
return BIT_PRECEDING;
case Axis.PRECEDINGSIBLING:
return BIT_PRECEDING_SIBLING;
case Axis.SELF:
return BIT_SELF;
case Axis.ALLFROMNODE:
return BIT_DESCENDANT_OR_SELF;
case Axis.DESCENDANTSFROMROOT:
case Axis.ALL:
case Axis.DESCENDANTSORSELFFROMROOT:
return BIT_ANY_DESCENDANT_FROM_ROOT;
case Axis.ROOT:
return BIT_ROOT;
case Axis.FILTEREDLIST:
return BIT_FILTER;
default :
return BIT_FILTER;
}
}
