{
  assertTrue("UnmodifiableMapTest - keySetTest - should contain \"0\"",keySet.contains("0"));
  assertTrue("UnmodifiableMapTest - keySetTest - should contain \"50\"",keySet.contains("50"));
  assertTrue("UnmodifiableMapTest - keySetTest - should not contain \"100\"",!keySet.contains("100"));
  HashSet<String> hs=new HashSet<String>();
  hs.add("0");
  hs.add("25");
  hs.add("99");
  assertTrue("UnmodifiableMapTest - keySetTest - should contain set of \"0\", \"25\", and \"99\"",keySet.containsAll(hs));
  hs.add("100");
  assertTrue("UnmodifiableMapTest - keySetTest - should not contain set of \"0\", \"25\", \"99\" and \"100\"",!keySet.containsAll(hs));
  assertTrue("UnmodifiableMapTest - keySetTest - should not be empty",!keySet.isEmpty());
  Iterator<?> it=keySet.iterator();
  while (it.hasNext()) {
    assertTrue("UnmodifiableMapTest - keySetTest - Iterator returned wrong values",keySet.contains(it.next()));
  }
  assertTrue("UnmodifiableMapTest - keySetTest - returned wrong size.  Wanted 100, got: " + keySet.size(),keySet.size() == 100);
  Object[] objArray;
  objArray=keySet.toArray();
  for (int counter=0; it.hasNext(); counter++) {
    assertTrue("UnmodifiableMapTest - keySetTest - toArray returned incorrect array",objArray[counter] == it.next());
  }
  objArray=new Object[100];
  keySet.toArray(objArray);
  for (int counter=0; it.hasNext(); counter++) {
    assertTrue("UnmodifiableMapTest - keySetTest - toArray(Object) filled array incorrectly",objArray[counter] == it.next());
  }
}
