{
  StringBuilder sb=new StringBuilder();
  for (  URL g : includes) {
    InputStream in=null;
    try {
      in=g.openStream();
      sb.append(IOUtils.toString(in,"UTF-8"));
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
 finally {
      IOUtils.closeQuietly(in);
    }
    sb.append("\n");
  }
  sb.append("\n");
  for (  String s : asm) {
    sb.append("module asm \"");
    sb.append(s);
    sb.append("\"\n");
  }
  sb.append("\n");
  for (  UserType type : types) {
    sb.append(type.getAlias());
    sb.append(" = type ");
    sb.append(type.getDefinition());
    sb.append("\n");
  }
  sb.append("\n");
  for (  FunctionDeclaration fd : functionDeclarations) {
    sb.append(fd.toString());
    sb.append("\n");
  }
  sb.append("\n");
  for (  Global g : globals) {
    sb.append(g.getDefinition());
    sb.append("\n");
  }
  sb.append("\n");
  for (  Alias a : aliases) {
    sb.append(a.getDefinition());
    sb.append("\n");
  }
  sb.append("\n");
  for (  Function f : functions) {
    sb.append(f.toString());
    sb.append("\n");
  }
  sb.append("\n");
  for (  NamedMetadata md : namedMetadata) {
    sb.append(md.toString());
    sb.append("\n");
  }
  sb.append("\n");
  for (  UnnamedMetadata md : unnamedMetadata) {
    sb.append(md.getDefinition());
    sb.append("\n");
  }
  return sb.toString();
}
