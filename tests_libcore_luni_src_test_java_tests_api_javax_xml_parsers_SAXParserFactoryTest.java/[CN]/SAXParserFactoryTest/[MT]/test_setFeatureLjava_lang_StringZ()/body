{
  String[] features={"http://xml.org/sax/features/namespaces","http://xml.org/sax/features/validation"};
  for (int i=0; i < features.length; i++) {
    try {
      spf.setFeature(features[i],true);
      assertTrue(spf.getFeature(features[i]));
      spf.setFeature(features[i],false);
      assertFalse(spf.getFeature(features[i]));
    }
 catch (    ParserConfigurationException pce) {
      fail("ParserConfigurationException is thrown");
    }
catch (    SAXNotRecognizedException snre) {
      fail("SAXNotRecognizedException is thrown");
    }
catch (    SAXNotSupportedException snse) {
      fail("SAXNotSupportedException is thrown");
    }
  }
  try {
    spf.setFeature("",true);
    fail("SAXNotRecognizedException is not thrown");
  }
 catch (  ParserConfigurationException pce) {
    fail("ParserConfigurationException is thrown");
  }
catch (  SAXNotRecognizedException snre) {
  }
catch (  SAXNotSupportedException snse) {
    fail("SAXNotSupportedException is thrown");
  }
catch (  NullPointerException npe) {
    fail("NullPointerException is thrown");
  }
  try {
    spf.setFeature("http://xml.org/sax/features/unknown-feature",true);
  }
 catch (  ParserConfigurationException pce) {
    fail("ParserConfigurationException is thrown");
  }
catch (  SAXNotRecognizedException snre) {
    fail("SAXNotRecognizedException is thrown");
  }
catch (  SAXNotSupportedException snse) {
  }
catch (  NullPointerException npe) {
    fail("NullPointerException is thrown");
  }
  try {
    spf.setFeature(null,true);
    fail("NullPointerException is not thrown");
  }
 catch (  ParserConfigurationException pce) {
    fail("ParserConfigurationException is thrown");
  }
catch (  SAXNotRecognizedException snre) {
    fail("SAXNotRecognizedException is thrown");
  }
catch (  SAXNotSupportedException snse) {
    fail("SAXNotSupportedException is thrown");
  }
catch (  NullPointerException npe) {
  }
}
