{
  assertNull(LogManager.getLogManager().getLogger("testGetLogger_WithParent_ParentLogger"));
  Logger root=Logger.getLogger("");
  Logger pLog=Logger.getLogger("testGetLogger_WithParent_ParentLogger",VALID_RESOURCE_BUNDLE);
  pLog.setLevel(Level.CONFIG);
  pLog.addHandler(new MockHandler());
  pLog.setFilter(new MockFilter());
  pLog.setUseParentHandlers(false);
  assertEquals("testGetLogger_WithParent_ParentLogger",pLog.getName());
  assertSame(pLog.getParent(),root);
  assertNull(LogManager.getLogManager().getLogger("testGetLogger_WithParent_ParentLogger.child"));
  Logger child=Logger.getLogger("testGetLogger_WithParent_ParentLogger.child");
  assertNull(child.getFilter());
  assertEquals(0,child.getHandlers().length);
  assertNull(child.getLevel());
  assertEquals("testGetLogger_WithParent_ParentLogger.child",child.getName());
  assertSame(child.getParent(),pLog);
  assertNull(child.getResourceBundle());
  assertNull(child.getResourceBundleName());
  assertTrue(child.getUseParentHandlers());
  Logger notChild=Logger.getLogger("testGetLogger_WithParent_ParentLogger1.child");
  assertNull(notChild.getFilter());
  assertEquals(0,notChild.getHandlers().length);
  assertNull(notChild.getLevel());
  assertEquals("testGetLogger_WithParent_ParentLogger1.child",notChild.getName());
  assertNotSame(notChild.getParent(),pLog);
  assertNull(notChild.getResourceBundle());
  assertNull(notChild.getResourceBundleName());
  assertTrue(notChild.getUseParentHandlers());
  assertEquals("testGetLogger_WithParent_ParentLogger.child",child.getName());
  assertSame(child.getParent().getParent(),root);
  Logger childOfChild=Logger.getLogger("testGetLogger_WithParent_ParentLogger.child.child");
  assertNull(childOfChild.getFilter());
  assertEquals(0,childOfChild.getHandlers().length);
  assertSame(child.getParent().getParent(),root);
  assertNull(childOfChild.getLevel());
  assertEquals("testGetLogger_WithParent_ParentLogger.child.child",childOfChild.getName());
  assertSame(childOfChild.getParent(),child);
  assertSame(childOfChild.getParent().getParent(),pLog);
  assertSame(childOfChild.getParent().getParent().getParent(),root);
  assertNull(childOfChild.getResourceBundle());
  assertNull(childOfChild.getResourceBundleName());
  assertTrue(childOfChild.getUseParentHandlers());
  assertEquals("testGetLogger_WithParent_ParentLogger1.child",notChild.getName());
  assertSame(child.getParent().getParent(),root);
  assertNotSame(child.getParent(),root);
  assertNotSame(root.getParent(),root);
  Logger twoDot=Logger.getLogger("..");
  assertSame(twoDot.getParent(),root);
}
