{
  soot.Type sootType=method.getParameterType(i);
  if (hasPointerAnnotation(method,i)) {
    if (!sootType.equals(LongType.v())) {
      throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " must be of type long when annotated with @Pointer.");
    }
    return I8_PTR;
  }
  if (hasStructRetAnnotation(method,i)) {
    if (i > 0) {
      throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " cannot be annotated with @StructRet. Only the first"+ " parameter may have this annotation.");
    }
    if (!isStruct(sootType)) {
      throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " must be a sub class of Struct when annotated with @StructRet.");
    }
    return new PointerType(getStructType(sootType));
  }
  if (isStruct(sootType)) {
    if (isPassByValue(method,i) && "@Callback".equals(anno)) {
      return getStructType(sootType);
    }
    return new PointerType(getStructType(sootType));
  }
 else   if (isEnum(sootType)) {
    return I32;
  }
 else   if (isNativeObject(sootType)) {
    return I8_PTR;
  }
  return getType(sootType);
}
