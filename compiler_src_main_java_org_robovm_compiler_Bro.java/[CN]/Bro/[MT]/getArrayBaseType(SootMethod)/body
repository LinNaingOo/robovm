{
  AnnotationTag annotation=getBaseTypeAnnotation(method);
  if (annotation == null) {
    return null;
  }
  AnnotationClassElem elem=(AnnotationClassElem)annotation.getElemAt(0);
switch (elem.getDesc().charAt(0)) {
case 'Z':
    return BooleanType.v();
case 'B':
  return ByteType.v();
case 'S':
return ShortType.v();
case 'C':
return CharType.v();
case 'I':
return IntType.v();
case 'J':
return LongType.v();
case 'F':
return FloatType.v();
case 'D':
return DoubleType.v();
}
throw new IllegalArgumentException("Unsupported type " + elem.getDesc() + " in @BaseType annotation on method "+ method+ ". Only primitive types are supported.");
}
