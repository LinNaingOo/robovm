{
  if (!super.deepEquals(expr))   return false;
  StepPattern sp=(StepPattern)expr;
  if (null != m_predicates) {
    int n=m_predicates.length;
    if ((null == sp.m_predicates) || (sp.m_predicates.length != n))     return false;
    for (int i=0; i < n; i++) {
      if (!m_predicates[i].deepEquals(sp.m_predicates[i]))       return false;
    }
  }
 else   if (null != sp.m_predicates)   return false;
  if (null != m_relativePathPattern) {
    if (!m_relativePathPattern.deepEquals(sp.m_relativePathPattern))     return false;
  }
 else   if (sp.m_relativePathPattern != null)   return false;
  return true;
}
