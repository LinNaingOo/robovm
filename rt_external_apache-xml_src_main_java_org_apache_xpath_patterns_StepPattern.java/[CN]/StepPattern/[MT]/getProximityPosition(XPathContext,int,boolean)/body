{
  int pos=0;
  int context=xctxt.getCurrentNode();
  DTM dtm=xctxt.getDTM(context);
  int parent=dtm.getParent(context);
  try {
    DTMAxisTraverser traverser=dtm.getAxisTraverser(Axis.CHILD);
    for (int child=traverser.first(parent); DTM.NULL != child; child=traverser.next(parent,child)) {
      try {
        xctxt.pushCurrentNode(child);
        if (NodeTest.SCORE_NONE != super.execute(xctxt,child)) {
          boolean pass=true;
          try {
            xctxt.pushSubContextList(this);
            for (int i=0; i < predPos; i++) {
              xctxt.pushPredicatePos(i);
              try {
                XObject pred=m_predicates[i].execute(xctxt);
                try {
                  if (XObject.CLASS_NUMBER == pred.getType()) {
                    if ((pos + 1) != (int)pred.numWithSideEffects()) {
                      pass=false;
                      break;
                    }
                  }
 else                   if (!pred.boolWithSideEffects()) {
                    pass=false;
                    break;
                  }
                }
  finally {
                  pred.detach();
                }
              }
  finally {
                xctxt.popPredicatePos();
              }
            }
          }
  finally {
            xctxt.popSubContextList();
          }
          if (pass)           pos++;
          if (!findLast && child == context) {
            return pos;
          }
        }
      }
  finally {
        xctxt.popCurrentNode();
      }
    }
  }
 catch (  javax.xml.transform.TransformerException se) {
    throw new java.lang.RuntimeException(se.getMessage());
  }
  return pos;
}
