{
  X509Certificate[] original=chain;
  int currIndex;
  for (currIndex=0; currIndex < chain.length; currIndex++) {
    boolean foundNext=false;
    for (int nextIndex=currIndex + 1; nextIndex < chain.length; nextIndex++) {
      if (chain[currIndex].getIssuerDN().equals(chain[nextIndex].getSubjectDN())) {
        foundNext=true;
        if (nextIndex != currIndex + 1) {
          if (chain == original) {
            chain=original.clone();
          }
          X509Certificate tempCertificate=chain[nextIndex];
          chain[nextIndex]=chain[currIndex + 1];
          chain[currIndex + 1]=tempCertificate;
        }
        break;
      }
    }
    if (!foundNext) {
      break;
    }
  }
  int anchorIndex;
  for (anchorIndex=0; anchorIndex <= currIndex; anchorIndex++) {
    TrustAnchor trustAnchor=findTrustAnchorBySubjectAndPublicKey(chain[anchorIndex]);
    if (trustAnchor != null) {
      trustAnchors.add(trustAnchor);
      break;
    }
  }
  int chainLength=anchorIndex;
  X509Certificate[] newChain=((chainLength == chain.length) ? chain : Arrays.copyOf(chain,chainLength));
  if (trustAnchors.isEmpty()) {
    TrustAnchor trustAnchor=findTrustAnchorByIssuerAndSignature(newChain[anchorIndex - 1]);
    if (trustAnchor != null) {
      trustAnchors.add(trustAnchor);
    }
  }
  return newChain;
}
