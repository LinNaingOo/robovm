{
  int length=in.length * 4 / 3;
  length+=length / 76 + 3;
  byte[] out=new byte[length];
  int index=0, i, crlr=0, end=in.length - in.length % 3;
  for (i=0; i < end; i+=3) {
    out[index++]=map[(in[i] & 0xff) >> 2];
    out[index++]=map[((in[i] & 0x03) << 4) | ((in[i + 1] & 0xff) >> 4)];
    out[index++]=map[((in[i + 1] & 0x0f) << 2) | ((in[i + 2] & 0xff) >> 6)];
    out[index++]=map[(in[i + 2] & 0x3f)];
    if (((index - crlr) % 76 == 0) && (index != 0)) {
      out[index++]='\n';
      crlr++;
    }
  }
switch (in.length % 3) {
case 1:
    out[index++]=map[(in[end] & 0xff) >> 2];
  out[index++]=map[(in[end] & 0x03) << 4];
out[index++]='=';
out[index++]='=';
break;
case 2:
out[index++]=map[(in[end] & 0xff) >> 2];
out[index++]=map[((in[end] & 0x03) << 4) | ((in[end + 1] & 0xff) >> 4)];
out[index++]=map[((in[end + 1] & 0x0f) << 2)];
out[index++]='=';
break;
}
return new String(out,0,index,charsetName);
}
