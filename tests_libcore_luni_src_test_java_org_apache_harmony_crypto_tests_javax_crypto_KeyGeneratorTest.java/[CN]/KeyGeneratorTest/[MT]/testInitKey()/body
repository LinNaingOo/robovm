{
  byte flag=0xF;
  if (!DEFSupported) {
    fail(NotSupportMsg);
    return;
  }
  if (defaultAlgorithm.equals(validAlgorithmsKeyGenerator[validAlgorithmsKeyGenerator.length - 1])) {
    return;
  }
  int[] size={Integer.MIN_VALUE,-1,0,112,168,Integer.MAX_VALUE};
  KeyGenerator[] kgs=createKGs();
  SecureRandom random=new SecureRandom();
  for (int i=0; i < kgs.length; i++) {
    for (int j=0; j < size.length; j++) {
      try {
        kgs[i].init(size[j]);
        flag&=0xE;
      }
 catch (      InvalidParameterException ignore) {
        flag&=0xD;
      }
      try {
        kgs[i].init(size[j],random);
        flag&=0xB;
      }
 catch (      InvalidParameterException ignore) {
        flag&=0x7;
      }
    }
  }
  assertTrue(flag == 0);
}
