{
  Pack p;
  addPack(p=new JimpleBodyPack());
{
    p.add(new Transform("jb.tt",soot.toolkits.exceptions.TrapTightener.v()));
    p.add(new Transform("jb.ls",LocalSplitter.v()));
    p.add(new Transform("jb.a",Aggregator.v()));
    p.add(new Transform("jb.ule",UnusedLocalEliminator.v()));
    p.add(new Transform("jb.tr",TypeAssigner.v()));
    p.add(new Transform("jb.ulp",LocalPacker.v()));
    p.add(new Transform("jb.lns",LocalNameStandardizer.v()));
    p.add(new Transform("jb.cp",CopyPropagator.v()));
    p.add(new Transform("jb.dae",DeadAssignmentEliminator.v()));
    p.add(new Transform("jb.cp-ule",UnusedLocalEliminator.v()));
    p.add(new Transform("jb.lp",LocalPacker.v()));
    p.add(new Transform("jb.ne",NopEliminator.v()));
    p.add(new Transform("jb.uce",UnreachableCodeEliminator.v()));
  }
  addPack(p=new BodyPack("jtp"));
  addPack(p=new BodyPack("jop"));
{
    p.add(new Transform("jop.cse",CommonSubexpressionEliminator.v()));
    p.add(new Transform("jop.bcm",BusyCodeMotion.v()));
    p.add(new Transform("jop.lcm",LazyCodeMotion.v()));
    p.add(new Transform("jop.cp",CopyPropagator.v()));
    p.add(new Transform("jop.cpf",ConstantPropagatorAndFolder.v()));
    p.add(new Transform("jop.cbf",ConditionalBranchFolder.v()));
    p.add(new Transform("jop.dae",DeadAssignmentEliminator.v()));
    p.add(new Transform("jop.nce",new NullCheckEliminator()));
    p.add(new Transform("jop.uce1",UnreachableCodeEliminator.v()));
    p.add(new Transform("jop.ubf1",UnconditionalBranchFolder.v()));
    p.add(new Transform("jop.uce2",UnreachableCodeEliminator.v()));
    p.add(new Transform("jop.ubf2",UnconditionalBranchFolder.v()));
    p.add(new Transform("jop.ule",UnusedLocalEliminator.v()));
  }
  addPack(p=new BodyPack("jap"));
{
    p.add(new Transform("jap.npc",NullPointerChecker.v()));
    p.add(new Transform("jap.npcolorer",NullPointerColorer.v()));
    p.add(new Transform("jap.abc",ArrayBoundsChecker.v()));
    p.add(new Transform("jap.profiling",ProfilingGenerator.v()));
    p.add(new Transform("jap.sea",SideEffectTagger.v()));
    p.add(new Transform("jap.cgtagger",CallGraphTagger.v()));
    p.add(new Transform("jap.parity",ParityTagger.v()));
    p.add(new Transform("jap.pat",ParameterAliasTagger.v()));
    p.add(new Transform("jap.rdtagger",ReachingDefsTagger.v()));
    p.add(new Transform("jap.lvtagger",LiveVarsTagger.v()));
    p.add(new Transform("jap.che",CastCheckEliminatorDumper.v()));
    p.add(new Transform("jap.umt",new UnreachableMethodTransformer()));
    p.add(new Transform("jap.lit",LoopInvariantFinder.v()));
    p.add(new Transform("jap.aet",AvailExprTagger.v()));
    p.add(new Transform("jap.dmt",DominatorsTagger.v()));
  }
  onlyStandardPacks=true;
}
