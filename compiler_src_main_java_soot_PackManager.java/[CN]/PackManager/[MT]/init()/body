{
  Pack p;
  addPack(p=new JimpleBodyPack());
{
    p.add(new Transform("jb.tt",soot.toolkits.exceptions.TrapTightener.v()));
    p.add(new Transform("jb.ls",LocalSplitter.v()));
    p.add(new Transform("jb.a",Aggregator.v()));
    p.add(new Transform("jb.ule",UnusedLocalEliminator.v()));
    p.add(new Transform("jb.tr",TypeAssigner.v()));
    p.add(new Transform("jb.ulp",LocalPacker.v()));
    p.add(new Transform("jb.lns",LocalNameStandardizer.v()));
    p.add(new Transform("jb.cp",CopyPropagator.v()));
    p.add(new Transform("jb.dae",DeadAssignmentEliminator.v()));
    p.add(new Transform("jb.cp-ule",UnusedLocalEliminator.v()));
    p.add(new Transform("jb.lp",LocalPacker.v()));
    p.add(new Transform("jb.ne",NopEliminator.v()));
    p.add(new Transform("jb.uce",UnreachableCodeEliminator.v()));
  }
  addPack(p=new JavaToJimpleBodyPack());
{
    p.add(new Transform("jj.ls",LocalSplitter.v()));
    p.add(new Transform("jj.a",Aggregator.v()));
    p.add(new Transform("jj.ule",UnusedLocalEliminator.v()));
    p.add(new Transform("jj.ne",NopEliminator.v()));
    p.add(new Transform("jj.tr",TypeAssigner.v()));
    p.add(new Transform("jj.ulp",LocalPacker.v()));
    p.add(new Transform("jj.lns",LocalNameStandardizer.v()));
    p.add(new Transform("jj.cp",CopyPropagator.v()));
    p.add(new Transform("jj.dae",DeadAssignmentEliminator.v()));
    p.add(new Transform("jj.cp-ule",UnusedLocalEliminator.v()));
    p.add(new Transform("jj.lp",LocalPacker.v()));
    p.add(new Transform("jj.uce",UnreachableCodeEliminator.v()));
  }
  addPack(p=new ScenePack("wjpp"));
  addPack(p=new ScenePack("wspp"));
  addPack(p=new CallGraphPack("cg"));
{
    p.add(new Transform("cg.cha",CHATransformer.v()));
    p.add(new Transform("cg.spark",SparkTransformer.v()));
    p.add(new Transform("cg.paddle",PaddleHook.v()));
  }
  addPack(p=new ScenePack("wstp"));
  addPack(p=new ScenePack("wsop"));
  addPack(p=new ScenePack("wjtp"));
{
    p.add(new Transform("wjtp.mhp",MhpTransformer.v()));
    p.add(new Transform("wjtp.tn",LockAllocator.v()));
  }
  addPack(p=new ScenePack("wjop"));
{
    p.add(new Transform("wjop.smb",StaticMethodBinder.v()));
    p.add(new Transform("wjop.si",StaticInliner.v()));
  }
  addPack(p=new ScenePack("wjap"));
{
    p.add(new Transform("wjap.ra",RectangularArrayFinder.v()));
    p.add(new Transform("wjap.umt",UnreachableMethodsTagger.v()));
    p.add(new Transform("wjap.uft",UnreachableFieldsTagger.v()));
    p.add(new Transform("wjap.tqt",TightestQualifiersTagger.v()));
    p.add(new Transform("wjap.cgg",CallGraphGrapher.v()));
    p.add(new Transform("wjap.purity",PurityAnalysis.v()));
  }
  addPack(p=new BodyPack(Shimple.PHASE));
  addPack(p=new BodyPack("stp"));
  addPack(p=new BodyPack("sop"));
{
    p.add(new Transform("sop.cpf",SConstantPropagatorAndFolder.v()));
  }
  addPack(p=new BodyPack("jtp"));
  addPack(p=new BodyPack("jop"));
{
    p.add(new Transform("jop.cse",CommonSubexpressionEliminator.v()));
    p.add(new Transform("jop.bcm",BusyCodeMotion.v()));
    p.add(new Transform("jop.lcm",LazyCodeMotion.v()));
    p.add(new Transform("jop.cp",CopyPropagator.v()));
    p.add(new Transform("jop.cpf",ConstantPropagatorAndFolder.v()));
    p.add(new Transform("jop.cbf",ConditionalBranchFolder.v()));
    p.add(new Transform("jop.dae",DeadAssignmentEliminator.v()));
    p.add(new Transform("jop.nce",new NullCheckEliminator()));
    p.add(new Transform("jop.uce1",UnreachableCodeEliminator.v()));
    p.add(new Transform("jop.ubf1",UnconditionalBranchFolder.v()));
    p.add(new Transform("jop.uce2",UnreachableCodeEliminator.v()));
    p.add(new Transform("jop.ubf2",UnconditionalBranchFolder.v()));
    p.add(new Transform("jop.ule",UnusedLocalEliminator.v()));
  }
  addPack(p=new BodyPack("jap"));
{
    p.add(new Transform("jap.npc",NullPointerChecker.v()));
    p.add(new Transform("jap.npcolorer",NullPointerColorer.v()));
    p.add(new Transform("jap.abc",ArrayBoundsChecker.v()));
    p.add(new Transform("jap.profiling",ProfilingGenerator.v()));
    p.add(new Transform("jap.sea",SideEffectTagger.v()));
    p.add(new Transform("jap.fieldrw",FieldTagger.v()));
    p.add(new Transform("jap.cgtagger",CallGraphTagger.v()));
    p.add(new Transform("jap.parity",ParityTagger.v()));
    p.add(new Transform("jap.pat",ParameterAliasTagger.v()));
    p.add(new Transform("jap.rdtagger",ReachingDefsTagger.v()));
    p.add(new Transform("jap.lvtagger",LiveVarsTagger.v()));
    p.add(new Transform("jap.che",CastCheckEliminatorDumper.v()));
    p.add(new Transform("jap.umt",new UnreachableMethodTransformer()));
    p.add(new Transform("jap.lit",LoopInvariantFinder.v()));
    p.add(new Transform("jap.aet",AvailExprTagger.v()));
    p.add(new Transform("jap.dmt",DominatorsTagger.v()));
  }
  addPack(p=new BodyPack("gb"));
{
    p.add(new Transform("gb.a1",Aggregator.v()));
    p.add(new Transform("gb.cf",ConstructorFolder.v()));
    p.add(new Transform("gb.a2",Aggregator.v()));
    p.add(new Transform("gb.ule",UnusedLocalEliminator.v()));
  }
  addPack(p=new BodyPack("gop"));
  addPack(p=new BodyPack("bb"));
{
    p.add(new Transform("bb.lso",LoadStoreOptimizer.v()));
    p.add(new Transform("bb.pho",PeepholeOptimizer.v()));
    p.add(new Transform("bb.ule",UnusedLocalEliminator.v()));
    p.add(new Transform("bb.lp",LocalPacker.v()));
  }
  addPack(p=new BodyPack("bop"));
  addPack(p=new BodyPack("tag"));
{
    p.add(new Transform("tag.ln",LineNumberTagAggregator.v()));
    p.add(new Transform("tag.an",ArrayNullTagAggregator.v()));
    p.add(new Transform("tag.dep",DependenceTagAggregator.v()));
    p.add(new Transform("tag.fieldrw",FieldTagAggregator.v()));
  }
  addPack(p=new BodyPack("db"));
{
    p.add(new Transform("db.transformations",null));
    p.add(new Transform("db.renamer",null));
    p.add(new Transform("db.deobfuscate",null));
    p.add(new Transform("db.force-recompile",null));
  }
  onlyStandardPacks=true;
}
