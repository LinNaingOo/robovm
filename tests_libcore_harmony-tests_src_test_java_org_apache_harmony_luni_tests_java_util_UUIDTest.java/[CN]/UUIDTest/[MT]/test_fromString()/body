{
  UUID actual=UUID.fromString("f81d4fae-7dec-11d0-a765-00a0c91e6bf6");
  UUID expected=new UUID(0xf81d4fae7dec11d0L,0xa76500a0c91e6bf6L);
  assertEquals(expected,actual);
  assertEquals(2,actual.variant());
  assertEquals(1,actual.version());
  assertEquals(130742845922168750L,actual.timestamp());
  assertEquals(10085,actual.clockSequence());
  assertEquals(690568981494L,actual.node());
  actual=UUID.fromString("00000000-0000-1000-8000-000000000000");
  expected=new UUID(0x0000000000001000L,0x8000000000000000L);
  assertEquals(expected,actual);
  assertEquals(2,actual.variant());
  assertEquals(1,actual.version());
  assertEquals(0L,actual.timestamp());
  assertEquals(0,actual.clockSequence());
  assertEquals(0L,actual.node());
  try {
    UUID.fromString(null);
    fail("No NPE");
  }
 catch (  NullPointerException e) {
  }
  try {
    UUID.fromString("");
    fail("No IAE");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    UUID.fromString("f81d4fae_7dec-11d0-a765-00a0c91e6bf6");
    fail("No IAE");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    UUID.fromString("f81d4fae-7dec_11d0-a765-00a0c91e6bf6");
    fail("No IAE");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    UUID.fromString("f81d4fae-7dec-11d0_a765-00a0c91e6bf6");
    fail("No IAE");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    UUID.fromString("f81d4fae-7dec-11d0-a765_00a0c91e6bf6");
    fail("No IAE");
  }
 catch (  IllegalArgumentException e) {
  }
}
