{
  final ByteArrayOutputStream errBuffer=new ByteArrayOutputStream();
  PrintStream out=new PrintStream(errBuffer);
  for (  Provider p : mX509Providers) {
    try {
      CertificateFactory f=CertificateFactory.getInstance("X.509",p);
      getPublicKey(f);
      getType(f);
      check_equals(f);
      check_toString(f);
      check_hashCode(f);
      checkValidity(f);
      getVersion(f);
      getSerialNumber(f);
      getIssuerDN(f);
      getIssuerX500Principal(f);
      getSubjectDN(f);
      getSubjectUniqueID(f);
      getSubjectX500Principal(f);
      getNotBeforeAndNotAfterDates(f);
      getSigAlgName(f);
      getSigAlgOID(f);
      getSigAlgParams(f);
      getIssuerUniqueID(f);
      getSubjectUniqueID(f);
      getKeyUsage(f);
      getExtendedKeyUsage(f);
      getBasicConstraints(f);
      getSubjectAlternativeNames(f);
      getSubjectAlternativeNames_IPV6(f);
      getSubjectAlternativeNames_InvalidIP(f);
      getSubjectAlternativeNames_Other(f);
      getSubjectAlternativeNames_Email(f);
      getSubjectAlternativeNames_DNS(f);
      getSubjectAlternativeNames_DirName(f);
      getSubjectAlternativeNames_URI(f);
      getSubjectAlternativeNames_RID(f);
      getSubjectAlternativeNames_None(f);
      getIssuerAlternativeNames(f);
      getTBSCertificate(f);
      getSignature(f);
      hasUnsupportedCriticalExtension(f);
      getEncoded(f);
      verify(f);
      generateCertificate_PEM_TrailingData(f);
      generateCertificate_DER_TrailingData(f);
      generateCertificates_X509_PEM(f);
      generateCertificates_X509_DER(f);
      generateCertificates_PKCS7_PEM(f);
      generateCertificates_PKCS7_DER(f);
      generateCertificates_Empty(f);
      generateCertificates_X509_PEM_TrailingData(f);
      generateCertificates_X509_DER_TrailingData(f);
      generateCertificates_PKCS7_PEM_TrailingData(f);
      generateCertificates_PKCS7_DER_TrailingData(f);
      test_Serialization(f);
    }
 catch (    Throwable e) {
      out.append("Error encountered checking " + p.getName() + "\n");
      e.printStackTrace(out);
    }
  }
  out.flush();
  if (errBuffer.size() > 0) {
    throw new Exception("Errors encountered:\n\n" + errBuffer.toString() + "\n\n");
  }
}
