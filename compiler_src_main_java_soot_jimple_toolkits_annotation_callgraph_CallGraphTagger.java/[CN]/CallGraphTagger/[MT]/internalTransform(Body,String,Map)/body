{
  CallGraph cg=Scene.v().getCallGraph();
  if (methodToContexts == null) {
    methodToContexts=new MethodToContexts(Scene.v().getReachableMethods().listener());
  }
  Iterator stmtIt=b.getUnits().iterator();
  while (stmtIt.hasNext()) {
    Stmt s=(Stmt)stmtIt.next();
    Iterator edges=cg.edgesOutOf(s);
    while (edges.hasNext()) {
      Edge e=(Edge)edges.next();
      SootMethod m=e.tgt();
      s.addTag(new LinkTag("CallGraph: Type: " + e.kind() + " Target Method/Context: "+ e.getTgt().toString(),m,m.getDeclaringClass().getName(),"Call Graph"));
    }
  }
  SootMethod m=b.getMethod();
  for (Iterator momcIt=methodToContexts.get(m).iterator(); momcIt.hasNext(); ) {
    final MethodOrMethodContext momc=(MethodOrMethodContext)momcIt.next();
    Iterator callerEdges=cg.edgesInto(momc);
    while (callerEdges.hasNext()) {
      Edge callEdge=(Edge)callerEdges.next();
      SootMethod methodCaller=callEdge.src();
      Host src=methodCaller;
      if (callEdge.srcUnit() != null) {
        src=callEdge.srcUnit();
      }
      m.addTag(new LinkTag("CallGraph: Source Type: " + callEdge.kind() + " Source Method/Context: "+ callEdge.getSrc().toString(),src,methodCaller.getDeclaringClass().getName(),"Call Graph"));
    }
  }
}
