{
  ClassLoader cl=getClass().getClassLoader();
  Class[] interfaces={java.beans.PropertyChangeListener.class};
  Object proxy=Proxy.newProxyInstance(cl,interfaces,new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      return null;
    }
  }
);
  for (  Field field : proxy.getClass().getDeclaredFields()) {
    field.setAccessible(true);
    assertFalse(field.isAnnotationPresent(Deprecated.class));
  }
}
