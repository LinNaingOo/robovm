{
  Map<String,Integer> allSupported=new HashMap<String,Integer>();
  Provider[] allProviders=Security.getProviders();
  for (  Provider provider : allProviders) {
    for (    Object k : provider.keySet()) {
      String key=(String)k;
      if (!isAlias(key) && !isProviderData(key)) {
        addOrIncrementTable(allSupported,key);
      }
    }
  }
  for (  Provider provider : allProviders) {
    for (    Map.Entry entry : provider.entrySet()) {
      String key=(String)entry.getKey();
      if (isAlias(key)) {
        String aliasName=key.substring("ALG.ALIAS.".length()).toUpperCase();
        String realName=aliasName.substring(0,aliasName.indexOf(".") + 1) + entry.getValue();
        if (!aliasName.equalsIgnoreCase(realName)) {
          if (allSupported.containsKey(aliasName)) {
            addOrIncrementTable(allSupported,aliasName);
          }
        }
      }
    }
  }
  for (  String filterString : allSupported.keySet()) {
    try {
      Provider[] provTest=Security.getProviders(filterString);
      int expected=allSupported.get(filterString);
      assertEquals("Unexpected number of providers returned for filter " + filterString + ":\n"+ allSupported,expected,provTest.length);
    }
 catch (    InvalidParameterException e) {
    }
  }
  try {
    Security.getProviders("Signature.SHA1withDSA :512");
    fail("InvalidParameterException should be thrown <Signature.SHA1withDSA :512>");
  }
 catch (  InvalidParameterException e) {
  }
}
