{
  dp=new DatagramPacket("Hello".getBytes(),5,InetAddress.getLocalHost(),1000);
  assertEquals("Incorrect port returned",1000,dp.getPort());
  InetAddress localhost=InetAddress.getByName("localhost");
  int[] ports=Support_PortManager.getNextPortsForUDP(2);
  final int port=ports[0];
  final Object lock=new Object();
  Thread thread=new Thread(new Runnable(){
    public void run(){
      DatagramSocket socket=null;
      try {
        socket=new DatagramSocket(port);
synchronized (lock) {
          started=true;
          lock.notifyAll();
        }
        socket.setSoTimeout(3000);
        DatagramPacket packet=new DatagramPacket(new byte[256],256);
        socket.receive(packet);
        socket.send(packet);
        socket.close();
      }
 catch (      IOException e) {
        System.out.println("thread exception: " + e);
        if (socket != null)         socket.close();
      }
    }
  }
);
  thread.start();
  DatagramSocket socket=null;
  try {
    socket=new DatagramSocket(ports[1]);
    socket.setSoTimeout(3000);
    DatagramPacket packet=new DatagramPacket(new byte[]{1,2,3,4,5,6},6,localhost,port);
synchronized (lock) {
      try {
        if (!started)         lock.wait();
      }
 catch (      InterruptedException e) {
        fail(e.toString());
      }
    }
    socket.send(packet);
    socket.receive(packet);
    socket.close();
    assertTrue("datagram received wrong port: " + packet.getPort(),packet.getPort() == port);
  }
  finally {
    if (socket != null) {
      socket.close();
    }
  }
}
