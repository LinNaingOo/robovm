{
  CharsetEncoder newEncoder=cs.newEncoder();
{
    CharBuffer in=CharBuffer.wrap("A");
    ByteBuffer out=ByteBuffer.allocate(0x10);
    newEncoder.encode(in,out,false);
  }
{
    CharBuffer in=CharBuffer.wrap("A");
    ByteBuffer out=ByteBuffer.allocate(0x10);
    newEncoder.reset();
    newEncoder.encode(in,out,false);
  }
{
    newEncoder.reset();
    CharBuffer in=CharBuffer.wrap("A");
    ByteBuffer out=ByteBuffer.allocate(0x10);
    newEncoder.encode(in,out,false);
    in=CharBuffer.wrap("BC");
    newEncoder.encode(in,out,false);
  }
{
    newEncoder.reset();
    CharBuffer in=CharBuffer.wrap("A");
    ByteBuffer out=ByteBuffer.allocate(0x10);
    newEncoder.encode(in,out,true);
    in=CharBuffer.wrap("BC");
    try {
      newEncoder.encode(in,out,false);
      fail("Should throw IllegalStateException");
    }
 catch (    IllegalStateException e) {
    }
  }
{
    newEncoder.reset();
    CharBuffer in=CharBuffer.wrap("A");
    ByteBuffer out=ByteBuffer.allocate(0x10);
    newEncoder.encode(in,out,true);
    newEncoder.flush(out);
    in=CharBuffer.wrap("BC");
    try {
      newEncoder.encode(in,out,false);
      fail("Should throw IllegalStateException");
    }
 catch (    IllegalStateException e) {
    }
  }
}
