{
  if (!DEFSupported) {
    fail(NotSupportedMsg);
    return;
  }
  KeyManagerFactory[] keyMF=createKMFac();
  assertNotNull("KeyManagerFactory object were not created",keyMF);
  KeyStore ksNull=null;
  KeyManager[] km;
  for (int i=0; i < keyMF.length; i++) {
    keyMF[i].init(ksNull,new char[10]);
    km=keyMF[i].getKeyManagers();
    assertNotNull("Result should not be null",km);
    assertTrue("Length of result KeyManager array should not be 0",(km.length > 0));
  }
  KeyStore ks;
  try {
    ks=KeyStore.getInstance(KeyStore.getDefaultType());
    ks.load(null,null);
  }
 catch (  KeyStoreException e) {
    fail(e.toString() + "default KeyStore type is not supported");
    return;
  }
catch (  Exception e) {
    fail("Unexpected: " + e.toString());
    return;
  }
  for (int i=0; i < keyMF.length; i++) {
    try {
      keyMF[i].init(ks,new char[10]);
    }
 catch (    KeyStoreException e) {
    }
    km=keyMF[i].getKeyManagers();
    assertNotNull("Result has not be null",km);
    assertTrue("Length of result KeyManager array should not be 0",(km.length > 0));
  }
}
