{
  if (spec.isAssignableFrom(RSAPublicKeySpec.class) && key instanceof RSAPublicKey) {
    RSAPublicKey k=(RSAPublicKey)key;
    return new RSAPublicKeySpec(k.getModulus(),k.getPublicExponent());
  }
 else   if (spec.isAssignableFrom(RSAPrivateKeySpec.class) && key instanceof java.security.interfaces.RSAPrivateKey) {
    java.security.interfaces.RSAPrivateKey k=(java.security.interfaces.RSAPrivateKey)key;
    return new RSAPrivateKeySpec(k.getModulus(),k.getPrivateExponent());
  }
 else   if (spec.isAssignableFrom(RSAPrivateCrtKeySpec.class) && key instanceof RSAPrivateCrtKey) {
    RSAPrivateCrtKey k=(RSAPrivateCrtKey)key;
    return new RSAPrivateCrtKeySpec(k.getModulus(),k.getPublicExponent(),k.getPrivateExponent(),k.getPrimeP(),k.getPrimeQ(),k.getPrimeExponentP(),k.getPrimeExponentQ(),k.getCrtCoefficient());
  }
  return super.engineGetKeySpec(key,spec);
}
