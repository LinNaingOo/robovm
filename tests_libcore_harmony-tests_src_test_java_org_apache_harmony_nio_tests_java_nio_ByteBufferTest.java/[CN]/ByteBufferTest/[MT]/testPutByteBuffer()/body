{
  ByteBuffer other=ByteBuffer.allocate(buf.capacity());
  if (buf.isReadOnly()) {
    try {
      buf.clear();
      buf.put(other);
      fail("Should throw Exception");
    }
 catch (    ReadOnlyBufferException e) {
    }
    try {
      buf.clear();
      buf.put((ByteBuffer)null);
      fail("Should throw Exception");
    }
 catch (    ReadOnlyBufferException e) {
    }
    return;
  }
  try {
    buf.put(buf);
    fail("Should throw Exception");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    buf.put(ByteBuffer.allocate(buf.capacity() + 1));
    fail("Should throw Exception");
  }
 catch (  BufferOverflowException e) {
  }
  try {
    buf.put((ByteBuffer)null);
    fail("Should throw Exception");
  }
 catch (  NullPointerException e) {
  }
  loadTestData2(other);
  other.clear();
  buf.clear();
  ByteBuffer ret=buf.put(other);
  assertEquals(other.position(),other.capacity());
  assertEquals(buf.position(),buf.capacity());
  assertContentEquals(other,buf);
  assertSame(ret,buf);
}
