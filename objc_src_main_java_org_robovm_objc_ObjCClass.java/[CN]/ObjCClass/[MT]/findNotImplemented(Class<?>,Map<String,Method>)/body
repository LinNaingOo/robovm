{
  Class<?> superclass=type.getSuperclass();
  if (superclass != null) {
    findNotImplemented(superclass,result);
  }
  for (  Method m : type.getDeclaredMethods()) {
    NotImplemented ni=m.getAnnotation(NotImplemented.class);
    if (ni != null) {
      result.put(ni.value(),m);
    }
 else {
      BindSelector bs=m.getAnnotation(BindSelector.class);
      if (bs != null) {
        result.remove(bs.value());
      }
 else {
        String mName=m.getName();
        Class<?>[] mParamTypes=m.getParameterTypes();
        for (Iterator<Entry<String,Method>> it=result.entrySet().iterator(); it.hasNext(); ) {
          Entry<String,Method> entry=it.next();
          Method m2=entry.getValue();
          if (m2.getName().equals(mName) && Arrays.equals(m2.getParameterTypes(),mParamTypes)) {
            it.remove();
          }
        }
      }
    }
  }
}
