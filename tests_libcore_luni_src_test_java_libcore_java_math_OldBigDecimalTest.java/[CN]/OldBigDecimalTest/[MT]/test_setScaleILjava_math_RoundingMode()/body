{
  BigDecimal setScale1=new BigDecimal(2.323E102);
  BigDecimal setScale2=setScale1.setScale(4);
  assertTrue("the number 2.323E102 after setting scale is wrong",setScale2.scale() == 4);
  assertTrue("the representation of the number 2.323E102 is wrong",setScale2.doubleValue() == 2.323E102);
  setScale1=new BigDecimal("-1.253E-12");
  setScale2=setScale1.setScale(17,RoundingMode.CEILING);
  assertTrue("the scale of the number -1.253E-12 after setting scale is wrong",setScale2.scale() == 17);
  assertTrue("the representation of the number -1.253E-12 after setting scale is wrong, " + setScale2.toString(),setScale2.toString().equals("-1.25300E-12"));
  setScale1=new BigDecimal(value,4);
  setScale2=setScale1.setScale(1,RoundingMode.CEILING);
  assertTrue("the number 1234.5908 after setting scale to 1/RoundingMode.CEILING is wrong",setScale2.toString().equals("1234.6") && setScale2.scale() == 1);
  BigDecimal setNeg=new BigDecimal(value.negate(),4);
  setScale2=setNeg.setScale(1,RoundingMode.CEILING);
  assertTrue("the number -1234.5908 after setting scale to 1/RoundingMode.CEILING is wrong",setScale2.toString().equals("-1234.5") && setScale2.scale() == 1);
  setScale2=setNeg.setScale(1,RoundingMode.DOWN);
  assertTrue("the number -1234.5908 after setting scale to 1/RoundingMode.DOWN is wrong",setScale2.toString().equals("-1234.5") && setScale2.scale() == 1);
  setScale1=new BigDecimal(value,4);
  setScale2=setScale1.setScale(1,RoundingMode.DOWN);
  assertTrue("the number 1234.5908 after setting scale to 1/RoundingMode.DOWN is wrong",setScale2.toString().equals("1234.5") && setScale2.scale() == 1);
  setScale2=setScale1.setScale(1,RoundingMode.FLOOR);
  assertTrue("the number 1234.5908 after setting scale to 1/RoundingMode.FLOOR is wrong",setScale2.toString().equals("1234.5") && setScale2.scale() == 1);
  setScale2=setNeg.setScale(1,RoundingMode.FLOOR);
  assertTrue("the number -1234.5908 after setting scale to 1/RoundingMode.FLOOR is wrong",setScale2.toString().equals("-1234.6") && setScale2.scale() == 1);
  setScale2=setScale1.setScale(3,RoundingMode.HALF_DOWN);
  assertTrue("the number 1234.5908 after setting scale to 3/RoundingMode.HALF_DOWN is wrong",setScale2.toString().equals("1234.591") && setScale2.scale() == 3);
  setScale1=new BigDecimal(new BigInteger("12345000"),5);
  setScale2=setScale1.setScale(1,RoundingMode.HALF_DOWN);
  assertTrue("the number 123.45908 after setting scale to 1/RoundingMode.HALF_DOWN is wrong",setScale2.toString().equals("123.4") && setScale2.scale() == 1);
  setScale2=new BigDecimal("-1234.5000").setScale(0,RoundingMode.HALF_DOWN);
  assertTrue("the number -1234.5908 after setting scale to 0/RoundingMode.HALF_DOWN is wrong",setScale2.toString().equals("-1234") && setScale2.scale() == 0);
  setScale1=new BigDecimal(1.2345789D);
  setScale2=setScale1.setScale(4,RoundingMode.HALF_EVEN);
  assertTrue("the number 1.2345789 after setting scale to 4/RoundingMode.HALF_EVEN is wrong",setScale2.doubleValue() == 1.2346D && setScale2.scale() == 4);
  setNeg=new BigDecimal(-1.2335789D);
  setScale2=setNeg.setScale(2,RoundingMode.HALF_EVEN);
  assertTrue("the number -1.2335789 after setting scale to 2/RoundingMode.HALF_EVEN is wrong",setScale2.doubleValue() == -1.23D && setScale2.scale() == 2);
  setScale2=new BigDecimal("1.2345000").setScale(3,RoundingMode.HALF_EVEN);
  assertTrue("the number 1.2345789 after setting scale to 3/RoundingMode.HALF_EVEN is wrong",setScale2.doubleValue() == 1.234D && setScale2.scale() == 3);
  setScale2=new BigDecimal("-1.2345000").setScale(3,RoundingMode.HALF_EVEN);
  assertTrue("the number -1.2335789 after setting scale to 3/RoundingMode.HALF_EVEN is wrong",setScale2.doubleValue() == -1.234D && setScale2.scale() == 3);
  setScale1=new BigDecimal("134567.34650");
  setScale2=setScale1.setScale(3,RoundingMode.HALF_UP);
  assertTrue("the number 134567.34658 after setting scale to 3/RoundingMode.HALF_UP is wrong",setScale2.toString().equals("134567.347") && setScale2.scale() == 3);
  setNeg=new BigDecimal("-1234.4567");
  setScale2=setNeg.setScale(0,RoundingMode.HALF_UP);
  assertTrue("the number -1234.4567 after setting scale to 0/RoundingMode.HALF_UP is wrong",setScale2.toString().equals("-1234") && setScale2.scale() == 0);
  try {
    setScale1.setScale(3,RoundingMode.UNNECESSARY);
    fail("arithmetic Exception not caught for round unnecessary");
  }
 catch (  ArithmeticException e) {
  }
  setScale1=new BigDecimal("100000.374");
  setScale2=setScale1.setScale(2,RoundingMode.UP);
  assertTrue("the number 100000.374 after setting scale to 2/RoundingMode.UP is wrong",setScale2.toString().equals("100000.38") && setScale2.scale() == 2);
  setNeg=new BigDecimal(-134.34589D);
  setScale2=setNeg.setScale(2,RoundingMode.UP);
  assertTrue("the number -134.34589 after setting scale to 2/RoundingMode.UP is wrong",setScale2.doubleValue() == -134.35D && setScale2.scale() == 2);
  try {
    setScale2=setScale1.setScale(0,-123);
    fail("IllegalArgumentException is not caught for wrong rounding mode");
  }
 catch (  IllegalArgumentException e) {
  }
}
