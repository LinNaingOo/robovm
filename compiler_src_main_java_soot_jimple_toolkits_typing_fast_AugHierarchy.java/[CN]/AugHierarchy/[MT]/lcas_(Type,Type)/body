{
  if (TypeResolver.typesEqual(a,b))   return new SingletonList<Type>(a);
 else   if (a instanceof BottomType)   return new SingletonList<Type>(b);
 else   if (b instanceof BottomType)   return new SingletonList<Type>(a);
 else   if (a instanceof IntegerType && b instanceof IntegerType) {
    if (a instanceof Integer1Type)     return new SingletonList<Type>(b);
 else     if (b instanceof Integer1Type)     return new SingletonList<Type>(a);
 else     if (a instanceof BooleanType || b instanceof BooleanType)     return new EmptyList<Type>();
 else     if ((a instanceof ByteType && b instanceof Integer32767Type) || (b instanceof ByteType && a instanceof Integer32767Type))     return new SingletonList<Type>(ShortType.v());
 else     if ((a instanceof CharType && (b instanceof ShortType || b instanceof ByteType)) || (b instanceof CharType && (a instanceof ShortType || a instanceof ByteType)))     return new SingletonList<Type>(IntType.v());
 else     if (ancestor_(a,b))     return new SingletonList<Type>(a);
 else     return new SingletonList<Type>(b);
  }
 else   if (a instanceof IntegerType || b instanceof IntegerType)   return new EmptyList<Type>();
 else   return BytecodeHierarchy.lcas_(a,b);
}
