{
  if (TypeResolver.typesEqual(ancestor,child))   return true;
 else   if (ancestor instanceof Integer1Type) {
    if (child instanceof BottomType)     return true;
 else     return false;
  }
 else   if (ancestor instanceof BooleanType) {
    if (child instanceof BottomType || child instanceof Integer1Type)     return true;
 else     return false;
  }
 else   if (ancestor instanceof Integer127Type) {
    if (child instanceof BottomType || child instanceof Integer1Type)     return true;
 else     return false;
  }
 else   if (ancestor instanceof ByteType || ancestor instanceof Integer32767Type) {
    if (child instanceof BottomType || child instanceof Integer1Type || child instanceof Integer127Type)     return true;
 else     return false;
  }
 else   if (ancestor instanceof CharType) {
    if (child instanceof BottomType || child instanceof Integer1Type || child instanceof Integer127Type|| child instanceof Integer32767Type)     return true;
 else     return false;
  }
 else   if (ancestor instanceof ShortType) {
    if (child instanceof BottomType || child instanceof Integer1Type || child instanceof Integer127Type|| child instanceof Integer32767Type|| child instanceof ByteType)     return true;
 else     return false;
  }
 else   if (ancestor instanceof IntType) {
    if (child instanceof BottomType || child instanceof Integer1Type || child instanceof Integer127Type|| child instanceof Integer32767Type|| child instanceof ByteType|| child instanceof CharType|| child instanceof ShortType)     return true;
 else     return false;
  }
 else   if (child instanceof IntegerType)   return false;
 else   return BytecodeHierarchy.ancestor_(ancestor,child);
}
