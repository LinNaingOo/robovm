{
  path=new Vector();
  while (st.hasMoreElements()) {
    Object e=st.nextElement();
    String elem;
    File efile;
    if (e instanceof URL) {
      path.addElement(new URLPathEntry((URL)e));
      continue;
    }
    if (e instanceof File) {
      efile=(File)e;
      elem=efile.getPath();
    }
 else     if (e instanceof String) {
      elem=(String)e;
      efile=new File(elem);
    }
 else     throw new IllegalArgumentException();
    if (!efile.isAbsolute())     efile=new File(efile.getAbsolutePath());
    if (efile.isDirectory()) {
      try {
        path.addElement(new DirectoryPathEntry(efile));
      }
 catch (      IOException x) {
      }
    }
 else     if (efile.isFile()) {
      int ext=elem.lastIndexOf('.');
      if (ext == -1)       continue;
      String ext_name=elem.substring(ext + 1);
      if (!(ext_name.equalsIgnoreCase("zip") || ext_name.equalsIgnoreCase("jar")))       continue;
      ZipPathEntry zpe=null;
      try {
        zpe=new ZipPathEntry(efile);
      }
 catch (      ZipException zx) {
        System.err.println("SearchPath::ZipException");
        zpe=null;
      }
catch (      MalformedURLException mx) {
        System.err.println("SearchPath::URLException");
        zpe=null;
      }
catch (      IOException iox) {
        System.err.println("SearchPath::IOException");
        zpe=null;
      }
      if (zpe != null)       path.addElement(zpe);
    }
  }
}
