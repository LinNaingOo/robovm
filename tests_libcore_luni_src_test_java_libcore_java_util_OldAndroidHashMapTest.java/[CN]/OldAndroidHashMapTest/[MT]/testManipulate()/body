{
  HashMap<String,Integer> map=new HashMap<String,Integer>();
  assertTrue(map.isEmpty());
  assertEquals(0,map.size());
  assertNull(map.get(null));
  assertNull(map.get("one"));
  assertFalse(map.containsKey("one"));
  assertFalse(map.containsValue(new Integer(1)));
  assertNull(map.remove(null));
  assertNull(map.remove("one"));
  assertNull(map.put(null,-1));
  assertNull(map.put("one",1));
  assertNull(map.put("two",2));
  assertNull(map.put("three",3));
  assertEquals(-1,map.put(null,0).intValue());
  assertEquals(0,map.get(null).intValue());
  assertEquals(1,map.get("one").intValue());
  assertEquals(2,map.get("two").intValue());
  assertEquals(3,map.get("three").intValue());
  assertTrue(map.containsKey(null));
  assertTrue(map.containsKey("one"));
  assertTrue(map.containsKey("two"));
  assertTrue(map.containsKey("three"));
  assertTrue(map.containsValue(new Integer(0)));
  assertTrue(map.containsValue(new Integer(1)));
  assertTrue(map.containsValue(new Integer(2)));
  assertTrue(map.containsValue(new Integer(3)));
  assertEquals(0,map.remove(null).intValue());
  assertEquals(1,map.remove("one").intValue());
  assertEquals(2,map.remove("two").intValue());
  assertEquals(3,map.remove("three").intValue());
  assertTrue(map.isEmpty());
  assertEquals(0,map.size());
  assertNull(map.get(null));
  assertNull(map.get("one"));
  assertFalse(map.containsKey("one"));
  assertFalse(map.containsValue(new Integer(1)));
  assertNull(map.remove(null));
  assertNull(map.remove("one"));
}
