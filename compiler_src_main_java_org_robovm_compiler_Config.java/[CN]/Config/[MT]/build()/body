{
  if (home == null) {
    home=Home.find();
  }
  if (llvmHomeDir == null) {
    String path=System.getenv("PATH");
    boolean found=false;
    if (path != null) {
      for (      String part : path.split(File.pathSeparator)) {
        if (new File(part,"llc").exists()) {
          found=true;
          break;
        }
      }
    }
    if (!found) {
      if (new File("/opt/llvm/bin/llc").exists()) {
        llvmHomeDir=new File("/opt/llvm");
      }
 else       if (new File(home.getBinDir().getParent(),"llvm/bin/llc").exists()) {
        llvmHomeDir=new File(home.getBinDir().getParent(),"llvm");
      }
    }
  }
  if (mainJar != null) {
    mainClass=getMainClass(mainJar);
    classpath.add(mainJar);
  }
  if (!skipLinking && executable == null && mainClass == null) {
    throw new IllegalArgumentException("No target and no main class specified");
  }
  if (!skipLinking && classpath.isEmpty()) {
    throw new IllegalArgumentException("No classpath specified");
  }
  if (os == null) {
    os=OS.getDefaultOS(llvmHomeDir);
  }
  if (arch == null) {
    arch=Arch.getDefaultArch(llvmHomeDir);
  }
  if (skipLinking) {
    skipInstall=true;
  }
  osArchDepLibDir=new File(new File(new File(home.libVmDir,os.toString()),arch.toString()),debug ? "Debug" : "Release");
  File osDir=new File(cacheDir,os.toString());
  File archDir=new File(osDir,arch.toString());
  cacheDir=new File(archDir,cpu == null ? "default" : cpu);
  cacheDir.mkdirs();
  if (executable == null) {
    executable=mainClass;
  }
  if (!skipRuntimeLib) {
    bootclasspath.add(0,home.rtPath);
  }
  this.clazzes=new Clazzes(this,bootclasspath,classpath);
  if (!skipInstall) {
    if (installDir == null) {
      installDir=new File(".",executable);
    }
    installDir.mkdirs();
  }
  target=targetBuilder.build(this);
  return this;
}
