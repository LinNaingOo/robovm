{
  NetworkInterface[] interfaces=getNetworkInterfacesImpl();
  if (interfaces == null) {
    return null;
  }
  boolean peeked[]=new boolean[interfaces.length];
  for (  boolean p : peeked) {
    p=false;
  }
  for (  NetworkInterface netif : interfaces) {
    for (    InetAddress addr : netif.addresses) {
      if (16 == addr.ipaddress.length) {
        if (addr.isLinkLocalAddress() || addr.isSiteLocalAddress()) {
          ((Inet6Address)addr).scopedIf=netif;
          ((Inet6Address)addr).ifname=netif.name;
          ((Inet6Address)addr).scope_ifname_set=true;
        }
      }
    }
  }
  List<NetworkInterface> hlist=new ArrayList<NetworkInterface>();
  for (int counter=0; counter < interfaces.length; counter++) {
    if (peeked[counter]) {
      continue;
    }
    int counter2=counter;
    for (; counter2 < interfaces.length; counter2++) {
      if (peeked[counter2]) {
        continue;
      }
      StringBuilder headBuilder=new StringBuilder();
      headBuilder.append(interfaces[counter].name);
      headBuilder.append(":");
      if (interfaces[counter2].name.startsWith(headBuilder.toString())) {
        peeked[counter2]=true;
        interfaces[counter].children.add(interfaces[counter2]);
        interfaces[counter2].parent=interfaces[counter];
        for (int i=0; i < interfaces[counter2].addresses.size(); i++) {
          interfaces[counter].addresses.add(interfaces[counter2].addresses.get(i));
        }
      }
    }
    hlist.add(interfaces[counter]);
    peeked[counter]=true;
  }
  return (new Vector<NetworkInterface>(hlist)).elements();
}
