{
  if (verbose) {
    stdout.format("Building executable '%s'\n",output);
  }
  List<String> args=new ArrayList<String>();
  for (  File f : includeDirs) {
    args.add("-I");
    args.add(f.getAbsolutePath());
  }
  for (  File f : libDirs) {
    args.add("-L");
    args.add(f.getAbsolutePath());
  }
  args.add("-I");
  args.add(new File(System.getProperty("user.home"),".nullvm/include").getAbsolutePath());
  args.add("-L");
  args.add(new File(System.getProperty("user.home"),".nullvm/lib").getAbsolutePath());
  List<String> libArgs=new ArrayList<String>();
  if (!skipRtLib) {
    libArgs.add("-lnullvm-rt");
  }
  for (  String lib : libs) {
    args.add("-l" + lib);
  }
  String gccPath="gcc";
  if (gccBin != null) {
    gccPath=gccBin.getAbsolutePath();
  }
  exec(gccPath,"-o",output,"-g","-Wl,--version-script",new File(work,"symbols.map"),gccOpts,"-rdynamic",args,files,"-lnullvm","-lm","-ldl","-lpthread","-Wl,--whole-archive",libArgs,"-Wl,--no-whole-archive","-Wl,-Bstatic","-lgc","-Wl,-Bdynamic");
}
