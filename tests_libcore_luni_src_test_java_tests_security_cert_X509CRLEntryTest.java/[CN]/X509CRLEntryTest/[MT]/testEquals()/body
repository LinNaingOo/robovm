{
  TBTCRLEntry tbt_crlentry_1=new TBTCRLEntry(){
    public byte[] getEncoded(){
      return new byte[]{1,2,3};
    }
  }
;
  TBTCRLEntry tbt_crlentry_2=new TBTCRLEntry(){
    public byte[] getEncoded(){
      return new byte[]{1,2,3};
    }
  }
;
  TBTCRLEntry tbt_crlentry_3=new TBTCRLEntry(){
    public byte[] getEncoded(){
      return new byte[]{3,2,1};
    }
  }
;
  assertTrue("The equivalence relation should be reflexive.",tbt_crlentry.equals(tbt_crlentry));
  assertEquals("The CRL Entries with equals encoded form should be equal",tbt_crlentry,tbt_crlentry_1);
  assertTrue("The equivalence relation should be symmetric.",tbt_crlentry_1.equals(tbt_crlentry));
  assertEquals("The CRL Entries with equals encoded form should be equal",tbt_crlentry_1,tbt_crlentry_2);
  assertTrue("The equivalence relation should be transitive.",tbt_crlentry.equals(tbt_crlentry_2));
  assertFalse("Should not be equal to null object.",tbt_crlentry.equals(null));
  assertFalse("The CRL Entries with differing encoded form " + "should not be equal.",tbt_crlentry.equals(tbt_crlentry_3));
  assertFalse("The CRL Entries should not be equals to the object " + "which is not an instance of X509CRLEntry.",tbt_crlentry.equals(new Object()));
}
