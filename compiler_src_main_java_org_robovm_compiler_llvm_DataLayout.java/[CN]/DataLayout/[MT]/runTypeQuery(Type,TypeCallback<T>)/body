{
  Context context=null;
  Module module=null;
  TargetMachine targetMachine=null;
  try {
    String definition;
    if (type instanceof PrimitiveType) {
      definition="{" + ((PrimitiveType)type).getName() + "}";
    }
 else     if (type instanceof StructureType) {
      definition=((StructureType)type).getDefinition();
    }
 else {
      definition="{" + ((UserType)type).getDefinition() + "}";
    }
    context=new Context();
    module=Module.parseIR(context,"%t = type " + definition,null);
    targetMachine=target.createTargetMachine(triple);
    return cb.doWithType(targetMachine,module.getTypeByName("t"));
  }
  finally {
    if (targetMachine != null) {
      targetMachine.dispose();
    }
    if (module != null) {
      module.dispose();
    }
    if (context != null) {
      context.dispose();
    }
  }
}
