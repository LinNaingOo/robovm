{
  WeightedDirectedSparseGraph prevgraph=(WeightedDirectedSparseGraph)prevOut, outgraph=(WeightedDirectedSparseGraph)out;
  WeightedDirectedSparseGraph[] ingraphs=new WeightedDirectedSparseGraph[ins.length];
  for (int i=0; i < ins.length; i++)   ingraphs[i]=(WeightedDirectedSparseGraph)ins[i];
{
    outgraph.addBoundedAll(ingraphs[0]);
    for (int i=1; i < ingraphs.length; i++) {
      outgraph.unionSelf(ingraphs[i]);
      outgraph.makeShortestPathGraph();
    }
    outgraph.widenEdges(prevgraph);
  }
}
