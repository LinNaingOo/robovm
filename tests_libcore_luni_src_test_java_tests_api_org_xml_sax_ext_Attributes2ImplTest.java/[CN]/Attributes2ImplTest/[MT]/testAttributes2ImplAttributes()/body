{
  Attributes2Impl attrs=new Attributes2Impl(multi);
  assertEquals(multi.getLength(),attrs.getLength());
  for (int i=0; i < multi.getLength(); i++) {
    assertEquals(multi.getURI(i),attrs.getURI(i));
    assertEquals(multi.getLocalName(i),attrs.getLocalName(i));
    assertEquals(multi.getQName(i),attrs.getQName(i));
    assertEquals(multi.getType(i),attrs.getType(i));
    assertEquals(multi.getValue(i),attrs.getValue(i));
    assertEquals(multi.isDeclared(i),attrs.isDeclared(i));
    assertEquals(multi.isSpecified(i),attrs.isSpecified(i));
  }
  attrs=new Attributes2Impl(empty);
  assertEquals(0,attrs.getLength());
  attrs=new Attributes2Impl(new AttributesImpl(multi));
  assertEquals(multi.getLength(),attrs.getLength());
  for (int i=0; i < multi.getLength(); i++) {
    assertEquals(multi.getURI(i),attrs.getURI(i));
    assertEquals(multi.getLocalName(i),attrs.getLocalName(i));
    assertEquals(multi.getQName(i),attrs.getQName(i));
    assertEquals(multi.getType(i),attrs.getType(i));
    assertEquals(multi.getValue(i),attrs.getValue(i));
    assertEquals(true,attrs.isDeclared(i));
    assertEquals(true,attrs.isSpecified(i));
  }
  attrs=new Attributes2Impl(new AttributesImpl(cdata));
  assertEquals(1,attrs.getLength());
  assertEquals(false,attrs.isDeclared(0));
  assertEquals(true,attrs.isSpecified(0));
  try {
    attrs=new Attributes2Impl(null);
    fail("NullPointerException expected");
  }
 catch (  NullPointerException e) {
  }
}
