{
  EnumMap enumSizeMap=new EnumMap(Size.class);
  assertNull("Remove of non-mapped key returned non-null",enumSizeMap.remove(Size.Big));
  enumSizeMap.put(Size.Big,3);
  enumSizeMap.put(Size.Middle,2);
  assertNull("Get returned non-null for non mapped key",enumSizeMap.get(Size.Small));
  assertEquals("Remove returned incorrect value",3,enumSizeMap.remove(Size.Big));
  assertNull("Get returned non-null for non mapped key",enumSizeMap.get(Size.Big));
  assertNull("Remove of non-mapped key returned non-null",enumSizeMap.remove(Size.Big));
  assertNull("Remove of non-existent key returned non-null",enumSizeMap.remove(Color.Red));
  assertNull("Remove of non-existent key returned non-null",enumSizeMap.remove(new Double(4)));
  assertNull("Remove of non-existent key returned non-null",enumSizeMap.remove(null));
  EnumMap enumColorMap=new EnumMap<Color,Double>(Color.class);
  assertNull("Get returned non-null for non mapped key",enumColorMap.get(Color.Green));
  enumColorMap.put(Color.Green,new Double(4));
  assertEquals("Remove returned incorrect value",new Double(4),enumColorMap.remove(Color.Green));
  assertNull("Get returned non-null for non mapped key",enumColorMap.get(Color.Green));
  enumColorMap.put(Color.Green,null);
  assertNull("Can not handle null value",enumColorMap.remove(Color.Green));
  assertNull("Get returned non-null for non mapped key",enumColorMap.get(Color.Green));
}
