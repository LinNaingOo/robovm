{
  EnumMap enumMap=new EnumMap(Size.class);
  enumMap.put(Size.Small,1);
  EnumMap enumSizeMap=new EnumMap(Size.class);
  assertFalse("Returned true for unequal EnumMap",enumSizeMap.equals(enumMap));
  enumSizeMap.put(Size.Small,1);
  assertTrue("Returned false for equal EnumMap",enumSizeMap.equals(enumMap));
  enumSizeMap.put(Size.Big,null);
  assertFalse("Returned true for unequal EnumMap",enumSizeMap.equals(enumMap));
  enumMap.put(Size.Middle,null);
  assertFalse("Returned true for unequal EnumMap",enumSizeMap.equals(enumMap));
  enumMap.remove(Size.Middle);
  enumMap.put(Size.Big,3);
  assertFalse("Returned true for unequal EnumMap",enumSizeMap.equals(enumMap));
  enumMap.put(Size.Big,null);
  assertTrue("Returned false for equal EnumMap",enumSizeMap.equals(enumMap));
  HashMap hashMap=new HashMap();
  hashMap.put(Size.Small,1);
  assertFalse("Returned true for unequal EnumMap",hashMap.equals(enumMap));
  hashMap.put(Size.Big,null);
  assertTrue("Returned false for equal EnumMap",enumMap.equals(hashMap));
  assertFalse("Should return false",enumSizeMap.equals(new Integer(1)));
}
