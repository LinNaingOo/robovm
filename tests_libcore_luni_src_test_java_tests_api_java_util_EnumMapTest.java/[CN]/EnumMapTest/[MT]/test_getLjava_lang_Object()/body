{
  EnumMap enumSizeMap=new EnumMap(Size.class);
  assertNull("Get returned non-null for non mapped key",enumSizeMap.get(Size.Big));
  enumSizeMap.put(Size.Big,1);
  assertEquals("Get returned incorrect value for given key",1,enumSizeMap.get(Size.Big));
  assertNull("Get returned non-null for non mapped key",enumSizeMap.get(Size.Small));
  assertNull("Get returned non-null for non existent key",enumSizeMap.get(Color.Red));
  assertNull("Get returned non-null for non existent key",enumSizeMap.get(new Integer(1)));
  assertNull("Get returned non-null for non existent key",enumSizeMap.get(null));
  EnumMap enumColorMap=new EnumMap<Color,Double>(Color.class);
  assertNull("Get returned non-null for non mapped key",enumColorMap.get(Color.Green));
  enumColorMap.put(Color.Green,2);
  assertEquals("Get returned incorrect value for given key",2,enumColorMap.get(Color.Green));
  assertNull("Get returned non-null for non mapped key",enumColorMap.get(Color.Blue));
  enumColorMap.put(Color.Green,new Double(4));
  assertEquals("Get returned incorrect value for given key",new Double(4),enumColorMap.get(Color.Green));
  enumColorMap.put(Color.Green,new Integer("3"));
  assertEquals("Get returned incorrect value for given key",new Integer("3"),enumColorMap.get(Color.Green));
  enumColorMap.put(Color.Green,null);
  assertNull("Can not handle null value",enumColorMap.get(Color.Green));
  Float f=new Float("3.4");
  enumColorMap.put(Color.Green,f);
  assertSame("Get returned incorrect value for given key",f,enumColorMap.get(Color.Green));
}
