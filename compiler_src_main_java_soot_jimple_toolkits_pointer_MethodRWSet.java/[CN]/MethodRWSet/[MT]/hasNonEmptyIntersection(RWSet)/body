{
  if (isFull)   return oth != null;
  if (!(oth instanceof MethodRWSet)) {
    return oth.hasNonEmptyIntersection(this);
  }
  MethodRWSet other=(MethodRWSet)oth;
  if (globals != null && other.globals != null && !globals.isEmpty() && !other.globals.isEmpty()) {
    for (Iterator it=other.globals.iterator(); it.hasNext(); ) {
      if (globals.contains(it.next()))       return true;
    }
  }
  if (fields != null && other.fields != null && !fields.isEmpty() && !other.fields.isEmpty()) {
    for (    Object element : other.fields.keySet()) {
      final Object field=element;
      if (fields.containsKey(field)) {
        if (Union.hasNonEmptyIntersection(getBaseForField(field),other.getBaseForField(field))) {
          return true;
        }
      }
    }
  }
  return false;
}
