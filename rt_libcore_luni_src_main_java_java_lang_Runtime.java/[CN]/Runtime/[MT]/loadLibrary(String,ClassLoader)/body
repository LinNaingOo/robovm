{
  if (libraryName == null) {
    throw new NullPointerException("libraryName");
  }
  for (  String l : VM.staticLibs()) {
    if (libraryName.equals(l)) {
      return;
    }
  }
  if (loader != null) {
    String filename=loader.findLibrary(libraryName);
    if (filename == null) {
      throw new UnsatisfiedLinkError("Couldn't load " + libraryName + " from loader "+ loader+ ": findLibrary returned null");
    }
    nativeLoad(filename,loader);
    return;
  }
  String filename=System.mapLibraryName(libraryName);
  List<String> candidates=new ArrayList<String>();
  String lastError=null;
  for (  String directory : mLibPaths) {
    String candidate=directory + filename;
    candidates.add(candidate);
    if (IoUtils.canOpenReadOnly(candidate)) {
      try {
        nativeLoad(candidate,loader);
        return;
      }
 catch (      UnsatisfiedLinkError e) {
        lastError=e.getMessage();
      }
    }
  }
  if (lastError != null) {
    throw new UnsatisfiedLinkError(lastError);
  }
  throw new UnsatisfiedLinkError("Library " + libraryName + " not found; tried "+ candidates);
}
