{
  Pattern p;
  Matcher m;
  try {
    p=Pattern.compile("foo");
    m=p.matcher("foobar");
    assertTrue(m.find());
    assertEquals(0,m.start());
    assertEquals(3,m.end());
    assertFalse(m.find());
    m.reset();
    assertTrue(m.find());
    assertEquals(0,m.start());
    assertEquals(3,m.end());
    assertFalse(m.find());
    m.reset("barfoobar");
    assertTrue(m.find());
    assertEquals(3,m.start());
    assertEquals(6,m.end());
    assertFalse(m.find());
    m.reset("barfoo");
    assertTrue(m.find());
    assertEquals(3,m.start());
    assertEquals(6,m.end());
    assertFalse(m.find());
    m.reset("foobarfoobarfoo");
    assertTrue(m.find());
    assertEquals(0,m.start());
    assertEquals(3,m.end());
    assertTrue(m.find());
    assertEquals(6,m.start());
    assertEquals(9,m.end());
    assertTrue(m.find());
    assertEquals(12,m.start());
    assertEquals(15,m.end());
    assertFalse(m.find());
    assertTrue(m.find(0));
    assertEquals(0,m.start());
    assertEquals(3,m.end());
    assertTrue(m.find(4));
    assertEquals(6,m.start());
    assertEquals(9,m.end());
  }
 catch (  PatternSyntaxException e) {
    System.out.println(e.getMessage());
    fail();
  }
}
