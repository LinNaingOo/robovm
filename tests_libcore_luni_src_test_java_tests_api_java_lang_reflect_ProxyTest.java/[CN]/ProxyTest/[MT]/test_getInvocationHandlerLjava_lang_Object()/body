{
  InvocationHandler handler=new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      return null;
    }
  }
;
  Object p=Proxy.newProxyInstance(Support_Proxy_I1.class.getClassLoader(),new Class[]{Support_Proxy_I1.class},handler);
  assertTrue("Did not return invocation handler ",Proxy.getInvocationHandler(p) == handler);
  boolean aborted=false;
  try {
    Proxy.getInvocationHandler("");
  }
 catch (  IllegalArgumentException e) {
    aborted=true;
  }
  assertTrue("Did not detect non proxy object ",aborted);
}
