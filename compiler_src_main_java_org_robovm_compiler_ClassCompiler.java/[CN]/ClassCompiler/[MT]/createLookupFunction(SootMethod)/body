{
  Function function=FunctionBuilder.lookup(m);
  mb.addFunction(function);
  Variable reserved0=function.newVariable(I8_PTR_PTR);
  function.add(new Getelementptr(reserved0,function.getParameterRef(0),0,4));
  Variable reserved1=function.newVariable(I8_PTR_PTR);
  function.add(new Getelementptr(reserved1,function.getParameterRef(0),0,5));
  function.add(new Store(getString(m.getName()),reserved0.ref()));
  function.add(new Store(getString(getDescriptor(m)),reserved1.ref()));
  if (!sootClass.isInterface()) {
    VTable vtable=config.getVTableCache().get(sootClass);
    VTable.Entry entry=vtable.getEntry(m);
    Value classPtr=call(function,OBJECT_CLASS,function.getParameterRef(1));
    Value vtablePtr=call(function,CLASS_VTABLE,classPtr);
    Variable funcPtrPtr=function.newVariable(I8_PTR_PTR);
    function.add(new Getelementptr(funcPtrPtr,vtablePtr,0,1,entry.getIndex()));
    Variable funcPtr=function.newVariable(I8_PTR);
    function.add(new Load(funcPtr,funcPtrPtr.ref()));
    Variable f=function.newVariable(function.getType());
    function.add(new Bitcast(f,funcPtr.ref(),f.getType()));
    Value result=call(function,f.ref(),function.getParameterRefs());
    function.add(new Ret(result));
  }
 else {
    Value lookupFn=sootClass.isInterface() ? BC_LOOKUP_INTERFACE_METHOD : BC_LOOKUP_VIRTUAL_METHOD;
    List<Value> args=new ArrayList<Value>();
    args.add(function.getParameterRef(0));
    if (sootClass.isInterface()) {
      Value info=getInfoStruct(function,sootClass);
      args.add(info);
    }
    args.add(function.getParameterRef(1));
    args.add(getString(m.getName()));
    args.add(getString(getDescriptor(m)));
    Value fptr=call(function,lookupFn,args);
    Variable f=function.newVariable(function.getType());
    function.add(new Bitcast(f,fptr,f.getType()));
    Value result=call(function,f.ref(),function.getParameterRefs());
    function.add(new Ret(result));
  }
}
