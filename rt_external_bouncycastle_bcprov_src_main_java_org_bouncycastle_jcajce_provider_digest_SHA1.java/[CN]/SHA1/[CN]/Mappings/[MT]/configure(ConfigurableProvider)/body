{
  provider.addAlgorithm("MessageDigest.SHA-1",PREFIX + "$Digest");
  provider.addAlgorithm("Alg.Alias.MessageDigest.SHA1","SHA-1");
  provider.addAlgorithm("Alg.Alias.MessageDigest.SHA","SHA-1");
  provider.addAlgorithm("Alg.Alias.MessageDigest." + OIWObjectIdentifiers.idSHA1,"SHA-1");
  addHMACAlgorithm(provider,"SHA1",PREFIX + "$HashMac",PREFIX + "$KeyGenerator");
  addHMACAlias(provider,"SHA1",PKCSObjectIdentifiers.id_hmacWithSHA1);
  addHMACAlias(provider,"SHA1",IANAObjectIdentifiers.hmacSHA1);
  provider.addAlgorithm("Mac.PBEWITHHMACSHA",PREFIX + "$SHA1Mac");
  provider.addAlgorithm("Mac.PBEWITHHMACSHA1",PREFIX + "$SHA1Mac");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHHMACSHA","PBEWITHHMACSHA1");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + OIWObjectIdentifiers.idSHA1,"PBEWITHHMACSHA1");
  provider.addAlgorithm("Alg.Alias.Mac." + OIWObjectIdentifiers.idSHA1,"PBEWITHHMACSHA");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHHMACSHA1",PREFIX + "$PBEWithMacKeyFactory");
  provider.addAlgorithm("SecretKeyFactory.PBKDF2WithHmacSHA1",PREFIX + "$PBKDF2WithHmacSHA1UTF8");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + PKCSObjectIdentifiers.id_PBKDF2,"PBKDF2WithHmacSHA1");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBKDF2WithHmacSHA1AndUTF8","PBKDF2WithHmacSHA1");
  provider.addAlgorithm("SecretKeyFactory.PBKDF2WithHmacSHA1And8BIT",PREFIX + "$PBKDF2WithHmacSHA18BIT");
}
