{
  if ((length != 3) && (length != 4) && (length != 8)&& (length != 9)) {
    throw new NumberFormatException();
  }
  boolean negative=false;
  int cmpstart=0;
switch (namedDouble.charAt(0)) {
case '-':
    negative=true;
case '+':
  cmpstart=1;
default :
}
if (namedDouble.regionMatches(false,cmpstart,"Infinity",0,8)) {
return negative ? Double.NEGATIVE_INFINITY : Float.POSITIVE_INFINITY;
}
if (namedDouble.regionMatches(false,cmpstart,"NaN",0,3)) {
return Double.NaN;
}
throw new NumberFormatException();
}
