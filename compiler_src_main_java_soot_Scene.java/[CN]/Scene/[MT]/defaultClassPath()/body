{
  StringBuffer sb=new StringBuffer();
  sb.append(System.getProperty("java.class.path") + File.pathSeparator);
  if (System.getProperty("os.name").equals("Mac OS X")) {
    sb.append(File.pathSeparator);
    sb.append(System.getProperty("java.home"));
    sb.append(File.separator);
    sb.append("..");
    sb.append(File.separator);
    sb.append("Classes");
    sb.append(File.separator);
    sb.append("classes.jar");
    sb.append(File.pathSeparator);
    sb.append(System.getProperty("java.home"));
    sb.append(File.separator);
    sb.append("..");
    sb.append(File.separator);
    sb.append("Classes");
    sb.append(File.separator);
    sb.append("ui.jar");
  }
 else {
    sb.append(File.pathSeparator);
    sb.append(System.getProperty("java.home"));
    sb.append(File.separator);
    sb.append("lib");
    sb.append(File.separator);
    sb.append("rt.jar");
  }
  if (Options.v().whole_program() || Options.v().output_format() == Options.output_format_dava) {
    sb.append(File.pathSeparator + System.getProperty("java.home") + File.separator+ "lib"+ File.separator+ "jce.jar");
  }
  return sb.toString();
}
