{
  for (int counter=0; counter < arraySize; counter++)   assertTrue("Binary search on double[] answered incorrect position",Arrays.binarySearch(doubleArray,(double)counter) == (double)counter);
  assertEquals("Binary search succeeded for value not present in array 1",-1,Arrays.binarySearch(doubleArray,(double)-1));
  assertTrue("Binary search succeeded for value not present in array 2",Arrays.binarySearch(doubleArray,(double)arraySize) == -(arraySize + 1));
  for (int counter=0; counter < arraySize; counter++)   doubleArray[counter]-=(double)50;
  for (int counter=0; counter < arraySize; counter++)   assertTrue("Binary search on double[] involving negative numbers answered incorrect position",Arrays.binarySearch(doubleArray,(double)(counter - 50)) == (double)counter);
  double[] specials=new double[]{Double.NEGATIVE_INFINITY,-Double.MAX_VALUE,-2d,-Double.MIN_VALUE,-0d,0d,Double.MIN_VALUE,2d,Double.MAX_VALUE,Double.POSITIVE_INFINITY,Double.NaN};
  for (int i=0; i < specials.length; i++) {
    int result=Arrays.binarySearch(specials,specials[i]);
    assertTrue(specials[i] + " invalid: " + result,result == i);
  }
  assertEquals("-1d",-4,Arrays.binarySearch(specials,-1d));
  assertEquals("1d",-8,Arrays.binarySearch(specials,1d));
}
