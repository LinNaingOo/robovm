{
  double[] reversedArray=new double[arraySize];
  for (int counter=0; counter < arraySize; counter++)   reversedArray[counter]=(double)(arraySize - counter - 1);
  Arrays.sort(reversedArray);
  for (int counter=0; counter < arraySize; counter++)   assertTrue("Resulting array not sorted",reversedArray[counter] == (double)counter);
  double[] specials1=new double[]{Double.NaN,Double.MAX_VALUE,Double.MIN_VALUE,0d,-0d,Double.POSITIVE_INFINITY,Double.NEGATIVE_INFINITY};
  double[] specials2=new double[]{0d,Double.POSITIVE_INFINITY,-0d,Double.NEGATIVE_INFINITY,Double.MIN_VALUE,Double.NaN,Double.MAX_VALUE};
  double[] answer=new double[]{Double.NEGATIVE_INFINITY,-0d,0d,Double.MIN_VALUE,Double.MAX_VALUE,Double.POSITIVE_INFINITY,Double.NaN};
  Arrays.sort(specials1);
  Object[] print1=new Object[specials1.length];
  for (int i=0; i < specials1.length; i++)   print1[i]=new Double(specials1[i]);
  assertTrue("specials sort incorrectly 1: " + Arrays.asList(print1),Arrays.equals(specials1,answer));
  Arrays.sort(specials2);
  Object[] print2=new Object[specials2.length];
  for (int i=0; i < specials2.length; i++)   print2[i]=new Double(specials2[i]);
  assertTrue("specials sort incorrectly 2: " + Arrays.asList(print2),Arrays.equals(specials2,answer));
}
