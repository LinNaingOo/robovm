{
  for (int counter=0; counter < arraySize; counter++)   assertTrue("Binary search on float[] answered incorrect position",Arrays.binarySearch(floatArray,(float)counter) == (float)counter);
  assertEquals("Binary search succeeded for value not present in array 1",-1,Arrays.binarySearch(floatArray,(float)-1));
  assertTrue("Binary search succeeded for value not present in array 2",Arrays.binarySearch(floatArray,(float)arraySize) == -(arraySize + 1));
  for (int counter=0; counter < arraySize; counter++)   floatArray[counter]-=(float)50;
  for (int counter=0; counter < arraySize; counter++)   assertTrue("Binary search on float[] involving negative numbers answered incorrect position",Arrays.binarySearch(floatArray,(float)counter - 50) == (float)counter);
  float[] specials=new float[]{Float.NEGATIVE_INFINITY,-Float.MAX_VALUE,-2f,-Float.MIN_VALUE,-0f,0f,Float.MIN_VALUE,2f,Float.MAX_VALUE,Float.POSITIVE_INFINITY,Float.NaN};
  for (int i=0; i < specials.length; i++) {
    int result=Arrays.binarySearch(specials,specials[i]);
    assertTrue(specials[i] + " invalid: " + result,result == i);
  }
  assertEquals("-1f",-4,Arrays.binarySearch(specials,-1f));
  assertEquals("1f",-8,Arrays.binarySearch(specials,1f));
}
