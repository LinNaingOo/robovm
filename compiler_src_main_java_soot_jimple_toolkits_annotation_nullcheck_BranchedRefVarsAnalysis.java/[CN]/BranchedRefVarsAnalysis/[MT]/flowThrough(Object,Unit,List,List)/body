{
  FlowSet in=(FlowSet)inValue;
  FlowSet out=tempFlowSet;
  FlowSet pre=unitToPreserveSet.get(stmt);
  FlowSet gen=unitToGenerateSet.get(stmt);
  in.intersection(pre,out);
  out.union(gen,out);
  if (stmt instanceof AssignStmt) {
    AssignStmt as=(AssignStmt)stmt;
    Value rightOp=as.getRightOp();
    Value leftOp=as.getLeftOp();
    if (rightOp instanceof CastExpr)     rightOp=((CastExpr)rightOp).getOp();
    if (isAnalyzedRef(leftOp) && isAnalyzedRef(rightOp)) {
      int roInfo=refInfo(rightOp,in);
      if (roInfo == kTop)       uAddTopToFlowSet(leftOp,out);
 else       if (roInfo != kBottom)       uAddInfoToFlowSet(leftOp,roInfo,out);
    }
  }
{
    Iterator it=outBranchValues.iterator();
    while (it.hasNext()) {
      FlowSet fs=(FlowSet)(it.next());
      copy(out,fs);
    }
  }
{
    Iterator it=outFallValue.iterator();
    while (it.hasNext()) {
      FlowSet fs=(FlowSet)(it.next());
      copy(out,fs);
    }
  }
  if (isBranched && (stmt instanceof IfStmt)) {
    Value cond=((IfStmt)stmt).getCondition();
    Value op1=((BinopExpr)cond).getOp1();
    Value op2=((BinopExpr)cond).getOp2();
    if ((!(isAlwaysTop(op1) || isAlwaysTop(op2))) && (isAnalyzedRef(op1) || isAnalyzedRef(op2))) {
      Value toGen=null;
      int toGenInfo=kBottom;
      int op1Info=anyRefInfo(op1,in);
      int op2Info=anyRefInfo(op2,in);
      boolean op1isKnown=(op1Info == kNull || op1Info == kNonNull);
      boolean op2isKnown=(op2Info == kNull || op2Info == kNonNull);
      if (op1isKnown) {
        if (!op2isKnown) {
          toGen=op2;
          toGenInfo=op1Info;
        }
      }
 else       if (op2isKnown) {
        toGen=op1;
        toGenInfo=op2Info;
      }
      if ((toGen != null) && isAnalyzedRef(toGen)) {
        int fInfo=kBottom;
        int bInfo=kBottom;
        if (cond instanceof EqExpr) {
          bInfo=toGenInfo;
          if (toGenInfo == kNull) {
            fInfo=kNonNull;
          }
        }
 else         if (cond instanceof NeExpr) {
          fInfo=toGenInfo;
          if (toGenInfo == kNull) {
            bInfo=kNonNull;
          }
        }
 else         throw new RuntimeException("invalid condition");
        if (fInfo != kBottom) {
          Iterator it=outFallValue.iterator();
          while (it.hasNext()) {
            FlowSet fs=(FlowSet)(it.next());
            copy(out,fs);
            uAddInfoToFlowSet(toGen,fInfo,fs);
          }
        }
        if (bInfo != kBottom) {
          Iterator it=outBranchValues.iterator();
          while (it.hasNext()) {
            FlowSet fs=(FlowSet)(it.next());
            copy(out,fs);
            uAddInfoToFlowSet(toGen,bInfo,fs);
          }
        }
      }
    }
  }
}
