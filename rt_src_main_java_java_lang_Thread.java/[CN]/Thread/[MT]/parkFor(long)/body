{
  if (threadPtr == 0) {
    throw new AssertionError();
  }
synchronized (lock) {
switch (parkState) {
case ParkState.PREEMPTIVELY_UNPARKED:
{
        parkState=ParkState.UNPARKED;
        break;
      }
case ParkState.UNPARKED:
{
      long millis=nanos / NANOS_PER_MILLI;
      nanos%=NANOS_PER_MILLI;
      parkState=ParkState.PARKED;
      try {
        lock.wait(millis,(int)nanos);
      }
 catch (      InterruptedException ex) {
        interrupt();
      }
 finally {
        if (parkState == ParkState.PARKED) {
          parkState=ParkState.UNPARKED;
        }
      }
      break;
    }
default :
{
    throw new AssertionError("shouldn't happen: attempt to repark");
  }
}
}
}
