{
  List<Type> genericParamTypes=new ArrayList<>();
  genericParamTypes.add(new SootTypeType(LongType.v()));
  genericParamTypes.add(new SootTypeType(org_robovm_objc_ObjCBlock.getType()));
  for (int i=1; i < unboxedTypes.length; i++) {
    Type t=unboxedTypes[i] instanceof PrimType ? new SootTypeType(unboxedTypes[i]) : actualGenericTypes[i];
    genericParamTypes.add(t);
  }
  Type genericReturnType=unboxedTypes[0] instanceof PrimType ? new SootTypeType(unboxedTypes[0]) : actualGenericTypes[0];
  List<soot.Type> rawParamTypes=new ArrayList<>();
  rawParamTypes.add(LongType.v());
  rawParamTypes.add(org_robovm_objc_ObjCBlock.getType());
  rawParamTypes.addAll(Arrays.asList(unboxedTypes).subList(1,unboxedTypes.length));
  String name="invoke";
  String signature=getGenericSignature(genericParamTypes,genericReturnType);
  String desc=getDescriptor(rawParamTypes,unboxedTypes[0]);
  MethodVisitor mv=cw.visitMethod(ACC_PRIVATE | ACC_STATIC | ACC_NATIVE,name,desc,signature,null);
  AnnotationVisitor av=mv.visitAnnotation(BRIDGE,true);
  av.visit("dynamic",true);
  av.visitEnd();
  for (  String s : targetMethodAnnotations[0]) {
    mv.visitAnnotation(s,true).visitEnd();
  }
  for (int i=1; i < targetMethodAnnotations.length; i++) {
    for (    String s : targetMethodAnnotations[i]) {
      mv.visitParameterAnnotation(i + 1,s,true).visitEnd();
    }
  }
  mv.visitParameterAnnotation(0,POINTER,true).visitEnd();
  mv.visitEnd();
}
