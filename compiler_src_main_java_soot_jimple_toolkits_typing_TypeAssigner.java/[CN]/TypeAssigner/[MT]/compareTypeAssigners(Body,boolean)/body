{
  JimpleBody jb=(JimpleBody)b, oldJb, newJb;
  int size=jb.getUnits().size();
  long oldTime, newTime;
  if (useOlderTypeAssigner) {
    newJb=(JimpleBody)jb.clone();
    newTime=System.currentTimeMillis();
    (new soot.jimple.toolkits.typing.fast.TypeResolver(newJb)).inferTypes();
    newTime=System.currentTimeMillis() - newTime;
    oldTime=System.currentTimeMillis();
    TypeResolver.resolve(jb,Scene.v());
    oldTime=System.currentTimeMillis() - oldTime;
    oldJb=jb;
  }
 else {
    oldJb=(JimpleBody)jb.clone();
    oldTime=System.currentTimeMillis();
    TypeResolver.resolve(oldJb,Scene.v());
    oldTime=System.currentTimeMillis() - oldTime;
    newTime=System.currentTimeMillis();
    (new soot.jimple.toolkits.typing.fast.TypeResolver(jb)).inferTypes();
    newTime=System.currentTimeMillis() - newTime;
    newJb=jb;
  }
  int cmp;
  if (newJb.getLocals().size() < oldJb.getLocals().size())   cmp=2;
 else   if (newJb.getLocals().size() > oldJb.getLocals().size())   cmp=-2;
 else   cmp=compareTypings(oldJb,newJb);
  G.v().out.println("cmp;" + jb.getMethod() + ";"+ size+ ";"+ oldTime+ ";"+ newTime+ ";"+ cmp);
}
