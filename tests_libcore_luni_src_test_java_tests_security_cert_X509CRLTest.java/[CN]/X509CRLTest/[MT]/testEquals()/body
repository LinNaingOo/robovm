{
  TBTCRL tbt_crl_1=new TBTCRL(){
    public byte[] getEncoded(){
      return new byte[]{1,2,3};
    }
  }
;
  TBTCRL tbt_crl_2=new TBTCRL(){
    public byte[] getEncoded(){
      return new byte[]{1,2,3};
    }
  }
;
  TBTCRL tbt_crl_3=new TBTCRL(){
    public byte[] getEncoded(){
      return new byte[]{3,2,1};
    }
  }
;
  assertTrue("The equivalence relation should be reflexive.",tbt_crl.equals(tbt_crl));
  assertEquals("The CRLs with equal encoded form should be equal",tbt_crl,tbt_crl_1);
  assertTrue("The equivalence relation should be symmetric.",tbt_crl_1.equals(tbt_crl));
  assertEquals("The CRLs with equal encoded form should be equal",tbt_crl_1,tbt_crl_2);
  assertTrue("The equivalence relation should be transitive.",tbt_crl.equals(tbt_crl_2));
  assertFalse("Should not be equal to null object.",tbt_crl.equals(null));
  assertFalse("The CRLs with differing encoded form should not be equal",tbt_crl.equals(tbt_crl_3));
  assertFalse("The CRL should not be equals to the object which is not " + "an instance of X509CRL",tbt_crl.equals(new Object()));
}
