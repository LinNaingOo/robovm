{
  assertEquals(",,".split(",",3).length,3);
  assertEquals(",,".split(",",4).length,3);
  assertEquals(Pattern.compile("o").split("boo:and:foo",5).length,5);
  assertEquals(Pattern.compile("b").split("ab",-1).length,2);
  String s[];
  Pattern pat=Pattern.compile("x");
  s=pat.split("zxx:zzz:zxx",10);
  assertEquals(s.length,5);
  s=pat.split("zxx:zzz:zxx",3);
  assertEquals(s.length,3);
  s=pat.split("zxx:zzz:zxx",-1);
  assertEquals(s.length,5);
  s=pat.split("zxx:zzz:zxx",0);
  assertEquals(s.length,3);
  pat=Pattern.compile("b");
  s=pat.split("abccbadfebb",-1);
  assertEquals(s.length,5);
  s=pat.split("",-1);
  assertEquals(s.length,1);
  pat=Pattern.compile("");
  s=pat.split("",-1);
  assertEquals(s.length,1);
  s=pat.split("abccbadfe",-1);
  assertEquals(s.length,11);
  pat=Pattern.compile("b");
  s=pat.split("abccbadfebb",0);
  assertEquals(s.length,3);
  s=pat.split("",0);
  assertEquals(s.length,1);
  pat=Pattern.compile("");
  s=pat.split("",0);
  assertEquals(s.length,1);
  s=pat.split("abccbadfe",0);
  assertEquals(s.length,10);
  pat=Pattern.compile("b");
  s=pat.split("abccbadfebb",12);
  assertEquals(s.length,5);
  s=pat.split("",6);
  assertEquals(s.length,1);
  pat=Pattern.compile("");
  s=pat.split("",11);
  assertEquals(s.length,1);
  s=pat.split("abccbadfe",15);
  assertEquals(s.length,11);
  pat=Pattern.compile("b");
  s=pat.split("abccbadfebb",5);
  assertEquals(s.length,5);
  s=pat.split("",1);
  assertEquals(s.length,1);
  pat=Pattern.compile("");
  s=pat.split("",1);
  assertEquals(s.length,1);
  s=pat.split("abccbadfe",11);
  assertEquals(s.length,11);
  pat=Pattern.compile("b");
  s=pat.split("abccbadfebb",3);
  assertEquals(s.length,3);
  pat=Pattern.compile("");
  s=pat.split("abccbadfe",5);
  assertEquals(s.length,5);
}
