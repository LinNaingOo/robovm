{
  String[] correctTestPatterns={"[^]*abb]*","[a-d\\d]*abb","[abc]*abb","[a-e&&[de]]*abb","[^abc]*abb","[a-e&&[^de]]*abb","[a-z&&[^m-p]]*abb","[a-d[m-p]]*abb","[a-zA-Z]*abb","[+*?]*abb","[^+*?]*abb"};
  String[] inputSecuence={"kkkk","abcabcd124654abb","abcabccbacababb","dededededededeedabb","gfdhfghgdfghabb","accabacbcbaabb","acbvfgtyabb","adbcacdbmopabcoabb","jhfkjhaSDFGHJkdfhHNJMjkhfabb","+*??+*abb","sdfghjkabb"};
  Pattern pat;
  for (int i=0; i < correctTestPatterns.length; i++) {
    assertTrue("pattern: " + correctTestPatterns[i] + " input: "+ inputSecuence[i],Pattern.matches(correctTestPatterns[i],inputSecuence[i]));
  }
  String[] wrongInputSecuence={"]","abcabcd124k654abb","abwcabccbacababb","abababdeababdeabb","abcabcacbacbabb","acdcbecbaabb","acbotyabb","adbcaecdbmopabcoabb","jhfkjhaSDFGHJk;dfhHNJMjkhfabb","+*?a?+*abb","sdf+ghjkabb"};
  for (int i=0; i < correctTestPatterns.length; i++) {
    assertFalse("pattern: " + correctTestPatterns[i] + " input: "+ wrongInputSecuence[i],Pattern.matches(correctTestPatterns[i],wrongInputSecuence[i]));
  }
}
