{
  Document document=builder.parse(getClass().getResourceAsStream("/SimpleBuilderTest.xml"));
  Element root=document.getDocumentElement();
  assertNotNull(root);
  assertEquals("http://www.foo.bar",root.getNamespaceURI());
  assertEquals("t",root.getPrefix());
  assertEquals("stuff",root.getLocalName());
  NodeList list=root.getElementsByTagName("nestedStuff");
  assertNotNull(list);
  assertEquals(list.getLength(),4);
  Element one=(Element)list.item(0);
  Element two=(Element)list.item(1);
  Element three=(Element)list.item(2);
  Element four=(Element)list.item(3);
  assertEquals("This space intentionally left blank.",getTextContent(one));
  assertEquals("Nothing to see here - please get along!",getTextContent(two));
  assertEquals("Rent this space!",getTextContent(three));
  assertEquals("",getTextContent(four));
  assertEquals("eins",one.getAttribute("one"));
  assertEquals("zwei",two.getAttribute("two"));
  assertEquals("drei",three.getAttribute("three"));
  assertEquals("vier",four.getAttribute("t:four"));
  assertEquals("vier",four.getAttributeNS("http://www.foo.bar","four"));
  list=document.getChildNodes();
  assertNotNull(list);
  String proinst="";
  String comment="";
  for (int i=0; i < list.getLength(); i++) {
    Node node=list.item(i);
    if (node instanceof ProcessingInstruction) {
      proinst=proinst + node.getNodeValue();
    }
 else     if (node instanceof Comment) {
      comment=comment + node.getNodeValue();
    }
  }
  assertEquals("The quick brown fox jumps over the lazy dog.",proinst);
  assertEquals(" Fragile!  Handle me with care! ",comment);
}
