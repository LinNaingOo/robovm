{
  Date startDate=new Date();
  GregorianCalendar cal=new GregorianCalendar();
  cal.setTimeZone(TimeZone.getTimeZone("UTC"));
  cal.set(2100,0,1,0,0,0);
  Date expiryDate=cal.getTime();
  KeyPairGenerator kpg=KeyPairGenerator.getInstance("RSA");
  KeyPair keyPair=kpg.generateKeyPair();
  BigInteger serial;
  X500Principal issuerPrincipal;
  X500Principal subjectPrincipal;
  PrivateKey caKey;
  if (issuer != null) {
    serial=issuer.certificate.getSerialNumber().add(BigInteger.ONE);
    subjectPrincipal=new X500Principal("CN=Test Certificate Serial #" + serial.toString());
    issuerPrincipal=issuer.certificate.getSubjectX500Principal();
    caKey=issuer.privateKey;
  }
 else {
    serial=BigInteger.ONE;
    subjectPrincipal=new X500Principal("CN=Test CA, O=Tests, C=US");
    issuerPrincipal=subjectPrincipal;
    caKey=keyPair.getPrivate();
  }
  BasicConstraints basicConstraints;
  if (isCa) {
    basicConstraints=new BasicConstraints(10 - serial.intValue());
  }
 else {
    basicConstraints=new BasicConstraints(false);
  }
  X509V3CertificateGenerator certGen=new X509V3CertificateGenerator();
  certGen.setSerialNumber(serial);
  certGen.setIssuerDN(issuerPrincipal);
  certGen.setNotBefore(startDate);
  certGen.setNotAfter(expiryDate);
  certGen.setSubjectDN(subjectPrincipal);
  certGen.setPublicKey(keyPair.getPublic());
  certGen.setSignatureAlgorithm("SHA1withRSA");
  if (issuer != null) {
    certGen.addExtension(X509Extensions.AuthorityKeyIdentifier,false,new AuthorityKeyIdentifierStructure(issuer.certificate));
  }
 else {
    certGen.addExtension(X509Extensions.AuthorityKeyIdentifier,false,new AuthorityKeyIdentifierStructure(keyPair.getPublic()));
  }
  certGen.addExtension(X509Extensions.SubjectKeyIdentifier,false,new SubjectKeyIdentifierStructure(keyPair.getPublic()));
  certGen.addExtension(X509Extensions.BasicConstraints,true,basicConstraints);
  X509Certificate cert=certGen.generate(caKey);
  KeyHolder holder=new KeyHolder();
  holder.certificate=cert;
  holder.privateKey=keyPair.getPrivate();
  return holder;
}
