{
  assertTrue(Pattern.matches("\\p{Ll}","k"));
  assertTrue(Pattern.matches("\\P{Ll}","K"));
  assertTrue(Pattern.matches("\\p{Lu}","K"));
  assertTrue(Pattern.matches("\\P{Lu}","k"));
  assertTrue(Pattern.matches("[\\p{L}&&[^\\p{Lu}]]","k"));
  assertTrue(Pattern.matches("[\\p{L}&&[^\\p{Ll}]]","K"));
  assertFalse(Pattern.matches("[\\p{L}&&[^\\p{Lu}]]","K"));
  assertFalse(Pattern.matches("[\\p{L}&&[^\\p{Ll}]]","k"));
  assertFalse(Pattern.matches("[\\p{L}&&[^a-z]]","k"));
  assertTrue(Pattern.matches("[\\p{L}&&[^a-z]]","K"));
  assertTrue(Pattern.matches("[\\p{Lu}a-z]","k"));
  assertTrue(Pattern.matches("[a-z\\p{Lu}]","k"));
  assertFalse(Pattern.matches("[\\p{Lu}a-d]","k"));
  assertTrue(Pattern.matches("[a-d\\p{Lu}]","K"));
  assertFalse(Pattern.matches("[\\p{L}&&[^\\p{Lu}&&[^G]]]","K"));
}
