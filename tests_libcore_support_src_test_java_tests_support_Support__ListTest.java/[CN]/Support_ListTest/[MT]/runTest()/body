{
  int hashCode=1;
  for (int counter=0; counter < 100; counter++) {
    Object elem;
    elem=list.get(counter);
    hashCode=31 * hashCode + elem.hashCode();
    assertTrue("ListTest - get failed",elem.equals(new Integer(counter)));
  }
  assertTrue("ListTest - hashCode failed",hashCode == list.hashCode());
  list.add(50,new Integer(1000));
  assertTrue("ListTest - a) add with index failed--did not insert",list.get(50).equals(new Integer(1000)));
  assertTrue("ListTest - b) add with index failed--did not move following elements",list.get(51).equals(new Integer(50)));
  assertTrue("ListTest - c) add with index failed--affected previous elements",list.get(49).equals(new Integer(49)));
  list.set(50,new Integer(2000));
  assertTrue("ListTest - a) set failed--did not set",list.get(50).equals(new Integer(2000)));
  assertTrue("ListTest - b) set failed--affected following elements",list.get(51).equals(new Integer(50)));
  assertTrue("ListTest - c) set failed--affected previous elements",list.get(49).equals(new Integer(49)));
  list.remove(50);
  assertTrue("ListTest - a) remove with index failed--did not remove",list.get(50).equals(new Integer(50)));
  assertTrue("ListTest - b) remove with index failed--did not move following elements",list.get(51).equals(new Integer(51)));
  assertTrue("ListTest - c) remove with index failed--affected previous elements",list.get(49).equals(new Integer(49)));
  List<Integer> myList=new LinkedList<Integer>();
  myList.add(new Integer(500));
  myList.add(new Integer(501));
  myList.add(new Integer(502));
  list.addAll(50,myList);
  assertTrue("ListTest - a) addAll with index failed--did not insert",list.get(50).equals(new Integer(500)));
  assertTrue("ListTest - b) addAll with index failed--did not insert",list.get(51).equals(new Integer(501)));
  assertTrue("ListTest - c) addAll with index failed--did not insert",list.get(52).equals(new Integer(502)));
  assertTrue("ListTest - d) addAll with index failed--did not move following elements",list.get(53).equals(new Integer(50)));
  assertTrue("ListTest - e) addAll with index failed--affected previous elements",list.get(49).equals(new Integer(49)));
  List<Integer> mySubList=list.subList(50,53);
  assertEquals(3,mySubList.size());
  assertTrue("ListTest - a) sublist Failed--does not contain correct elements",mySubList.get(0).equals(new Integer(500)));
  assertTrue("ListTest - b) sublist Failed--does not contain correct elements",mySubList.get(1).equals(new Integer(501)));
  assertTrue("ListTest - c) sublist Failed--does not contain correct elements",mySubList.get(2).equals(new Integer(502)));
  t_listIterator(mySubList);
  mySubList.clear();
  assertEquals("ListTest - Clearing the sublist did not remove the appropriate elements from the original list",100,list.size());
  t_listIterator(list);
  ListIterator<Integer> li=list.listIterator();
  for (int counter=0; li.hasNext(); counter++) {
    Object elem;
    elem=li.next();
    assertTrue("ListTest - listIterator failed",elem.equals(new Integer(counter)));
  }
  new Support_CollectionTest("",list).runTest();
}
