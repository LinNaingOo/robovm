{
  Random rand=new Random();
  BigInteger b;
  for (int rep=0; rep < 1024; ++rep) {
    b=new BigInteger(128,100,rand);
    assertEquals(b.toString(),128,b.bitLength());
    assertTrue(b.isProbablePrime(100));
    b=new BigInteger(16,100,rand);
    assertEquals(b.toString(),16,b.bitLength());
    assertTrue(b.isProbablePrime(100));
    b=new BigInteger(5,100,rand);
    assertEquals(b.toString(),5,b.bitLength());
    assertTrue(b.isProbablePrime(100));
  }
  int[] primes=new int[1024];
  boolean saw2=false;
  boolean saw3=false;
  for (int rep=0; rep < primes.length; ++rep) {
    b=new BigInteger(2,100,rand);
    assertEquals(b.toString(),2,b.bitLength());
    assertTrue(b.isProbablePrime(100));
    primes[rep]=b.intValue();
  }
  for (int i=0; i < primes.length; ++i) {
    if (primes[i] == 2) {
      saw2=true;
    }
 else     if (primes[i] == 3) {
      saw3=true;
    }
 else {
      fail();
    }
  }
  assertTrue(saw2 && saw3);
}
