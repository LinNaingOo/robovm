{
  List<SigningIdentity> ids=SigningIdentity.parse(IOUtils.toString(getClass().getResourceAsStream("codesigning_dump.txt")));
  SigningIdentity identity1=SigningIdentity.find(ids,"/(?i)iPhone Developer|iOS Development/");
  assertEquals("ABBBE93758B08A8FE7B970354D8B6D9821CF9108",identity1.getFingerprint());
  assertEquals("iOS Development: Gerrard Eliot (KDH76S9URT)",identity1.getName());
  SigningIdentity identity2=SigningIdentity.find(ids,"/iPhone/");
  assertEquals("97BBE93758B08A8FE7B970354D8B6D9821CF9108",identity2.getFingerprint());
  assertEquals("iPhone Developer: Gerrard Eliot (KDH76S9URT)",identity2.getName());
  SigningIdentity identity3=SigningIdentity.find(ids,"/Developer/");
  assertEquals("97BBE93758B08A8FE7B970354D8B6D9821CF9108",identity3.getFingerprint());
  assertEquals("iPhone Developer: Gerrard Eliot (KDH76S9URT)",identity3.getName());
  try {
    SigningIdentity.find(ids,"/foobar/");
    fail("IllegalArgumentException expected");
  }
 catch (  IllegalArgumentException e) {
  }
}
