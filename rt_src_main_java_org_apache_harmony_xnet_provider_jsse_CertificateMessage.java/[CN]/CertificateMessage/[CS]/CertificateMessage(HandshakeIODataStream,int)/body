{
  int l=in.readUint24();
  if (l == 0) {
    if (length != 3) {
      fatalAlert(AlertProtocol.DECODE_ERROR,"DECODE ERROR: incorrect CertificateMessage");
    }
    certs=new X509Certificate[0];
    encoded_certs=new byte[0][0];
    this.length=3;
    return;
  }
  CertificateFactory cf;
  try {
    cf=CertificateFactory.getInstance("X509");
  }
 catch (  CertificateException e) {
    fatalAlert(AlertProtocol.INTERNAL_ERROR,"INTERNAL ERROR",e);
    return;
  }
  Vector<Certificate> certs_vector=new Vector<Certificate>();
  int size=0;
  int enc_size=0;
  while (l > 0) {
    size=in.readUint24();
    l-=3;
    try {
      certs_vector.add(cf.generateCertificate(in));
    }
 catch (    CertificateException e) {
      fatalAlert(AlertProtocol.DECODE_ERROR,"DECODE ERROR",e);
    }
    l-=size;
    enc_size+=size;
  }
  certs=new X509Certificate[certs_vector.size()];
  for (int i=0; i < certs.length; i++) {
    certs[i]=(X509Certificate)certs_vector.elementAt(i);
  }
  this.length=3 + 3 * certs.length + enc_size;
  if (this.length != length) {
    fatalAlert(AlertProtocol.DECODE_ERROR,"DECODE ERROR: incorrect CertificateMessage");
  }
}
