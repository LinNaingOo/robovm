{
  TimeZone tz=TimeZone.getTimeZone("America/Los_Angeles");
  Calendar c=Calendar.getInstance(tz,Locale.US);
  c.set(Calendar.MONTH,Calendar.JANUARY);
  c.set(Calendar.DAY_OF_MONTH,19);
  c.set(Calendar.HOUR_OF_DAY,3);
  c.set(Calendar.MINUTE,30);
  c.set(Calendar.SECOND,15);
  long timeWithCurrentYear=c.getTimeInMillis();
  c.set(Calendar.YEAR,2009);
  long fixedTime=c.getTimeInMillis();
  c.set(Calendar.MINUTE,0);
  c.set(Calendar.SECOND,0);
  long onTheHour=c.getTimeInMillis();
  long noonDuration=(8 * 60 + 30) * 60 * 1000 - 15 * 1000;
  long midnightDuration=(3 * 60 + 30) * 60 * 1000 + 15 * 1000;
  Locale de_DE=new Locale("de","DE");
  Locale en_US=new Locale("en","US");
  Locale es_ES=new Locale("es","ES");
  Locale es_US=new Locale("es","US");
  assertEquals("Monday",formatDateRange(en_US,tz,fixedTime,fixedTime + HOUR,FORMAT_SHOW_WEEKDAY));
  assertEquals("January 19",formatDateRange(en_US,tz,timeWithCurrentYear,timeWithCurrentYear + HOUR,FORMAT_SHOW_DATE));
  assertEquals("3:30 AM",formatDateRange(en_US,tz,fixedTime,fixedTime,FORMAT_SHOW_TIME));
  assertEquals("January 19, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + HOUR,FORMAT_SHOW_YEAR));
  assertEquals("January 19",formatDateRange(en_US,tz,fixedTime,fixedTime + HOUR,FORMAT_NO_YEAR));
  assertEquals("January",formatDateRange(en_US,tz,timeWithCurrentYear,timeWithCurrentYear + HOUR,FORMAT_NO_MONTH_DAY));
  assertEquals("3:30 AM",formatDateRange(en_US,tz,fixedTime,fixedTime,FORMAT_12HOUR | FORMAT_SHOW_TIME));
  assertEquals("03:30",formatDateRange(en_US,tz,fixedTime,fixedTime,FORMAT_24HOUR | FORMAT_SHOW_TIME));
  assertEquals("3:30 AM",formatDateRange(en_US,tz,fixedTime,fixedTime,FORMAT_12HOUR | FORMAT_SHOW_TIME));
  assertEquals("12:00 PM",formatDateRange(en_US,tz,fixedTime + noonDuration,fixedTime + noonDuration,FORMAT_12HOUR | FORMAT_SHOW_TIME));
  assertEquals("12:00 PM",formatDateRange(en_US,tz,fixedTime + noonDuration,fixedTime + noonDuration,FORMAT_12HOUR | FORMAT_SHOW_TIME));
  assertEquals("12:00 PM",formatDateRange(en_US,tz,fixedTime + noonDuration,fixedTime + noonDuration,FORMAT_12HOUR | FORMAT_SHOW_TIME));
  assertEquals("12:00 AM",formatDateRange(en_US,tz,fixedTime - midnightDuration,fixedTime - midnightDuration,FORMAT_12HOUR | FORMAT_SHOW_TIME));
  assertEquals("3:30 AM",formatDateRange(en_US,tz,fixedTime,fixedTime,FORMAT_SHOW_TIME | FORMAT_UTC));
  assertEquals("3 AM",formatDateRange(en_US,tz,onTheHour,onTheHour,FORMAT_SHOW_TIME | FORMAT_ABBREV_TIME));
  assertEquals("Mon",formatDateRange(en_US,tz,fixedTime,fixedTime + HOUR,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_WEEKDAY));
  assertEquals("Jan 19",formatDateRange(en_US,tz,timeWithCurrentYear,timeWithCurrentYear + HOUR,FORMAT_SHOW_DATE | FORMAT_ABBREV_MONTH));
  assertEquals("Jan 19",formatDateRange(en_US,tz,timeWithCurrentYear,timeWithCurrentYear + HOUR,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("1/19/2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * HOUR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("1/19/2009 ??? 1/22/2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("1/19/2009 ??? 4/22/2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("1/19/2009 ??? 2/9/2012",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19.1.2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + HOUR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19.01.2009 - 22.01.2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19.01.2009 - 22.04.2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19.01.2009 - 09.02.2012",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("1/19/2009",formatDateRange(es_US,tz,fixedTime,fixedTime + HOUR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19/1/2009 ??? 22/1/2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19/1/2009 ??? 22/4/2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19/1/2009 ??? 9/2/2012",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19/1/2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + HOUR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19/1/2009 ??? 22/1/2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19/1/2009 ??? 22/4/2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("19/1/2009 ??? 9/2/2012",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_YEAR | FORMAT_NUMERIC_DATE));
  assertEquals("January 19???22, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * DAY,0));
  assertEquals("Jan 19???22, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("Mon, Jan 19 ??? Thu, Jan 22, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("Monday, January 19 ??? Thursday, January 22, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY));
  assertEquals("January 19 ??? April 22, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * MONTH,0));
  assertEquals("Jan 19 ??? Apr 22, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("Mon, Jan 19 ??? Wed, Apr 22, 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("January???April 2009",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_NO_MONTH_DAY));
  assertEquals("Jan 19, 2009 ??? Feb 9, 2012",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("Jan 2009 ??? Feb 2012",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_NO_MONTH_DAY | FORMAT_ABBREV_ALL));
  assertEquals("January 19, 2009 ??? February 9, 2012",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * YEAR,0));
  assertEquals("Monday, January 19, 2009 ??? Thursday, February 9, 2012",formatDateRange(en_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_WEEKDAY));
  assertEquals("19.-22. Januar 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * DAY,0));
  assertEquals("19.-22. Jan. 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("Mo., 19. - Do., 22. Jan. 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("Montag, 19. - Donnerstag, 22. Januar 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY));
  assertEquals("19. Januar - 22. April 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * MONTH,0));
  assertEquals("19. Jan. - 22. Apr. 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("Mo., 19. Jan. - Mi., 22. Apr. 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("Januar-April 2009",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_NO_MONTH_DAY));
  assertEquals("19. Jan. 2009 - 9. Feb. 2012",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("Jan. 2009 - Feb. 2012",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_NO_MONTH_DAY | FORMAT_ABBREV_ALL));
  assertEquals("19. Januar 2009 - 9. Februar 2012",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * YEAR,0));
  assertEquals("Montag, 19. Januar 2009 - Donnerstag, 9. Februar 2012",formatDateRange(de_DE,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_WEEKDAY));
  assertEquals("19???22 enero 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * DAY,0));
  assertEquals("19???22 ene 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("lun 19 ene ??? jue 22 ene 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("lunes 19 enero ??? jueves 22 enero 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY));
  assertEquals("19 enero ??? 22 abril 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * MONTH,0));
  assertEquals("19 ene ??? 22 abr 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("lun 19 ene ??? mi?? 22 abr 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("enero???abril 2009",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_NO_MONTH_DAY));
  assertEquals("19 ene 2009 ??? 9 feb 2012",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("ene 2009 ??? feb 2012",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_NO_MONTH_DAY | FORMAT_ABBREV_ALL));
  assertEquals("19 enero 2009 ??? 9 febrero 2012",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * YEAR,0));
  assertEquals("lunes 19 enero 2009 ??? jueves 9 febrero 2012",formatDateRange(es_US,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_WEEKDAY));
  assertEquals("19???22 enero 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * DAY,0));
  assertEquals("19???22 ene 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("lun 19 ene ??? jue 22 ene 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("lunes 19 enero ??? jueves 22 enero 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * DAY,FORMAT_SHOW_WEEKDAY));
  assertEquals("19 enero ??? 22 abril 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * MONTH,0));
  assertEquals("19 ene ??? 22 abr 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("lun 19 ene ??? mi?? 22 abr 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_SHOW_WEEKDAY | FORMAT_ABBREV_ALL));
  assertEquals("enero???abril 2009",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * MONTH,FORMAT_NO_MONTH_DAY));
  assertEquals("19 ene 2009 ??? 9 feb 2012",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_DATE | FORMAT_ABBREV_ALL));
  assertEquals("ene 2009 ??? feb 2012",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_NO_MONTH_DAY | FORMAT_ABBREV_ALL));
  assertEquals("19 enero 2009 ??? 9 febrero 2012",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * YEAR,0));
  assertEquals("lunes 19 enero 2009 ??? jueves 9 febrero 2012",formatDateRange(es_ES,tz,fixedTime,fixedTime + 3 * YEAR,FORMAT_SHOW_WEEKDAY));
}
