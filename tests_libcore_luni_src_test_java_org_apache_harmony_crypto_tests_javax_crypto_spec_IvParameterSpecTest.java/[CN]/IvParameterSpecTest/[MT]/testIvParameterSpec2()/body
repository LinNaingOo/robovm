{
  try {
    new IvParameterSpec(null,1,1);
    fail("Should raise an IllegalArgumentException " + "in the case of null byte array.");
  }
 catch (  ArrayIndexOutOfBoundsException e) {
    fail("Unexpected ArrayIndexOutOfBoundsException was thrown");
  }
catch (  IllegalArgumentException e) {
  }
catch (  NullPointerException e) {
    fail("Unexpected NullPointerException was thrown");
  }
  try {
    new IvParameterSpec(new byte[]{1,2,3},2,2);
    fail("Should raise an IllegalArgumentException " + "if (iv.length - offset < len).");
  }
 catch (  ArrayIndexOutOfBoundsException e) {
    fail("Unexpected ArrayIndexOutOfBoundsException was thrown");
  }
catch (  IllegalArgumentException e) {
  }
catch (  NullPointerException e) {
    fail("Unexpected NullPointerException was thrown");
  }
  try {
    new IvParameterSpec(new byte[]{1,2,3},-1,1);
    fail("Should raise an ArrayIndexOutOfBoundsException " + "if offset index bytes outside the iv.");
  }
 catch (  ArrayIndexOutOfBoundsException e) {
  }
catch (  IllegalArgumentException e) {
    fail("Unexpected IllegalArgumentException was thrown");
  }
catch (  NullPointerException e) {
    fail("Unexpected NullPointerException was thrown");
  }
  byte[] iv=new byte[]{1,2,3,4,5};
  IvParameterSpec ivps=new IvParameterSpec(iv,0,iv.length);
  iv[0]++;
  assertFalse("The change of input array's content should not cause " + "the change of internal array",iv[0] == ivps.getIV()[0]);
  try {
    new IvParameterSpec(new byte[2],2,-1);
    fail("ArrayIndexOutOfBoundsException expected");
  }
 catch (  ArrayIndexOutOfBoundsException e) {
  }
}
