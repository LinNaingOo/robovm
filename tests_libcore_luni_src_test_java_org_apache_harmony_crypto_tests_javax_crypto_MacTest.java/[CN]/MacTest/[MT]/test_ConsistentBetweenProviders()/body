{
  SecretKey key=new SecretKeySpec(new byte[]{(byte)0x7b,(byte)0x10,(byte)0x6d,(byte)0x68,(byte)0x3f,(byte)0x70,(byte)0xa3,(byte)0xb5,(byte)0xa3,(byte)0xdd,(byte)0x9f,(byte)0x54,(byte)0x74,(byte)0x36,(byte)0xde,(byte)0xa7,(byte)0x88,(byte)0x81,(byte)0x0d,(byte)0x89,(byte)0xef,(byte)0x2e,(byte)0x42,(byte)0x4f},"HmacMD5");
  byte[] label=new byte[]{(byte)0x6b,(byte)0x65,(byte)0x79,(byte)0x20,(byte)0x65,(byte)0x78,(byte)0x70,(byte)0x61,(byte)0x6e,(byte)0x73,(byte)0x69,(byte)0x6f,(byte)0x6e};
  byte[] seed=new byte[]{(byte)0x50,(byte)0xf9,(byte)0xce,(byte)0x14,(byte)0xb2,(byte)0xdd,(byte)0x3d,(byte)0xfa,(byte)0x96,(byte)0xd9,(byte)0xfe,(byte)0x3a,(byte)0x1a,(byte)0xe5,(byte)0x79,(byte)0x55,(byte)0xe7,(byte)0xbc,(byte)0x84,(byte)0x68,(byte)0x0e,(byte)0x2d,(byte)0x20,(byte)0xd0,(byte)0x6e,(byte)0xb4,(byte)0x03,(byte)0xbf,(byte)0xa2,(byte)0xe6,(byte)0xc4,(byte)0x9d,(byte)0x50,(byte)0xf9,(byte)0xce,(byte)0x14,(byte)0xbc,(byte)0xc5,(byte)0x9e,(byte)0x9a,(byte)0x36,(byte)0xa7,(byte)0xaa,(byte)0xfe,(byte)0x3b,(byte)0xca,(byte)0xcb,(byte)0x4c,(byte)0xfa,(byte)0x87,(byte)0x9a,(byte)0xac,(byte)0x02,(byte)0x25,(byte)0xce,(byte)0xda,(byte)0x74,(byte)0x10,(byte)0x86,(byte)0x9c,(byte)0x03,(byte)0x18,(byte)0x0f,(byte)0xe2};
  Provider[] providers=Security.getProviders("Mac.HmacMD5");
  Provider defProvider=null;
  byte[] output=null;
  byte[] output2=null;
  for (int i=0; i < providers.length; i++) {
    System.out.println("provider = " + providers[i].getName());
    Mac mac=Mac.getInstance("HmacMD5",providers[i]);
    mac.init(key);
    mac.update(label);
    mac.update(seed);
    if (output == null) {
      output=new byte[mac.getMacLength()];
      defProvider=providers[i];
      mac.doFinal(output,0);
      mac.init(new SecretKeySpec(label,"HmacMD5"));
      output2=mac.doFinal(output);
    }
 else {
      byte[] tmp=new byte[mac.getMacLength()];
      mac.doFinal(tmp,0);
      assertEquals(defProvider.getName() + " vs. " + providers[i].getName(),Arrays.toString(output),Arrays.toString(tmp));
      mac.init(new SecretKeySpec(label,"HmacMD5"));
      assertEquals(defProvider.getName() + " vs. " + providers[i].getName(),Arrays.toString(output2),Arrays.toString(mac.doFinal(output)));
    }
  }
}
