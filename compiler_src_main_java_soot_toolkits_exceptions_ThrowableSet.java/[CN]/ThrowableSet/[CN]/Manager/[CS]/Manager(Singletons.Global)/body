{
  RUNTIME_EXCEPTION=Scene.v().getRefType("java.lang.RuntimeException");
  ARITHMETIC_EXCEPTION=Scene.v().getRefType("java.lang.ArithmeticException");
  ARRAY_STORE_EXCEPTION=Scene.v().getRefType("java.lang.ArrayStoreException");
  CLASS_CAST_EXCEPTION=Scene.v().getRefType("java.lang.ClassCastException");
  ILLEGAL_MONITOR_STATE_EXCEPTION=Scene.v().getRefType("java.lang.IllegalMonitorStateException");
  INDEX_OUT_OF_BOUNDS_EXCEPTION=Scene.v().getRefType("java.lang.IndexOutOfBoundsException");
  ARRAY_INDEX_OUT_OF_BOUNDS_EXCEPTION=Scene.v().getRefType("java.lang.ArrayIndexOutOfBoundsException");
  NEGATIVE_ARRAY_SIZE_EXCEPTION=Scene.v().getRefType("java.lang.NegativeArraySizeException");
  NULL_POINTER_EXCEPTION=Scene.v().getRefType("java.lang.NullPointerException");
  INSTANTIATION_ERROR=Scene.v().getRefType("java.lang.InstantiationError");
  EMPTY=registerSetIfNew(null,null);
  Set allThrowablesSet=new HashSet();
  allThrowablesSet.add(AnySubType.v(Scene.v().getRefType("java.lang.Throwable")));
  ALL_THROWABLES=registerSetIfNew(allThrowablesSet,null);
  Set vmErrorSet=new HashSet();
  vmErrorSet.add(Scene.v().getRefType("java.lang.InternalError"));
  vmErrorSet.add(Scene.v().getRefType("java.lang.OutOfMemoryError"));
  vmErrorSet.add(Scene.v().getRefType("java.lang.StackOverflowError"));
  vmErrorSet.add(Scene.v().getRefType("java.lang.UnknownError"));
  vmErrorSet.add(Scene.v().getRefType("java.lang.ThreadDeath"));
  VM_ERRORS=registerSetIfNew(vmErrorSet,null);
  Set resolveClassErrorSet=new HashSet();
  resolveClassErrorSet.add(Scene.v().getRefType("java.lang.ClassCircularityError"));
  if (!Options.v().j2me())   resolveClassErrorSet.add(AnySubType.v(Scene.v().getRefType("java.lang.ClassFormatError")));
  resolveClassErrorSet.add(Scene.v().getRefType("java.lang.IllegalAccessError"));
  resolveClassErrorSet.add(Scene.v().getRefType("java.lang.IncompatibleClassChangeError"));
  resolveClassErrorSet.add(Scene.v().getRefType("java.lang.LinkageError"));
  resolveClassErrorSet.add(Scene.v().getRefType("java.lang.NoClassDefFoundError"));
  resolveClassErrorSet.add(Scene.v().getRefType("java.lang.VerifyError"));
  RESOLVE_CLASS_ERRORS=registerSetIfNew(resolveClassErrorSet,null);
  Set resolveFieldErrorSet=new HashSet(resolveClassErrorSet);
  resolveFieldErrorSet.add(Scene.v().getRefType("java.lang.NoSuchFieldError"));
  RESOLVE_FIELD_ERRORS=registerSetIfNew(resolveFieldErrorSet,null);
  Set resolveMethodErrorSet=new HashSet(resolveClassErrorSet);
  resolveMethodErrorSet.add(Scene.v().getRefType("java.lang.AbstractMethodError"));
  resolveMethodErrorSet.add(Scene.v().getRefType("java.lang.NoSuchMethodError"));
  resolveMethodErrorSet.add(Scene.v().getRefType("java.lang.UnsatisfiedLinkError"));
  RESOLVE_METHOD_ERRORS=registerSetIfNew(resolveMethodErrorSet,null);
  Set initializationErrorSet=new HashSet();
  initializationErrorSet.add(AnySubType.v(Scene.v().getRefType("java.lang.Error")));
  INITIALIZATION_ERRORS=registerSetIfNew(initializationErrorSet,null);
}
