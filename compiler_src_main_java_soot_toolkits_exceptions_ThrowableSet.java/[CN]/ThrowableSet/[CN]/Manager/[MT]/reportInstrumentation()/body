{
  int setCount=0;
  for (  List sizeList : sizeToSets.values()) {
    setCount+=sizeList.size();
  }
  if (setCount != registeredSets) {
    throw new IllegalStateException("ThrowableSet.reportInstrumentation() assertion failure: registeredSets != list count");
  }
  StringBuffer buf=new StringBuffer("registeredSets: ").append(setCount).append("\naddsOfRefType: ").append(addsOfRefType).append("\naddsOfAnySubType: ").append(addsOfAnySubType).append("\naddsOfSet: ").append(addsOfSet).append("\naddsInclusionFromMap: ").append(addsInclusionFromMap).append("\naddsInclusionFromMemo: ").append(addsInclusionFromMemo).append("\naddsInclusionFromSearch: ").append(addsInclusionFromSearch).append("\naddsInclusionInterrupted: ").append(addsInclusionInterrupted).append("\naddsExclusionWithoutSearch: ").append(addsExclusionWithoutSearch).append("\naddsExclusionWithSearch: ").append(addsExclusionWithSearch).append("\nremovesOfAnySubType: ").append(removesOfAnySubType).append("\nremovesFromMap: ").append(removesFromMap).append("\nremovesFromMemo: ").append(removesFromMemo).append("\nremovesFromSearch: ").append(removesFromSearch).append("\nregistrationCalls: ").append(registrationCalls).append("\ncatchableAsQueries: ").append(catchableAsQueries).append("\ncatchableAsFromMap: ").append(catchableAsFromMap).append("\ncatchableAsFromSearch: ").append(catchableAsFromSearch).append('\n');
  return buf.toString();
}
