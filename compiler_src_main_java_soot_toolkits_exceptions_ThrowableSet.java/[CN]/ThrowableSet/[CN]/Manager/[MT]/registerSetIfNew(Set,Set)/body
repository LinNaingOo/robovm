{
  if (INSTRUMENTING) {
    registrationCalls++;
  }
  if (include == null) {
    include=Collections.EMPTY_SET;
  }
  if (exclude == null) {
    exclude=Collections.EMPTY_SET;
  }
  int size=include.size() + exclude.size();
  Integer sizeKey=new Integer(size);
  List<ThrowableSet> sizeList=sizeToSets.get(sizeKey);
  if (sizeList == null) {
    sizeList=new LinkedList<ThrowableSet>();
    sizeToSets.put(sizeKey,sizeList);
  }
  for (  ThrowableSet set : sizeList) {
    if (set.exceptionsIncluded.equals(include) && set.exceptionsExcluded.equals(exclude)) {
      return set;
    }
  }
  if (INSTRUMENTING) {
    registeredSets++;
  }
  ThrowableSet result=new ThrowableSet(include,exclude);
  sizeList.add(result);
  return result;
}
