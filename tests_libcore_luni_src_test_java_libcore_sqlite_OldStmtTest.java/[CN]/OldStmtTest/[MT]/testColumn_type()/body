{
  db.exec(CREATE_ALL_TYPES,null);
  db.exec(INSERT_ALL_TYPES,null);
  st=db.prepare("select * from " + ALL_TYPES_TABLE);
  st.step();
  try {
    st.column_type(100);
    fail();
  }
 catch (  SQLite.Exception expected) {
  }
  assertEquals(Constants.SQLITE3_TEXT,st.column_type(23));
  assertEquals(Constants.SQLITE3_TEXT,st.column_type(13));
  assertEquals(Constants.SQLITE_FLOAT,st.column_type(8));
  assertEquals(Constants.SQLITE_FLOAT,st.column_type(9));
  assertEquals(Constants.SQLITE_FLOAT,st.column_type(10));
  for (int i=0; i < 8; i++) {
    assertEquals("Expected Integer at position " + i,Constants.SQLITE_INTEGER,st.column_type(i));
  }
  assertEquals(Constants.SQLITE_NULL,st.column_type(28));
  assertEquals(Constants.SQLITE_NULL,st.column_type(29));
  assertTrue("INTEGER".equalsIgnoreCase(st.column_decltype(12)));
  assertEquals(Constants.SQLITE_INTEGER,st.column_type(12));
  assertTrue("FLOAT".equalsIgnoreCase(st.column_decltype(11)));
  assertEquals(Constants.SQLITE_FLOAT,st.column_type(11));
  assertTrue("BLOB".equalsIgnoreCase(st.column_decltype(19)));
  assertEquals(Constants.SQLITE_BLOB,st.column_type(19));
}
