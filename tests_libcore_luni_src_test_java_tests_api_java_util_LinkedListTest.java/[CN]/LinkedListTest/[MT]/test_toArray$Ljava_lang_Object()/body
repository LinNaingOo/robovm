{
  Integer[] argArray=new Integer[100];
  Object[] retArray;
  retArray=ll.toArray(argArray);
  assertTrue("Returned different array than passed",retArray == argArray);
  List retList=new LinkedList(Arrays.asList(retArray));
  Iterator li=ll.iterator();
  Iterator ri=retList.iterator();
  while (li.hasNext())   assertTrue("Lists are not equal",li.next() == ri.next());
  argArray=new Integer[1000];
  retArray=ll.toArray(argArray);
  assertNull("Failed to set first extra element to null",argArray[ll.size()]);
  for (int i=0; i < ll.size(); i++)   assertTrue("Returned incorrect array: " + i,retArray[i] == objArray[i]);
  ll.add(50,null);
  argArray=new Integer[101];
  retArray=ll.toArray(argArray);
  assertTrue("Returned different array than passed",retArray == argArray);
  retArray=ll.toArray(argArray);
  assertTrue("Returned different array than passed",retArray == argArray);
  retList=new LinkedList(Arrays.asList(retArray));
  li=ll.iterator();
  ri=retList.iterator();
  while (li.hasNext())   assertTrue("Lists are not equal",li.next() == ri.next());
  try {
    ll.toArray(null);
    fail("NullPointerException expected");
  }
 catch (  NullPointerException e) {
  }
  LinkedList<String> lls=new LinkedList<String>();
  lls.add("First");
  lls.add("Second");
  try {
    lls.toArray(argArray);
    fail("ArrayStoreException expected");
  }
 catch (  ArrayStoreException e) {
  }
}
