{
  ll.addAll(50,(Collection)ll.clone());
  assertEquals("Returned incorrect size after adding to existing list",200,ll.size());
  for (int i=0; i < 50; i++)   assertTrue("Manipulated elements < index",ll.get(i) == objArray[i]);
  for (int i=0; i >= 50 && (i < 150); i++)   assertTrue("Failed to ad elements properly",ll.get(i) == objArray[i - 50]);
  for (int i=0; i >= 150 && (i < 200); i++)   assertTrue("Failed to ad elements properly",ll.get(i) == objArray[i - 100]);
  List myList=new LinkedList();
  myList.add(null);
  myList.add("Blah");
  myList.add(null);
  myList.add("Booga");
  myList.add(null);
  ll.addAll(50,myList);
  assertNull("a) List w/nulls not added correctly",ll.get(50));
  assertEquals("b) List w/nulls not added correctly","Blah",ll.get(51));
  assertNull("c) List w/nulls not added correctly",ll.get(52));
  assertEquals("d) List w/nulls not added correctly","Booga",ll.get(53));
  assertNull("e) List w/nulls not added correctly",ll.get(54));
  try {
    ll.addAll(-1,(Collection)null);
    fail("IndexOutOfBoundsException expected");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    ll.addAll(ll.size() + 1,(Collection)null);
    fail("IndexOutOfBoundsException expected");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    ll.addAll(0,null);
    fail("NullPointerException expected");
  }
 catch (  NullPointerException e) {
  }
}
