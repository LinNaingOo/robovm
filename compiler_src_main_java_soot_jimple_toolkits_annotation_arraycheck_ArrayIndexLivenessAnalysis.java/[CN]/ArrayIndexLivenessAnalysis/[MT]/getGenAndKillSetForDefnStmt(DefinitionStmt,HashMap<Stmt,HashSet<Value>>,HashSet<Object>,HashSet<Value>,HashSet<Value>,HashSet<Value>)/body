{
  Value lhs=asstmt.getLeftOp();
  Value rhs=asstmt.getRightOp();
  boolean killarrayrelated=false;
  boolean killallarrayref=false;
  if (fieldin) {
    if (lhs instanceof Local) {
      HashSet related=localToFieldRef.get(lhs);
      if (related != null)       killset.addAll(related);
    }
 else     if (lhs instanceof StaticFieldRef) {
      killset.add(lhs);
      condset.add(lhs);
    }
 else     if (lhs instanceof InstanceFieldRef) {
      SootField field=((InstanceFieldRef)lhs).getField();
      HashSet related=fieldToFieldRef.get(field);
      if (related != null)       killset.addAll(related);
      condset.add(lhs);
    }
    if (asstmt.containsInvokeExpr()) {
      killset.addAll(allFieldRefs);
    }
  }
  if (arrayin) {
    if (lhs instanceof Local) {
      killarrayrelated=true;
    }
 else     if (lhs instanceof ArrayRef) {
      killallarrayref=true;
      condset.add(lhs);
    }
    if (asstmt.containsInvokeExpr()) {
      killallarrayref=true;
    }
  }
  if (csin) {
    HashSet exprs=localToExpr.get(lhs);
    if (exprs != null)     killset.addAll(exprs);
    if (rhs instanceof BinopExpr) {
      Value op1=((BinopExpr)rhs).getOp1();
      Value op2=((BinopExpr)rhs).getOp2();
      if (rhs instanceof AddExpr) {
        if ((op1 instanceof Local) && (op2 instanceof Local))         genset.add(rhs);
      }
 else       if (rhs instanceof MulExpr) {
        if ((op1 instanceof Local) || (op2 instanceof Local))         genset.add(rhs);
      }
 else       if (rhs instanceof SubExpr) {
        if (op2 instanceof Local)         genset.add(rhs);
      }
    }
  }
  if ((lhs instanceof Local) && (fullSet.contains(lhs))) {
    killset.add(lhs);
    condset.add(lhs);
  }
 else   if (lhs instanceof ArrayRef) {
    Value base=((ArrayRef)lhs).getBase();
    Value index=((ArrayRef)lhs).getIndex();
    ArrayList genList=new ArrayList();
    absgenset.add(base);
    if (index instanceof Local) {
      absgenset.add(index);
    }
  }
  if (rhs instanceof Local) {
    if (fullSet.contains(rhs))     genset.add(rhs);
  }
 else   if (rhs instanceof FieldRef) {
    if (fieldin)     genset.add(rhs);
  }
 else   if (rhs instanceof ArrayRef) {
    Value base=((ArrayRef)rhs).getBase();
    Value index=((ArrayRef)rhs).getIndex();
    absgenset.add(base);
    if (index instanceof Local) {
      absgenset.add(index);
    }
    if (arrayin) {
      genset.add(rhs);
      if (rectarray)       genset.add(Array2ndDimensionSymbol.v(base));
    }
  }
 else   if (rhs instanceof NewArrayExpr) {
    Value size=((NewArrayExpr)rhs).getSize();
    if (size instanceof Local)     genset.add(size);
  }
 else   if (rhs instanceof NewMultiArrayExpr) {
    List sizes=((NewMultiArrayExpr)rhs).getSizes();
    Iterator sizeIt=sizes.iterator();
    while (sizeIt.hasNext()) {
      Value size=(Value)sizeIt.next();
      if (size instanceof Local)       genset.add(size);
    }
  }
 else   if (rhs instanceof LengthExpr) {
    Value op=((LengthExpr)rhs).getOp();
    genset.add(op);
  }
 else   if (rhs instanceof JAddExpr) {
    Value op1=((JAddExpr)rhs).getOp1();
    Value op2=((JAddExpr)rhs).getOp2();
    if ((op1 instanceof IntConstant) && (op2 instanceof Local)) {
      genset.add(op2);
    }
 else     if ((op2 instanceof IntConstant) && (op1 instanceof Local)) {
      genset.add(op1);
    }
  }
 else   if (rhs instanceof JSubExpr) {
    Value op1=((JSubExpr)rhs).getOp1();
    Value op2=((JSubExpr)rhs).getOp2();
    if ((op1 instanceof Local) && (op2 instanceof IntConstant)) {
      genset.add(op1);
    }
  }
  if (arrayin) {
    if (killarrayrelated)     killArrayRelated.put(asstmt,lhs);
    if (killallarrayref)     killAllArrayRef.put(asstmt,new Boolean(true));
  }
}
