{
  assertEquals(192,StructWithArray.sizeOf());
  final int D1=3;
  final int D2=8;
  char[][] array1;
  char[][] array2;
  char[][] array3;
  StructWithArray s=new StructWithArray();
  CharPtr p=s.charArrayAsPtr();
  array1=s.charArray2D();
  assertEquals(D1,array1.length);
  for (int i=0; i < array1.length; i++) {
    assertEquals(D2,array1[i].length);
    for (int j=0; j < array1[i].length; j++) {
      assertEquals(0,array1[i][j]);
    }
  }
  for (int i=0; i < D1 * D2; i++) {
    p.next(i).set((char)(i + 1));
  }
  array2=s.charArray2D();
  assertEquals(D1,array2.length);
  for (int i=0; i < array2.length; i++) {
    assertEquals(D2,array2[i].length);
    for (int j=0; j < array2[i].length; j++) {
      assertEquals(i * D2 + j + 1,array2[i][j]);
    }
  }
  array3=new char[D1][D2];
  for (int i=0; i < array3.length; i++) {
    for (int j=0; j < array3[i].length; j++) {
      array3[i][j]=(char)(2 * (i * D2 + j + 1));
    }
  }
  s.charArray2D(array3);
  for (int i=0; i < D1 * D2; i++) {
    assertEquals(2 * (i + 1),p.next(i).get() & 0xffff);
  }
  try {
    s.charArray2D(new char[D1 / 2][]);
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    s.charArray2D(new char[D1][D2 / 2]);
    fail("Expected IllegalArgumentException");
  }
 catch (  IllegalArgumentException e) {
  }
}
