{
  final int llSize=ll.size();
  final int rllSize=reversedLinkedList.size();
  try {
    Collections.sort((List)null);
    fail("Expected NullPointerException for null list parameter");
  }
 catch (  NullPointerException e) {
  }
  Collections.shuffle(ll);
  Collections.sort(ll);
  Collections.sort(reversedLinkedList);
  for (int counter=0; counter < llSize - 1; counter++) {
    assertTrue("Sorting shuffled list resulted in unsorted list",((Integer)ll.get(counter)).compareTo((Integer)ll.get(counter + 1)) < 0);
  }
  for (int counter=0; counter < rllSize - 1; counter++) {
    assertTrue("Sorting reversed list resulted in unsorted list",((Integer)reversedLinkedList.get(counter)).compareTo((Integer)reversedLinkedList.get(counter + 1)) < 0);
  }
  ArrayList al=new ArrayList();
  al.add("String");
  al.add(new Integer(1));
  al.add(new Double(3.14));
  try {
    Collections.sort(al);
    fail("ClassCastException expected");
  }
 catch (  ClassCastException e) {
  }
  Mock_ArrayList mal=new Mock_ArrayList();
  mal.add("First");
  mal.add("Second");
  try {
    Collections.sort(mal);
    fail("UnsupportedOperationException expected");
  }
 catch (  UnsupportedOperationException e) {
  }
}
