{
  SootClass fieldClass=sf.getDeclaringClass();
  boolean insidePackageAccess=isCallSamePackage(callingClass,fieldClass);
  boolean subClassAccess=isCallClassSubClass(callingClass,fieldClass);
  boolean sameClassAccess=isCallClassMethodClass(callingClass,fieldClass);
  if (!insidePackageAccess && subClassAccess) {
    fieldResultsMap.put(sf,new Integer(RESULT_PROTECTED));
    return true;
  }
 else   if (insidePackageAccess && !sameClassAccess) {
    updateToPackage(sf);
    return false;
  }
 else {
    updateToPrivate(sf);
    return false;
  }
}
