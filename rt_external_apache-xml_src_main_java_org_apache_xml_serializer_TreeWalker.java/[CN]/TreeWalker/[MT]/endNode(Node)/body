{
switch (node.getNodeType()) {
case Node.DOCUMENT_NODE:
    break;
case Node.ELEMENT_NODE:
  String ns=m_dh.getNamespaceOfNode(node);
if (null == ns) ns="";
this.m_contentHandler.endElement(ns,m_dh.getLocalNameOfNode(node),node.getNodeName());
if (m_Serializer == null) {
Element elem_node=(Element)node;
NamedNodeMap atts=elem_node.getAttributes();
int nAttrs=atts.getLength();
for (int i=(nAttrs - 1); 0 <= i; i--) {
final Node attr=atts.item(i);
final String attrName=attr.getNodeName();
final int colon=attrName.indexOf(':');
final String prefix;
if (attrName.equals("xmlns") || attrName.startsWith("xmlns:")) {
  if (colon < 0)   prefix="";
 else   prefix=attrName.substring(colon + 1);
  this.m_contentHandler.endPrefixMapping(prefix);
}
 else if (colon > 0) {
  prefix=attrName.substring(0,colon);
  this.m_contentHandler.endPrefixMapping(prefix);
}
}
{
String uri=elem_node.getNamespaceURI();
if (uri != null) {
  String prefix=elem_node.getPrefix();
  if (prefix == null)   prefix="";
  this.m_contentHandler.endPrefixMapping(prefix);
}
}
}
break;
case Node.CDATA_SECTION_NODE:
break;
case Node.ENTITY_REFERENCE_NODE:
{
EntityReference eref=(EntityReference)node;
if (m_contentHandler instanceof LexicalHandler) {
LexicalHandler lh=((LexicalHandler)this.m_contentHandler);
lh.endEntity(eref.getNodeName());
}
}
break;
default :
}
}
