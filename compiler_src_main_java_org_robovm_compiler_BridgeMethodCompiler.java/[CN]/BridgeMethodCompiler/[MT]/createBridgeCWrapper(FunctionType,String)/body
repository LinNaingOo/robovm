{
  Map<String,String> structs=new TreeMap<String,String>(Collections.reverseOrder());
  String hiReturnType=functionType.getReturnType() instanceof StructureType ? "void" : getHiType(functionType.getReturnType());
  StringBuilder hiSignature=new StringBuilder();
  hiSignature.append(hiReturnType).append(' ').append(name).append("(void* target");
  if (functionType.getReturnType() instanceof StructureType) {
    hiSignature.append(", void* ret");
  }
  StringBuilder loSignature=new StringBuilder();
  String loReturnType=getLoType(functionType.getReturnType(),name,0,structs);
  loSignature.append(loReturnType).append(' ').append("(*)(");
  StringBuilder body=new StringBuilder(" {\n");
  StringBuilder args=new StringBuilder();
  for (int i=0; i < functionType.getParameterTypes().length; i++) {
    String arg="p" + i;
    String hiParamType=getHiType(functionType.getParameterTypes()[i]);
    hiSignature.append(", ");
    hiSignature.append(hiParamType).append(' ').append(arg);
    String loParamType=getLoType(functionType.getParameterTypes()[i],name,i + 1,structs);
    if (i > 0) {
      loSignature.append(", ");
    }
    loSignature.append(loParamType);
    if (i > 0) {
      args.append(", ");
    }
    if (functionType.getParameterTypes()[i] instanceof StructureType) {
      args.append("*((").append(loParamType).append("*)").append(arg).append(')');
    }
 else {
      args.append(arg);
    }
  }
  hiSignature.append(')');
  if (functionType.getParameterTypes().length == 0) {
    loSignature.append("void");
  }
  loSignature.append(')');
  for (  Entry<String,String> struct : structs.entrySet()) {
    body.append("    struct " + struct.getKey() + " "+ struct.getValue()+ ";\n");
  }
  if (functionType.getReturnType() instanceof StructureType) {
    body.append("    *((" + loReturnType + "*)ret) = (("+ loSignature+ ") target)("+ args+ ");\n");
  }
 else   if (functionType.getReturnType() != Type.VOID) {
    body.append("    return ((" + loSignature + ") target)("+ args+ ");\n");
  }
 else {
    body.append("    ((" + loSignature + ") target)("+ args+ ");\n");
  }
  body.append("}\n");
  return hiSignature.toString() + body.toString();
}
