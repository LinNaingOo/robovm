{
  TestSSLContext testSSLContext=TestSSLContext.create();
  server.useHttps(testSSLContext.serverContext.getSocketFactory(),false);
  server.enqueue(new MockResponse().setSocketPolicy(SocketPolicy.FAIL_HANDSHAKE));
  server.enqueue(new MockResponse().setBody("This required a 2nd handshake"));
  server.play();
  HttpsURLConnection connection=(HttpsURLConnection)server.getUrl("/").openConnection();
  connection.setSSLSocketFactory(testSSLContext.clientContext.getSocketFactory());
  assertEquals("This required a 2nd handshake",readAscii(connection.getInputStream(),Integer.MAX_VALUE));
  RecordedRequest first=server.takeRequest();
  assertEquals(0,first.getSequenceNumber());
  RecordedRequest retry=server.takeRequest();
  assertEquals(0,retry.getSequenceNumber());
  assertEquals("SSLv3",retry.getSslProtocol());
}
