{
  int n=512 * 1024;
  server.setBodyLimit(0);
  server.enqueue(new MockResponse());
  server.play();
  HttpURLConnection conn=(HttpURLConnection)server.getUrl("/").openConnection();
  conn.setDoOutput(true);
  conn.setRequestMethod("POST");
  if (uploadKind == TransferKind.CHUNKED) {
    conn.setChunkedStreamingMode(-1);
  }
 else {
    conn.setFixedLengthStreamingMode(n);
  }
  OutputStream out=conn.getOutputStream();
  if (writeKind == WriteKind.BYTE_BY_BYTE) {
    for (int i=0; i < n; ++i) {
      out.write('x');
    }
  }
 else {
    byte[] buf=new byte[writeKind == WriteKind.SMALL_BUFFERS ? 256 : 64 * 1024];
    Arrays.fill(buf,(byte)'x');
    for (int i=0; i < n; i+=buf.length) {
      out.write(buf,0,Math.min(buf.length,n - i));
    }
  }
  out.close();
  assertEquals(200,conn.getResponseCode());
  RecordedRequest request=server.takeRequest();
  assertEquals(n,request.getBodySize());
  if (uploadKind == TransferKind.CHUNKED) {
    assertTrue(request.getChunkSizes().size() > 0);
  }
 else {
    assertTrue(request.getChunkSizes().isEmpty());
  }
}
