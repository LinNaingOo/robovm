{
  reachableNodes.clear();
  ClassNode classNode=getClassNode(clazz.getInternalName());
  if (root) {
    roots.add(classNode);
  }
  ClazzInfo ci=clazz.getClazzInfo();
  for (  Dependency dep : ci.getDependencies()) {
    if (dep instanceof InvokeMethodDependency) {
      InvokeMethodDependency mdep=(InvokeMethodDependency)dep;
      classNode.addEgde(getMethodNode(mdep),mdep.isWeak());
    }
 else     if (dep instanceof SuperMethodDependency) {
      SuperMethodDependency mdep=(SuperMethodDependency)dep;
      classNode.addEgde(getMethodNode(mdep),mdep.isWeak());
    }
 else {
      classNode.addEgde(getClassNode(dep.getClassName()),dep.isWeak());
    }
  }
  for (  MethodInfo mi : ci.getMethods()) {
    boolean strong=root || mi.isCallback() || (!mi.isStatic() && "<init>".equals(mi.getName()))|| (mi.isStatic() && "<clinit>".equals(mi.getName()) && "()V".equals(mi.getDesc()))|| (ci.isEnum() && mi.isStatic() && "values".equals(mi.getName())&& mi.getDesc().equals("()[L" + clazz.getInternalName() + ";"))|| (ci.isStruct() && mi.isStatic() && "sizeOf".equals(mi.getName())&& "()I".equals(mi.getDesc()));
    MethodNode methodNode=getMethodNode(clazz,mi);
    classNode.addEgde(methodNode,!strong);
    methodNode.addEgde(classNode,false);
    for (    Dependency dep : mi.getDependencies()) {
      if (dep instanceof InvokeMethodDependency) {
        InvokeMethodDependency mdep=(InvokeMethodDependency)dep;
        methodNode.addEgde(getMethodNode(mdep),mdep.isWeak());
      }
 else       if (dep instanceof SuperMethodDependency) {
        SuperMethodDependency mdep=(SuperMethodDependency)dep;
        getMethodNode(mdep).addEgde(methodNode,false);
      }
 else {
        methodNode.addEgde(getClassNode(dep.getClassName()),dep.isWeak());
      }
    }
  }
}
