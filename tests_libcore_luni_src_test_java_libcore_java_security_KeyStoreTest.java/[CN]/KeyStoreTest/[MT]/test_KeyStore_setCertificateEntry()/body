{
  for (  KeyStore keyStore : keyStores()) {
    try {
      keyStore.setCertificateEntry(null,null);
      fail(keyStore.getType());
    }
 catch (    KeyStoreException expected) {
    }
  }
  for (  KeyStore keyStore : keyStores()) {
    populate(keyStore);
    try {
      keyStore.setCertificateEntry(null,null);
      fail(keyStore.getType());
    }
 catch (    Exception e) {
      if (e.getClass() != NullPointerException.class && e.getClass() != KeyStoreException.class) {
        throw e;
      }
    }
    if (isReadOnly(keyStore)) {
      try {
        assertNull(keyStore.getCertificate(ALIAS_CERTIFICATE));
        keyStore.setCertificateEntry(ALIAS_CERTIFICATE,null);
        fail(keyStore.getType());
      }
 catch (      UnsupportedOperationException expected) {
      }
      continue;
    }
    if (isCertificateEnabled(keyStore)) {
      assertCertificate(keyStore.getCertificate(ALIAS_CERTIFICATE));
      try {
        int size=keyStore.size();
        keyStore.setCertificateEntry(ALIAS_CERTIFICATE,null);
        assertNull(keyStore.getType(),keyStore.getCertificate(ALIAS_CERTIFICATE));
        assertEquals(keyStore.getType(),size,keyStore.size());
        assertTrue(keyStore.getType(),keyStore.isCertificateEntry(ALIAS_CERTIFICATE));
        assertTrue(keyStore.getType(),Collections.list(keyStore.aliases()).contains(ALIAS_CERTIFICATE));
      }
 catch (      NullPointerException expectedSometimes) {
        if (!("PKCS12".equalsIgnoreCase(keyStore.getType()) && "BC".equalsIgnoreCase(keyStore.getProvider().getName())) && !"AndroidKeyStore".equalsIgnoreCase(keyStore.getType())) {
          throw expectedSometimes;
        }
      }
    }
 else {
      try {
        keyStore.setCertificateEntry(ALIAS_CERTIFICATE,null);
        fail(keyStore.getType());
      }
 catch (      KeyStoreException expected) {
      }
    }
  }
  for (  KeyStore keyStore : keyStores()) {
    if (!isCertificateEnabled(keyStore)) {
      continue;
    }
    clearKeyStore(keyStore);
    assertNull(keyStore.getCertificate(ALIAS_CERTIFICATE));
    if (isReadOnly(keyStore)) {
      try {
        setCertificate(keyStore);
        fail(keyStore.getType());
      }
 catch (      UnsupportedOperationException expected) {
      }
      continue;
    }
    setCertificate(keyStore);
    assertCertificate(keyStore.getCertificate(ALIAS_CERTIFICATE));
  }
  for (  KeyStore keyStore : keyStores()) {
    if (!isCertificateEnabled(keyStore)) {
      continue;
    }
    populate(keyStore);
    if (isReadOnly(keyStore)) {
      assertNull(keyStore.getCertificate(ALIAS_CERTIFICATE));
      assertNull(keyStore.getCertificate(ALIAS_ALT_CASE_CERTIFICATE));
    }
 else     if (isCaseSensitive(keyStore)) {
      assertCertificate(keyStore.getCertificate(ALIAS_CERTIFICATE));
      assertNull(keyStore.getCertificate(ALIAS_ALT_CASE_CERTIFICATE));
      setCertificate(keyStore,ALIAS_ALT_CASE_CERTIFICATE,getPrivateKey2().getCertificate());
      assertCertificate(keyStore.getCertificate(ALIAS_CERTIFICATE));
      assertCertificate2(keyStore.getCertificate(ALIAS_ALT_CASE_CERTIFICATE));
    }
 else {
      assertCertificate(keyStore.getCertificate(ALIAS_CERTIFICATE));
      assertCertificate(keyStore.getCertificate(ALIAS_ALT_CASE_CERTIFICATE));
      setCertificate(keyStore,ALIAS_ALT_CASE_CERTIFICATE,getPrivateKey2().getCertificate());
      assertCertificate2(keyStore.getCertificate(ALIAS_CERTIFICATE));
      assertCertificate2(keyStore.getCertificate(ALIAS_ALT_CASE_CERTIFICATE));
    }
  }
}
