{
  for (  KeyStore keyStore : keyStores()) {
    try {
      keyStore.getKey(null,null);
      fail(keyStore.getType());
    }
 catch (    KeyStoreException expected) {
    }
  }
  for (  KeyStore keyStore : keyStores()) {
    populate(keyStore);
    try {
      keyStore.getKey(null,null);
      fail(keyStore.getType());
    }
 catch (    Exception e) {
      if (e.getClass() != NullPointerException.class && e.getClass() != IllegalArgumentException.class) {
        throw e;
      }
    }
    try {
      keyStore.getKey(null,PASSWORD_KEY);
      fail(keyStore.getType());
    }
 catch (    Exception e) {
      if (e.getClass() != NullPointerException.class && e.getClass() != IllegalArgumentException.class && e.getClass() != KeyStoreException.class) {
        throw e;
      }
    }
    assertNull(keyStore.getKey("",null));
    assertNull(keyStore.getKey("",PASSWORD_KEY));
    if (isReadOnly(keyStore)) {
      assertNull(keyStore.getKey(ALIAS_PRIVATE,PASSWORD_KEY));
    }
 else {
      if (isKeyPasswordSupported(keyStore)) {
        assertPrivateKey(keyStore.getKey(ALIAS_PRIVATE,PASSWORD_KEY));
      }
      if (isNullPasswordAllowed(keyStore)) {
        assertPrivateKey(keyStore.getKey(ALIAS_NO_PASSWORD_PRIVATE,null));
      }
      if (isSecretKeyEnabled(keyStore)) {
        assertSecretKey(keyStore.getKey(ALIAS_SECRET,PASSWORD_KEY));
      }
 else {
        assertNull(keyStore.getKey(ALIAS_SECRET,PASSWORD_KEY));
      }
    }
    if (isCaseSensitive(keyStore) || isReadOnly(keyStore)) {
      assertNull(keyStore.getKey(ALIAS_ALT_CASE_PRIVATE,PASSWORD_KEY));
      assertNull(keyStore.getKey(ALIAS_ALT_CASE_NO_PASSWORD_PRIVATE,PASSWORD_KEY));
      assertNull(keyStore.getKey(ALIAS_ALT_CASE_SECRET,PASSWORD_KEY));
    }
 else {
      if (isKeyPasswordSupported(keyStore)) {
        assertPrivateKey(keyStore.getKey(ALIAS_ALT_CASE_PRIVATE,PASSWORD_KEY));
      }
      if (isNullPasswordAllowed(keyStore)) {
        assertPrivateKey(keyStore.getKey(ALIAS_ALT_CASE_NO_PASSWORD_PRIVATE,null));
      }
      if (isSecretKeyEnabled(keyStore)) {
        assertSecretKey(keyStore.getKey(ALIAS_ALT_CASE_SECRET,PASSWORD_KEY));
      }
    }
    if (isKeyPasswordSupported(keyStore) && isKeyPasswordIgnored(keyStore)) {
      assertPrivateKey(keyStore.getKey(ALIAS_PRIVATE,null));
    }
 else {
      if (isReadOnly(keyStore)) {
        assertNull(keyStore.getKey(ALIAS_PRIVATE,null));
      }
 else       if (isKeyPasswordSupported(keyStore)) {
        try {
          keyStore.getKey(ALIAS_PRIVATE,null);
          fail(keyStore.getType());
        }
 catch (        Exception e) {
          if (e.getClass() != UnrecoverableKeyException.class && e.getClass() != IllegalArgumentException.class) {
            throw e;
          }
        }
      }
    }
    if (isReadOnly(keyStore)) {
      assertNull(keyStore.getKey(ALIAS_SECRET,null));
    }
 else     if (isSecretKeyEnabled(keyStore)) {
      try {
        keyStore.getKey(ALIAS_SECRET,null);
        fail(keyStore.getType());
      }
 catch (      Exception e) {
        if (e.getClass() != UnrecoverableKeyException.class && e.getClass() != IllegalArgumentException.class) {
          throw e;
        }
      }
    }
    if (isReadOnly(keyStore)) {
      assertNull(keyStore.getKey(ALIAS_PRIVATE,null));
    }
 else     if (isKeyPasswordSupported(keyStore) && isKeyPasswordIgnored(keyStore)) {
      assertPrivateKey(keyStore.getKey(ALIAS_PRIVATE,null));
    }
 else     if (isKeyPasswordSupported(keyStore)) {
      try {
        keyStore.getKey(ALIAS_PRIVATE,PASSWORD_BAD);
        fail(keyStore.getType());
      }
 catch (      UnrecoverableKeyException expected) {
      }
    }
    if (isReadOnly(keyStore)) {
      assertNull(keyStore.getKey(ALIAS_SECRET,PASSWORD_BAD));
    }
 else     if (isSecretKeyEnabled(keyStore)) {
      try {
        keyStore.getKey(ALIAS_SECRET,PASSWORD_BAD);
        fail(keyStore.getType());
      }
 catch (      UnrecoverableKeyException expected) {
      }
    }
  }
}
