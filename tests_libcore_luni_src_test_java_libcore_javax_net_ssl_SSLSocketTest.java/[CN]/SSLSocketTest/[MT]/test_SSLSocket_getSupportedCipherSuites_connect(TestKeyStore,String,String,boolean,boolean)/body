{
  String clientToServerString="this is sent from the client to the server...";
  String serverToClientString="... and this from the server to the client";
  byte[] clientToServer=clientToServerString.getBytes();
  byte[] serverToClient=serverToClientString.getBytes();
  TestSSLContext c=TestSSLContext.create(testKeyStore,testKeyStore,clientProvider,serverProvider);
  String[] cipherSuites;
  if (clientProvider.equals(serverProvider)) {
    cipherSuites=c.clientContext.getSocketFactory().getSupportedCipherSuites();
  }
 else {
    String[] clientSuites=c.clientContext.getSocketFactory().getSupportedCipherSuites();
    String[] serverSuites=c.serverContext.getSocketFactory().getSupportedCipherSuites();
    Set<String> ccs=new HashSet<String>(Arrays.asList(clientSuites));
    Set<String> scs=new HashSet<String>(Arrays.asList(serverSuites));
    Set<String> cs=new HashSet<String>(ccs);
    cs.retainAll(scs);
    cipherSuites=cs.toArray(new String[cs.size()]);
  }
  for (  String cipherSuite : cipherSuites) {
    boolean errorExpected=StandardNames.IS_RI && cipherSuite.endsWith("_SHA256");
    try {
      if (cipherSuite.equals(StandardNames.CIPHER_SUITE_SECURE_RENEGOTIATION)) {
        continue;
      }
      if (cipherSuite.startsWith("TLS_KRB5_")) {
        continue;
      }
      String[] clientCipherSuiteArray=(clientSecureRenegotiation ? new String[]{cipherSuite,StandardNames.CIPHER_SUITE_SECURE_RENEGOTIATION} : new String[]{cipherSuite});
      String[] serverCipherSuiteArray=(serverSecureRenegotiation ? new String[]{cipherSuite,StandardNames.CIPHER_SUITE_SECURE_RENEGOTIATION} : new String[]{cipherSuite});
      SSLSocket[] pair=TestSSLSocketPair.connect(c,clientCipherSuiteArray,serverCipherSuiteArray);
      SSLSocket server=pair[0];
      SSLSocket client=pair[1];
      server.getOutputStream().write(serverToClient);
      client.getOutputStream().write(clientToServer);
      byte[] clientFromServer=new byte[serverToClient.length + 1];
      byte[] serverFromClient=new byte[clientToServer.length + 1];
      int readFromServer=client.getInputStream().read(clientFromServer);
      int readFromClient=server.getInputStream().read(serverFromClient);
      assertEquals(serverToClient.length,readFromServer);
      assertEquals(clientToServer.length,readFromClient);
      assertEquals(clientToServerString,new String(serverFromClient,0,readFromClient));
      assertEquals(serverToClientString,new String(clientFromServer,0,readFromServer));
      client.close();
      server.close();
      assertFalse(errorExpected);
    }
 catch (    Exception maybeExpected) {
      if (!errorExpected) {
        throw new Exception("Problem trying to connect cipher suite " + cipherSuite + " client="+ clientProvider+ " server="+ serverProvider,maybeExpected);
      }
    }
  }
  c.close();
}
