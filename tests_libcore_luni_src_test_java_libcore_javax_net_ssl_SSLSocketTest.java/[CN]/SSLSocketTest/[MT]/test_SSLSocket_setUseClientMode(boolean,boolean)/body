{
  TestSSLContext c=TestSSLContext.create();
  SSLSocket client=(SSLSocket)c.clientContext.getSocketFactory().createSocket(c.host,c.port);
  final SSLSocket server=(SSLSocket)c.serverSocket.accept();
  ExecutorService executor=Executors.newSingleThreadExecutor();
  Future<IOException> future=executor.submit(new Callable<IOException>(){
    @Override public IOException call() throws Exception {
      try {
        if (!serverClientMode) {
          server.setSoTimeout(1 * 1000);
        }
        server.setUseClientMode(serverClientMode);
        server.startHandshake();
        return null;
      }
 catch (      SSLHandshakeException e) {
        return e;
      }
catch (      SocketTimeoutException e) {
        return e;
      }
    }
  }
);
  executor.shutdown();
  if (!clientClientMode) {
    client.setSoTimeout(1 * 1000);
  }
  client.setUseClientMode(clientClientMode);
  client.startHandshake();
  IOException ioe=future.get();
  if (ioe != null) {
    throw ioe;
  }
  client.close();
  server.close();
  c.close();
}
