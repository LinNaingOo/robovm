{
  TestSSLContext c=TestSSLContext.create();
  SSLSocket client=(SSLSocket)c.clientContext.getSocketFactory().createSocket(c.host,c.port);
  final SSLSocket server=(SSLSocket)c.serverSocket.accept();
  ExecutorService executor=Executors.newSingleThreadExecutor();
  Future<Void> future=executor.submit(new Callable<Void>(){
    @Override public Void call() throws Exception {
      try {
        server.startHandshake();
        fail();
      }
 catch (      SSLException expected) {
      }
      return null;
    }
  }
);
  executor.shutdown();
  client.setEnableSessionCreation(false);
  try {
    client.startHandshake();
    fail();
  }
 catch (  SSLException expected) {
  }
  future.get();
  client.close();
  server.close();
  c.close();
}
