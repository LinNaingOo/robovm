{
  TestSSLContext c=TestSSLContext.create();
  final Socket underlying=new Socket(c.host,c.port);
  final SSLSocket wrapping=(SSLSocket)c.clientContext.getSocketFactory().createSocket(underlying,c.host.getHostName(),c.port,false);
  ExecutorService executor=Executors.newSingleThreadExecutor();
  Future<Void> clientFuture=executor.submit(new Callable<Void>(){
    @Override public Void call() throws Exception {
      wrapping.startHandshake();
      wrapping.getOutputStream().write(42);
      underlying.close();
      wrapping.close();
      return null;
    }
  }
);
  executor.shutdown();
  SSLSocket server=(SSLSocket)c.serverSocket.accept();
  server.startHandshake();
  server.getInputStream().read();
  clientFuture.get();
  server.close();
}
