{
  String test="0123456789";
  String test1=new String("0123456789");
  String test2=new String("0123456780");
  String offset=new String("xxx0123456789yyy");
  String sub=offset.substring(3,13);
  String str32="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";
  String str33="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy";
  String lc="abcdefg";
  String uc="ABCDEFG";
  Object blah=new Object();
  for (int i=0; i < 100; i++) {
    String y=lc.toUpperCase();
    Assert.assertTrue(y.equals(uc));
  }
  Assert.assertEquals(str32.compareTo(str33),-1);
  Assert.assertEquals(str33.compareTo(str32),1);
  Assert.assertTrue(test.equals(test));
  Assert.assertTrue(test.equals(test1));
  Assert.assertFalse(test.equals(test2));
  Assert.assertEquals(test.compareTo(test1),0);
  Assert.assertTrue(test1.compareTo(test2) > 0);
  Assert.assertTrue(test2.compareTo(test1) < 0);
  Assert.assertEquals(test.compareTo(sub),0);
  Assert.assertEquals(sub.compareTo(test),0);
  Assert.assertTrue(test.equals(sub));
  Assert.assertTrue(sub.equals(test));
  Assert.assertFalse(offset.equals(sub));
  Assert.assertFalse(sub.equals(offset));
  Assert.assertFalse(test.equals(blah));
  try {
    test.compareTo(null);
    Assert.fail("didn't get expected npe");
  }
 catch (  NullPointerException npe) {
  }
  Assert.assertFalse(test.equals(null));
  test=test.substring(1);
  Assert.assertTrue(test.equals("123456789"));
  Assert.assertFalse(test.equals(test1));
  test=test.substring(1);
  Assert.assertTrue(test.equals("23456789"));
  test=test.substring(1);
  Assert.assertTrue(test.equals("3456789"));
  test=test.substring(1);
  Assert.assertTrue(test.equals("456789"));
  test=test.substring(3,5);
  Assert.assertTrue(test.equals("78"));
  test="this/is/a/path";
  String[] strings=test.split("/");
  Assert.assertEquals(4,strings.length);
  Assert.assertEquals("this is a path",test.replaceAll("/"," "));
  Assert.assertEquals("this is a path",test.replace("/"," "));
}
