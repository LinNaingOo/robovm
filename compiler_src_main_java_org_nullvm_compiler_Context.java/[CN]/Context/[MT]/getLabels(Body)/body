{
  if (labels != null) {
    return labels;
  }
  Set<Unit> labeledUnits=new HashSet<Unit>();
  PatchingChain<Unit> units=body.getUnits();
  labeledUnits.add(units.getFirst());
  for (  Unit u : units) {
    if (u instanceof GotoStmt || u instanceof IfStmt) {
      Unit target=u instanceof GotoStmt ? ((GotoStmt)u).getTarget() : ((IfStmt)u).getTarget();
      labeledUnits.add(target);
      if (u != units.getLast()) {
        labeledUnits.add(units.getSuccOf(u));
      }
    }
 else     if (hasTrap(u)) {
      if (u instanceof InvokeStmt) {
        labeledUnits.add(units.getSuccOf(u));
      }
 else       if (u instanceof DefinitionStmt) {
        DefinitionStmt stmt=(DefinitionStmt)u;
        Value leftOp=stmt.getLeftOp();
        Value rightOp=stmt.getRightOp();
        if (rightOp instanceof InvokeExpr) {
          labeledUnits.add(units.getSuccOf(u));
        }
 else         if (leftOp instanceof ArrayRef) {
        }
      }
    }
  }
  for (  Trap trap : body.getTraps()) {
    if (trap.getBeginUnit() != trap.getEndUnit()) {
      labeledUnits.add(trap.getHandlerUnit());
    }
  }
  labels=new HashMap<Unit,String>();
  for (  Unit u : units) {
    if (labeledUnits.contains(u)) {
      labels.put(u,"label" + labels.size());
    }
  }
  return labels;
}
