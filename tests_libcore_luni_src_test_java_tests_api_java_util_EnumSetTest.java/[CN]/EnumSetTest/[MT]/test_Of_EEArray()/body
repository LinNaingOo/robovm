{
  EnumWithInnerClass[] enumArray=new EnumWithInnerClass[]{EnumWithInnerClass.b,EnumWithInnerClass.c};
  EnumSet<EnumWithInnerClass> enumSet=EnumSet.of(EnumWithInnerClass.a,enumArray);
  assertEquals("Should be equal",3,enumSet.size());
  assertTrue("Should return true",enumSet.contains(EnumWithInnerClass.a));
  assertTrue("Should return true",enumSet.contains(EnumWithInnerClass.c));
  try {
    EnumSet.of(EnumWithInnerClass.a,(EnumWithInnerClass[])null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  EnumFoo[] foos={EnumFoo.a,EnumFoo.c,EnumFoo.d};
  EnumSet<EnumFoo> set=EnumSet.of(EnumFoo.c,foos);
  assertEquals("size of set should be 1",3,set.size());
  assertTrue("Should contain EnumFoo.a",set.contains(EnumFoo.a));
  assertTrue("Should contain EnumFoo.c",set.contains(EnumFoo.c));
  assertTrue("Should contain EnumFoo.d",set.contains(EnumFoo.d));
  HugeEnumWithInnerClass[] hugeEnumArray=new HugeEnumWithInnerClass[]{HugeEnumWithInnerClass.b,HugeEnumWithInnerClass.c};
  EnumSet<HugeEnumWithInnerClass> hugeEnumSet=EnumSet.of(HugeEnumWithInnerClass.a,hugeEnumArray);
  assertEquals(3,hugeEnumSet.size());
  assertTrue(hugeEnumSet.contains(HugeEnumWithInnerClass.a));
  assertTrue(hugeEnumSet.contains(HugeEnumWithInnerClass.c));
  try {
    EnumSet.of(HugeEnumWithInnerClass.a,(HugeEnumWithInnerClass[])null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  HugeEnumWithInnerClass[] huges={HugeEnumWithInnerClass.a,HugeEnumWithInnerClass.c,HugeEnumWithInnerClass.d};
  EnumSet<HugeEnumWithInnerClass> hugeSet=EnumSet.of(HugeEnumWithInnerClass.c,huges);
  assertEquals(3,hugeSet.size());
  assertTrue(hugeSet.contains(HugeEnumWithInnerClass.a));
  assertTrue(hugeSet.contains(HugeEnumWithInnerClass.c));
  assertTrue(hugeSet.contains(HugeEnumWithInnerClass.d));
}
