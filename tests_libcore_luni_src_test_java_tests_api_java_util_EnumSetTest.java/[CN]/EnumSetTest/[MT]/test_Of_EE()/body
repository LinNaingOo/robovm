{
  EnumSet<EnumWithInnerClass> enumSet=EnumSet.of(EnumWithInnerClass.a,EnumWithInnerClass.b);
  assertEquals("enumSet should have length 2:",2,enumSet.size());
  assertTrue("enumSet should contain EnumWithSubclass.a:",enumSet.contains(EnumWithInnerClass.a));
  assertTrue("enumSet should contain EnumWithSubclass.b:",enumSet.contains(EnumWithInnerClass.b));
  try {
    EnumSet.of((EnumWithInnerClass)null,EnumWithInnerClass.a);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  try {
    EnumSet.of(EnumWithInnerClass.a,(EnumWithInnerClass)null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  try {
    EnumSet.of((EnumWithInnerClass)null,(EnumWithInnerClass)null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  enumSet=EnumSet.of(EnumWithInnerClass.a,EnumWithInnerClass.a);
  assertEquals("Size of enumSet should be 1",1,enumSet.size());
  EnumSet<HugeEnumWithInnerClass> hugeEnumSet=EnumSet.of(HugeEnumWithInnerClass.a,HugeEnumWithInnerClass.b);
  assertEquals(2,hugeEnumSet.size());
  assertTrue(hugeEnumSet.contains(HugeEnumWithInnerClass.a));
  assertTrue(hugeEnumSet.contains(HugeEnumWithInnerClass.b));
  try {
    EnumSet.of((HugeEnumWithInnerClass)null,HugeEnumWithInnerClass.a);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  try {
    EnumSet.of(HugeEnumWithInnerClass.a,(HugeEnumWithInnerClass)null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  try {
    EnumSet.of((HugeEnumWithInnerClass)null,(HugeEnumWithInnerClass)null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  hugeEnumSet=EnumSet.of(HugeEnumWithInnerClass.a,HugeEnumWithInnerClass.a);
  assertEquals(1,hugeEnumSet.size());
}
