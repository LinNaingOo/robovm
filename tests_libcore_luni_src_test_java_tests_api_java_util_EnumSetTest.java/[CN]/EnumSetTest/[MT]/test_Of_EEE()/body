{
  EnumSet<EnumWithInnerClass> enumSet=EnumSet.of(EnumWithInnerClass.a,EnumWithInnerClass.b,EnumWithInnerClass.c);
  assertEquals("Size of enumSet should be 3:",3,enumSet.size());
  assertTrue("enumSet should contain EnumWithSubclass.a:",enumSet.contains(EnumWithInnerClass.a));
  assertTrue("Should return true",enumSet.contains(EnumWithInnerClass.c));
  try {
    EnumSet.of((EnumWithInnerClass)null,null,null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  enumSet=EnumSet.of(EnumWithInnerClass.a,EnumWithInnerClass.b,EnumWithInnerClass.b);
  assertEquals("enumSet should contain 2 elements:",2,enumSet.size());
  EnumSet<HugeEnumWithInnerClass> hugeEnumSet=EnumSet.of(HugeEnumWithInnerClass.a,HugeEnumWithInnerClass.b,HugeEnumWithInnerClass.c);
  assertEquals(3,hugeEnumSet.size());
  assertTrue(hugeEnumSet.contains(HugeEnumWithInnerClass.a));
  assertTrue(hugeEnumSet.contains(HugeEnumWithInnerClass.c));
  try {
    EnumSet.of((HugeEnumWithInnerClass)null,null,null);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException npe) {
  }
  hugeEnumSet=EnumSet.of(HugeEnumWithInnerClass.a,HugeEnumWithInnerClass.b,HugeEnumWithInnerClass.b);
  assertEquals(2,hugeEnumSet.size());
}
