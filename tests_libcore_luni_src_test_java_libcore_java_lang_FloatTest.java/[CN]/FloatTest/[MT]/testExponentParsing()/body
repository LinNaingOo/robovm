{
  String[] strings={"1.0e","1.0e+","1.0e-","1.0e++1","1.0e+-1","1.0e-+1","1.0e--1"};
  for (  String string : strings) {
    try {
      Float.parseFloat(string);
      fail(string);
    }
 catch (    NumberFormatException expected) {
    }
  }
  assertEquals(1.0e-45f,Float.parseFloat("1.0e-45"));
  assertEquals(0.0f,Float.parseFloat("1.0e-46"));
  assertEquals(-1.0e-45f,Float.parseFloat("-1.0e-45"));
  assertEquals(-0.0f,Float.parseFloat("-1.0e-46"));
  assertEquals(1.0e+38f,Float.parseFloat("1.0e+38"));
  assertEquals(Float.POSITIVE_INFINITY,Float.parseFloat("1.0e+39"));
  assertEquals(-1.0e+38f,Float.parseFloat("-1.0e+38"));
  assertEquals(Float.NEGATIVE_INFINITY,Float.parseFloat("-1.0e+39"));
  assertEquals(Float.POSITIVE_INFINITY,Float.parseFloat("1.0e+9999999999"));
  assertEquals(Float.NEGATIVE_INFINITY,Float.parseFloat("-1.0e+9999999999"));
  assertEquals(0.0f,Float.parseFloat("1.0e-9999999999"));
  assertEquals(-0.0f,Float.parseFloat("-1.0e-9999999999"));
  assertEquals(Float.POSITIVE_INFINITY,Float.parseFloat("320.0E+2147483647"));
  assertEquals(-0.0f,Float.parseFloat("-1.4E-2147483314"));
}
