{
  if (radix < Character.MIN_RADIX || radix > Character.MAX_RADIX) {
    radix=10;
  }
  if (l == 0) {
    return "0";
  }
  int count=2;
  long j=l;
  boolean negative=l < 0;
  if (!negative) {
    count=1;
    j=-l;
  }
  while ((l/=radix) != 0) {
    count++;
  }
  char[] buffer=new char[count];
  do {
    int ch=0 - (int)(j % radix);
    if (ch > 9) {
      ch=ch - 10 + 'a';
    }
 else {
      ch+='0';
    }
    buffer[--count]=(char)ch;
  }
 while ((j/=radix) != 0);
  if (negative) {
    buffer[0]='-';
  }
  return new String(0,buffer.length,buffer);
}
