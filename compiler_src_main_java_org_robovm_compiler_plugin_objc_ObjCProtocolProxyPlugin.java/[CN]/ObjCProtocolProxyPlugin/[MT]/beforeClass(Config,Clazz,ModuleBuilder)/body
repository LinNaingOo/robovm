{
  init();
  SootClass sootClass=clazz.getSootClass();
  if (isObjCProtocol(sootClass)) {
    try {
      String proxyInternalName=clazz.getInternalName() + PROXY_CLASS_NAME_SUFFIX;
      ArrayList<String> interfazes=new ArrayList<>();
      collectProxyInterfaceInternalNames(sootClass,interfazes);
      ClassWriter cw=new ClassWriter(ClassWriter.COMPUTE_MAXS);
      cw.visit(51,ACC_SUPER + ACC_FINAL + ACC_SYNTHETIC+ ACC_PUBLIC,proxyInternalName,null,getProxySuperclassInternalName(sootClass),new String[]{clazz.getInternalName()});
      generateProxyMethods(config,interfazes,cw);
      cw.visitEnd();
      File f=clazz.getPath().getGeneratedClassFile(proxyInternalName);
      FileUtils.writeByteArrayToFile(f,cw.toByteArray());
      f.setLastModified(clazz.lastModified());
      clazz.getClazzInfo().addDependency(proxyInternalName);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
}
