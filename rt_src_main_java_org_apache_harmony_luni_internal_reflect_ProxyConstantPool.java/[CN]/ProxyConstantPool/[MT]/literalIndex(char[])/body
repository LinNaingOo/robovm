{
  int index;
  if ((index=UTF8Cache.get(utf8Constant)) < 0) {
    writeU1(Utf8Tag);
    int savedCurrentOffset=currentOffset;
    if (currentOffset + 2 >= poolContent.length) {
      int length=poolContent.length;
      System.arraycopy(poolContent,0,(poolContent=new byte[length + CONSTANTPOOL_GROW_SIZE]),0,length);
    }
    currentOffset+=2;
    int length=0;
    for (int i=0; i < utf8Constant.length; i++) {
      char current=utf8Constant[i];
      if ((current >= 0x0001) && (current <= 0x007F)) {
        writeU1(current);
        length++;
      }
 else       if (current > 0x07FF) {
        length+=3;
        writeU1(0xE0 | ((current >> 12) & 0x0F));
        writeU1(0x80 | ((current >> 6) & 0x3F));
        writeU1(0x80 | (current & 0x3F));
      }
 else {
        length+=2;
        writeU1(0xC0 | ((current >> 6) & 0x1F));
        writeU1(0x80 | (current & 0x3F));
      }
    }
    if (length >= 65535) {
      currentOffset=savedCurrentOffset - 1;
      return -1;
    }
    index=UTF8Cache.put(utf8Constant,currentIndex++);
    poolContent[savedCurrentOffset]=(byte)(length >> 8);
    poolContent[savedCurrentOffset + 1]=(byte)length;
  }
  return index;
}
