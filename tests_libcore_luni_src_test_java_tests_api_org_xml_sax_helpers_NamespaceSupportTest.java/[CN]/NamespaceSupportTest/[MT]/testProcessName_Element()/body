{
  String[] parts=new String[3];
  assertNotNull("Test 1: Non-null value expected.",ns.processName("ak:hello",parts,false));
  assertEquals("Test 2: Incorrect namespace URI;",marketUri,parts[0]);
  assertEquals("Test 3: Incorrect local name;","hello",parts[1]);
  assertEquals("Test 4: Incorrect raw name;","ak:hello",parts[2]);
  assertNotNull("Test 5: Non-null value expected.",ns.processName("bk:",parts,false));
  assertEquals("Test 6: Incorrect namespace URI;",marketUri,parts[0]);
  assertEquals("Test 7: Incorrect local name;","",parts[1]);
  assertEquals("Test 8: Incorrect raw name;","bk:",parts[2]);
  assertNotNull("Test 9: Non-null value expected.",ns.processName("world",parts,false));
  assertEquals("Test 10: Incorrect namespace URI;",defaultUri,parts[0]);
  assertEquals("Test 11: Incorrect local name;","world",parts[1]);
  assertEquals("Test 12: Incorrect raw name;","world",parts[2]);
  assertNull("Test 13: Null expected for undeclared prefix.",ns.processName("ck:lorem",parts,false));
  assertNull("Test 14: Null expected for xmlns prefix.",ns.processName("xmlns:ipsum",parts,false));
  ns=new NamespaceSupport();
  ns.pushContext();
  assertNotNull("Test 15: Non-null value expected.",ns.processName("world",parts,false));
  assertEquals("Test 16: Incorrect namespace URI;","",parts[0]);
  assertEquals("Test 17: Incorrect local name;","world",parts[1]);
  assertEquals("Test 18: Incorrect raw name;","world",parts[2]);
}
