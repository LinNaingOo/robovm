{
  if (handle == 0L) {
    return null;
  }
  T o=getPeerObject(handle);
  if (o != null && o.getHandle() != 0) {
    if (forceType && !cls.isAssignableFrom(o.getClass())) {
      throw new IllegalStateException("The peer object type " + o.getClass().getName() + " is not compatible with the forced type "+ cls.getName());
    }
    return o;
  }
  ObjCClass fallback=ObjCClass.getByType(cls);
  ObjCClass objCClass=forceType ? ObjCClass.getByType(cls) : ObjCClass.getFromObject(handle,fallback);
  Class<T> c=(Class<T>)objCClass.getType();
  if (c == ObjCClass.class) {
    return (T)objCClass;
  }
  o=VM.allocateObject(c);
  o.setHandle(handle);
  AssociatedObjectHelper.setPeerObject(handle,o);
  if (objCClass.isCustom()) {
    VM.setBoolean(VM.getObjectAddress(o) + CUSTOM_CLASS_OFFSET,true);
  }
  o.afterMarshaled();
  return o;
}
