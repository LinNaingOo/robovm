{
  this.declaringClass=declaringClass;
  this.name=name;
  List l=new ArrayList();
  l.addAll(parameterTypes);
  this.parameterTypes=Collections.unmodifiableList(l);
  this.returnType=returnType;
  this.isStatic=isStatic;
  if (declaringClass == null)   throw new RuntimeException("Attempt to create SootMethodRef with null class");
  if (name == null)   throw new RuntimeException("Attempt to create SootMethodRef with null name");
  if (parameterTypes == null)   throw new RuntimeException("Attempt to create SootMethodRef with null parameterTypes");
  if (returnType == null)   throw new RuntimeException("Attempt to create SootMethodRef with null returnType");
  if (declaringClass.getName().equals("java.dyn.InvokeDynamic") && !isStatic) {
    throw new IllegalArgumentException("invokedynamic method references must be static!");
  }
}
