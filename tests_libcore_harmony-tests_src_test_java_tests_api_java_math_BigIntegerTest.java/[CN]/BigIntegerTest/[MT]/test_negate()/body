{
  assertTrue("Single negation of zero did not result in zero",zero.negate().equals(zero));
  assertTrue("Single negation resulted in original nonzero number",!aZillion.negate().equals(aZillion));
  assertTrue("Double negation did not result in original number",aZillion.negate().negate().equals(aZillion));
  assertTrue("0.neg",zero.negate().equals(zero));
  assertTrue("1.neg",one.negate().equals(minusOne));
  assertTrue("2.neg",two.negate().equals(minusTwo));
  assertTrue("-1.neg",minusOne.negate().equals(one));
  assertTrue("-2.neg",minusTwo.negate().equals(two));
  assertTrue("0x62EB40FEF85AA9EBL*2.neg",BigInteger.valueOf(0x62EB40FEF85AA9EBL * 2).negate().equals(BigInteger.valueOf(-0x62EB40FEF85AA9EBL * 2)));
  for (int i=0; i < 200; i++) {
    BigInteger midbit=zero.setBit(i);
    BigInteger negate=midbit.negate();
    assertTrue("negate negate",negate.negate().equals(midbit));
    assertTrue("neg fails on bit " + i,midbit.negate().add(midbit).equals(zero));
  }
}
