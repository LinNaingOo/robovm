{
  try {
    largePos.divideAndRemainder(zero);
    fail("ArithmeticException expected");
  }
 catch (  ArithmeticException e) {
  }
  try {
    bi1.divideAndRemainder(zero);
    fail("ArithmeticException expected");
  }
 catch (  ArithmeticException e) {
  }
  try {
    bi3.negate().divideAndRemainder(zero);
    fail("ArithmeticException expected");
  }
 catch (  ArithmeticException e) {
  }
  try {
    zero.divideAndRemainder(zero);
    fail("ArithmeticException expected");
  }
 catch (  ArithmeticException e) {
  }
}
