{
  Class<T> clazz=getDeclaringClass();
  int clazzModifiers=clazz.getModifiers();
  if (clazz.isArray() || Modifier.isAbstract(clazzModifiers) || Modifier.isInterface(clazzModifiers)|| clazz.isPrimitive()) {
    throw new InstantiationException("class " + clazz.getName() + " cannot be instantiated");
  }
  if (args == null) {
    args=EmptyArray.OBJECT;
  }
  Class<?>[] pTypes=getParameterTypes(false);
  if (args.length != pTypes.length) {
    throw new IllegalArgumentException("wrong number of arguments");
  }
  if (!flag) {
    if (!checkAccessibleFast(this)) {
      Class<?>[] callers=VM.getStackClasses(0,2);
      Class<?> caller=callers[0] == Class.class ? callers[1] : callers[0];
      if (!checkAccessible(caller,this)) {
        throw new IllegalAccessException(String.format("Attempt to access constructor %s(%s) from class %s",clazz.getName(),toString(parameterTypes),caller.getName()));
      }
    }
  }
  return (T)internalNewInstance(method,pTypes,args);
}
