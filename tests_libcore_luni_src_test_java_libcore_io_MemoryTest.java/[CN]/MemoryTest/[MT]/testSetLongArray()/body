{
  long[] values={0x1020304050607080L,0xffeeddccbbaa9988L};
  long[] swappedValues=new long[values.length];
  for (int i=0; i < values.length; ++i) {
    swappedValues[i]=Long.reverseBytes(values[i]);
  }
  int scale=SizeOf.LONG;
  VMRuntime runtime=VMRuntime.getRuntime();
  byte[] array=(byte[])runtime.newNonMovableArray(byte.class,scale * values.length + 1);
  int base_ptr=(int)runtime.addressOf(array);
  for (int ptr_offset=0; ptr_offset < 2; ++ptr_offset) {
    int ptr=base_ptr + ptr_offset;
    Arrays.fill(array,(byte)0);
    Memory.pokeLongArray(ptr,values,0,values.length,false);
    assertLongsEqual(values,ptr,false);
    assertLongsEqual(swappedValues,ptr,true);
    Memory.pokeLongArray(ptr,values,0,values.length,true);
    assertLongsEqual(values,ptr,true);
    assertLongsEqual(swappedValues,ptr,false);
    for (int i=0; i < values.length; ++i) {
      Memory.pokeLongArray(ptr + i * scale,values,i,1,true);
    }
    assertLongsEqual(values,ptr,true);
    assertLongsEqual(swappedValues,ptr,false);
  }
}
