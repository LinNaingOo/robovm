{
  if (entry == null) {
    throw new KeyStoreException(Messages.getString("security.39"));
  }
  if (engineContainsAlias(alias)) {
    engineDeleteEntry(alias);
  }
  if (entry instanceof KeyStore.TrustedCertificateEntry) {
    KeyStore.TrustedCertificateEntry trE=(KeyStore.TrustedCertificateEntry)entry;
    engineSetCertificateEntry(alias,trE.getTrustedCertificate());
    return;
  }
  char[] passW=null;
  if (protParam instanceof KeyStore.PasswordProtection) {
    try {
      passW=((KeyStore.PasswordProtection)protParam).getPassword();
    }
 catch (    IllegalStateException ee) {
      throw new KeyStoreException(Messages.getString("security.36"),ee);
    }
  }
 else {
    if (protParam instanceof KeyStore.CallbackHandlerProtection) {
      try {
        passW=getPasswordFromCallBack(protParam);
      }
 catch (      Exception e) {
        throw new KeyStoreException(e);
      }
    }
 else {
      throw new KeyStoreException(Messages.getString("security.3A"));
    }
  }
  if (entry instanceof KeyStore.PrivateKeyEntry) {
    KeyStore.PrivateKeyEntry prE=(KeyStore.PrivateKeyEntry)entry;
    engineSetKeyEntry(alias,prE.getPrivateKey(),passW,prE.getCertificateChain());
    return;
  }
  if (entry instanceof KeyStore.SecretKeyEntry) {
    KeyStore.SecretKeyEntry skE=(KeyStore.SecretKeyEntry)entry;
    engineSetKeyEntry(alias,skE.getSecretKey(),passW,null);
    return;
  }
  throw new KeyStoreException(Messages.getString("security.3B",entry.toString()));
}
