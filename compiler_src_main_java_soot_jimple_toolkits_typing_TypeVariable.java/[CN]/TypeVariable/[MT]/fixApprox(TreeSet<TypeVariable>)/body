{
  if (rep != this) {
    ecr().fixApprox(workList);
    return;
  }
  if (type == null && approx != resolver.hierarchy().NULL) {
    TypeVariable element=element();
    if (element != null) {
      if (!approx.hasElement()) {
        G.v().out.println("*** " + this + " ***");
        error("Type Error(4)");
      }
      TypeNode temp=approx.element();
      if (element.approx == null) {
        element.approx=temp;
        workList.add(element);
      }
 else {
        TypeNode type=element.approx.lca(temp);
        if (type != element.approx) {
          element.approx=type;
          workList.add(element);
        }
 else         if (element.approx != resolver.hierarchy().INT) {
          type=approx.lca(element.approx.array());
          if (type != approx) {
            approx=type;
            workList.add(this);
          }
        }
      }
    }
    TypeVariable array=array();
    if (array != null && approx != resolver.hierarchy().NULL && approx != resolver.hierarchy().INT) {
      TypeNode temp=approx.array();
      if (array.approx == null) {
        array.approx=temp;
        workList.add(array);
      }
 else {
        TypeNode type=array.approx.lca(temp);
        if (type != array.approx) {
          array.approx=type;
          workList.add(array);
        }
 else {
          type=approx.lca(array.approx.element());
          if (type != approx) {
            approx=type;
            workList.add(this);
          }
        }
      }
    }
  }
  for (  TypeVariable typeVariable : parents) {
    TypeVariable parent=typeVariable.ecr();
    if (parent.approx == null) {
      parent.approx=approx;
      workList.add(parent);
    }
 else {
      TypeNode type=parent.approx.lca(approx);
      if (type != parent.approx) {
        parent.approx=type;
        workList.add(parent);
      }
    }
  }
  if (type != null) {
    approx=type;
  }
}
