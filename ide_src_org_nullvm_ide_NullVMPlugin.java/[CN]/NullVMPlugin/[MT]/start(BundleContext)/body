{
  super.start(context);
  plugin=this;
  console=new MessageConsole("NullVM Console",null);
  console.setWaterMarks(40000,80000);
  ConsolePlugin.getDefault().getConsoleManager().addConsoles(new IConsole[]{console});
  Display display=getDisplay();
  debugStream=console.newMessageStream();
  final Color debugColor=new Color(display,0x99,0x99,0x99);
  infoStream=console.newMessageStream();
  final Color infoColor=new Color(display,0x00,0xB0,0x00);
  warnStream=console.newMessageStream();
  final Color warnColor=new Color(display,0xFF,0x00,0xFF);
  errorStream=console.newMessageStream();
  final Color errorColor=new Color(display,0xFF,0x00,0x00);
  display.asyncExec(new Runnable(){
    public void run(){
      debugStream.setColor(debugColor);
      infoStream.setColor(infoColor);
      warnStream.setColor(warnColor);
      errorStream.setColor(errorColor);
    }
  }
);
  String version=getBundle().getHeaders().get("Bundle-Version");
  File versionFile=new File(getMetadataDir(),"version");
  if (!versionFile.exists() || !FileUtils.readFileToString(versionFile,"UTF8").equals(version)) {
    File lib=new File(getBundledNullVMDir(),"lib");
    try {
      FileUtils.deleteDirectory(lib);
    }
 catch (    IOException ignored) {
    }
    lib.mkdirs();
    FileUtils.copyURLToFile(getBundle().getResource("/lib/nullvm-rt.jar"),new File(lib,"nullvm-rt.jar"));
    unzip(getBundle().getResource("/lib/binaries.zip"),lib);
    FileUtils.writeStringToFile(versionFile,version,"UTF8");
  }
}
