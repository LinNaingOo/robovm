{
  try {
    reader.read(new char[3],-1,0);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    reader.read(new char[3],0,-1);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    reader.read(new char[3],4,0);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    reader.read(new char[3],3,1);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    reader.read(new char[3],1,3);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    reader.read(new char[3],0,4);
    fail("Should throw IndexOutOfBoundsException");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    reader.read(null,0,0);
    fail("Should throw NullPointerException");
  }
 catch (  NullPointerException e) {
  }
  assertEquals(0,reader.read(new char[3],3,0));
  char[] chars=new char[source.length()];
  assertEquals(0,reader.read(chars,0,0));
  assertEquals(0,chars[0]);
  assertEquals(3,reader.read(chars,0,3));
  assertEquals(5,reader.read(chars,3,5));
  assertEquals(source.length() - 8,reader.read(chars,8,chars.length - 8));
  assertTrue(Arrays.equals(chars,source.toCharArray()));
  assertEquals(-1,reader.read(chars,0,chars.length));
  assertTrue(Arrays.equals(chars,source.toCharArray()));
}
