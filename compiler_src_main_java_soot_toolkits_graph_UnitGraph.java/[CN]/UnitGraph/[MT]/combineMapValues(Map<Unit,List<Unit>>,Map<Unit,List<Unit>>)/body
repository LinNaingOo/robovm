{
  Map<Unit,List<Unit>> result=new HashMap<Unit,List<Unit>>(mapA.size() * 2 + 1,0.7f);
  for (Iterator<Unit> chainIt=unitChain.iterator(); chainIt.hasNext(); ) {
    Unit unit=(Unit)chainIt.next();
    List<Unit> listA=mapA.get(unit);
    if (listA == null) {
      listA=Collections.emptyList();
    }
    List<Unit> listB=mapB.get(unit);
    if (listB == null) {
      listB=Collections.emptyList();
    }
    int resultSize=listA.size() + listB.size();
    if (resultSize == 0) {
      result.put(unit,Collections.<Unit>emptyList());
    }
 else {
      List<Unit> resultList=new ArrayList<Unit>(resultSize);
      Iterator<Unit> listIt=null;
      if (listA.size() >= listB.size()) {
        resultList.addAll(listA);
        listIt=listB.iterator();
      }
 else {
        resultList.addAll(listB);
        listIt=listA.iterator();
      }
      while (listIt.hasNext()) {
        Unit element=listIt.next();
        if (!resultList.contains(element)) {
          resultList.add(element);
        }
      }
      result.put(unit,Collections.unmodifiableList(resultList));
    }
  }
  return result;
}
