{
  Set<BigInteger> bl=new HashSet<BigInteger>(Arrays.asList(new BigInteger("077a59bcd53459601ca6907267a6dd1c",16),new BigInteger("047ecbe9fca55f7bd09eae36e10cae1e",16),new BigInteger("d8f35f4eb7872b2dab0692e315382fb0",16),new BigInteger("b0b7133ed096f9b56fae91c874bd3ac0",16),new BigInteger("9239d5348f40d1695a745470e1f23f43",16),new BigInteger("e9028b9578e415dc1a710a2b88154447",16),new BigInteger("d7558fdaf5f1105bb213282b707729a3",16),new BigInteger("f5c86af36162f13a64f54f6dc9587c06",16),new BigInteger("392a434f0e07df1f8aa305de34e0c229",16),new BigInteger("3e75ced46b693021218830ae86a82a71",16),new BigInteger("864",16),new BigInteger("827",16),new BigInteger("31da7",16)));
  String serialBlacklist=readBlacklist(path);
  if (!serialBlacklist.equals("")) {
    for (    String value : serialBlacklist.split(",")) {
      try {
        bl.add(new BigInteger(value,16));
      }
 catch (      NumberFormatException e) {
        logger.log(Level.WARNING,"Tried to blacklist invalid serial number " + value,e);
      }
    }
  }
  return Collections.unmodifiableSet(bl);
}
