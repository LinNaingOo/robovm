{
  final ServerSocket ss=new ServerSocket(0);
  new Thread(new Runnable(){
    public void run(){
      try {
        ss.accept();
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
    }
  }
).start();
  final Socket s=new Socket();
  s.connect(ss.getLocalSocketAddress());
  final ArrayList<Thread> threads=new ArrayList<Thread>();
  final List<Throwable> thrownExceptions=new CopyOnWriteArrayList<Throwable>();
  for (int i=0; i < 10; ++i) {
    Thread t=new Thread(new Runnable(){
      public void run(){
        try {
          try {
            System.err.println("read...");
            int i=s.getInputStream().read();
            fail("read returned " + i);
          }
 catch (          SocketException expected) {
            assertEquals("Socket closed",expected.getMessage());
          }
        }
 catch (        Throwable ex) {
          thrownExceptions.add(ex);
        }
      }
    }
);
    threads.add(t);
  }
  for (  Thread t : threads) {
    t.start();
  }
  new Killer(s).start();
  for (  Thread t : threads) {
    t.join();
  }
  for (  Throwable exception : thrownExceptions) {
    throw exception;
  }
}
