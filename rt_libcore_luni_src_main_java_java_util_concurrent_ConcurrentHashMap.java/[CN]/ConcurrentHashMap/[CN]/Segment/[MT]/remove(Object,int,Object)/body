{
  if (!tryLock())   scanAndLock(key,hash);
  V oldValue=null;
  try {
    HashEntry<K,V>[] tab=table;
    int index=(tab.length - 1) & hash;
    HashEntry<K,V> e=entryAt(tab,index);
    HashEntry<K,V> pred=null;
    while (e != null) {
      K k;
      HashEntry<K,V> next=e.next;
      if ((k=e.key) == key || (e.hash == hash && key.equals(k))) {
        V v=e.value;
        if (value == null || value == v || value.equals(v)) {
          if (pred == null)           setEntryAt(tab,index,next);
 else           pred.setNext(next);
          ++modCount;
          --count;
          oldValue=v;
        }
        break;
      }
      pred=e;
      e=next;
    }
  }
  finally {
    unlock();
  }
  return oldValue;
}
