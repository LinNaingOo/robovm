{
  final Segment<K,V>[] segments=this.segments;
  final int segmentCount=segments.length;
  long previousSum=0L;
  for (int retries=-1; retries < RETRIES_BEFORE_LOCK; retries++) {
    long sum=0L;
    long size=0L;
    for (int i=0; i < segmentCount; i++) {
      Segment<K,V> segment=segmentAt(segments,i);
      if (segment != null) {
        sum+=segment.modCount;
        size+=segment.count;
      }
    }
    if (sum == previousSum)     return ((size >>> 31) == 0) ? (int)size : Integer.MAX_VALUE;
    previousSum=sum;
  }
  long size=0L;
  for (int i=0; i < segmentCount; i++) {
    Segment<K,V> segment=ensureSegment(i);
    segment.lock();
    size+=segment.count;
  }
  for (int i=0; i < segmentCount; i++)   segments[i].unlock();
  return ((size >>> 31) == 0) ? (int)size : Integer.MAX_VALUE;
}
