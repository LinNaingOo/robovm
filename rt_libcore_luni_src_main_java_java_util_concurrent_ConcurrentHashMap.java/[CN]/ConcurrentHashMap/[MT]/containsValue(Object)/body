{
  if (value == null)   throw new NullPointerException();
  final Segment<K,V>[] segments=this.segments;
  long previousSum=0L;
  int lockCount=0;
  try {
    for (int retries=-1; ; retries++) {
      long sum=0L;
      for (int j=0; j < segments.length; j++) {
        Segment<K,V> segment;
        if (retries == RETRIES_BEFORE_LOCK) {
          segment=ensureSegment(j);
          segment.lock();
          lockCount++;
        }
 else {
          segment=segmentAt(segments,j);
          if (segment == null)           continue;
        }
        HashEntry<K,V>[] tab=segment.table;
        if (tab != null) {
          for (int i=0; i < tab.length; i++) {
            HashEntry<K,V> e;
            for (e=entryAt(tab,i); e != null; e=e.next) {
              V v=e.value;
              if (v != null && value.equals(v))               return true;
            }
          }
          sum+=segment.modCount;
        }
      }
      if ((retries >= 0 && sum == previousSum) || lockCount > 0)       return false;
      previousSum=sum;
    }
  }
  finally {
    for (int j=0; j < lockCount; j++)     segments[j].unlock();
  }
}
