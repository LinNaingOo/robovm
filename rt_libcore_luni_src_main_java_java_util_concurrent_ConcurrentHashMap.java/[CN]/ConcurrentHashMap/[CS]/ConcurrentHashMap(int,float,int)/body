{
  if (!(loadFactor > 0) || initialCapacity < 0 || concurrencyLevel <= 0)   throw new IllegalArgumentException();
  if (concurrencyLevel > MAX_SEGMENTS)   concurrencyLevel=MAX_SEGMENTS;
  int sshift=0;
  int ssize=1;
  while (ssize < concurrencyLevel) {
    ++sshift;
    ssize<<=1;
  }
  this.segmentShift=32 - sshift;
  this.segmentMask=ssize - 1;
  if (initialCapacity > MAXIMUM_CAPACITY)   initialCapacity=MAXIMUM_CAPACITY;
  int c=initialCapacity / ssize;
  if (c * ssize < initialCapacity)   ++c;
  int cap=MIN_SEGMENT_TABLE_CAPACITY;
  while (cap < c)   cap<<=1;
  Segment<K,V> s0=new Segment<K,V>(loadFactor,(int)(cap * loadFactor),(HashEntry<K,V>[])new HashEntry<?,?>[cap]);
  Segment<K,V>[] ss=(Segment<K,V>[])new Segment<?,?>[ssize];
  UNSAFE.putOrderedObject(ss,SBASE,s0);
  this.segments=ss;
}
