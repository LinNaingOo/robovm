{
  Function function=FunctionBuilder.method(method);
  moduleBuilder.addFunction(function);
  Variable handleI64=function.newVariable(I64);
  function.add(new Load(handleI64,getFieldPtr(function,function.getParameterRef(1),offsetof(new StructureType(DATA_OBJECT,new StructureType(I64)),1,0),I64)));
  Variable handlePtr=function.newVariable(new PointerType(structType));
  function.add(new Inttoptr(handlePtr,handleI64.ref(),handlePtr.getType()));
  int offset=getStructMemberOffset(method) + 1;
  Type memberType=getStructMemberType(method);
  Variable memberPtr=function.newVariable(new PointerType(memberType));
  if (memberType != structType.getTypeAt(offset)) {
    Variable tmp=function.newVariable(new PointerType(structType.getTypeAt(offset)));
    function.add(new Getelementptr(tmp,handlePtr.ref(),0,offset));
    function.add(new Bitcast(memberPtr,tmp.ref(),memberPtr.getType()));
  }
 else {
    function.add(new Getelementptr(memberPtr,handlePtr.ref(),0,offset));
  }
  VariableRef env=function.getParameterRef(0);
  if (method.getParameterCount() == 0) {
    Value result=loadValueForGetter(method,function,memberType,memberPtr.ref(),function.getParameterRef(0),true,MarshalerFlags.CALL_TYPE_STRUCT_MEMBER);
    function.add(new Ret(result));
  }
 else {
    Value value=function.getParameterRef(2);
    storeValueForSetter(method,function,memberType,memberPtr.ref(),env,value,MarshalerFlags.CALL_TYPE_STRUCT_MEMBER);
    if (method.getReturnType().equals(VoidType.v())) {
      function.add(new Ret());
    }
 else {
      function.add(new Ret(function.getParameterRef(1)));
    }
  }
  return function;
}
