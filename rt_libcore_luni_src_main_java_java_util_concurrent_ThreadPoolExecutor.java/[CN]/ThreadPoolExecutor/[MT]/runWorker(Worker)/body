{
  Thread wt=Thread.currentThread();
  Runnable task=w.firstTask;
  w.firstTask=null;
  w.unlock();
  boolean completedAbruptly=true;
  try {
    while (task != null || (task=getTask()) != null) {
      w.lock();
      if ((runStateAtLeast(ctl.get(),STOP) || (Thread.interrupted() && runStateAtLeast(ctl.get(),STOP))) && !wt.isInterrupted())       wt.interrupt();
      try {
        beforeExecute(wt,task);
        Throwable thrown=null;
        try {
          task.run();
        }
 catch (        RuntimeException x) {
          thrown=x;
          throw x;
        }
catch (        Error x) {
          thrown=x;
          throw x;
        }
catch (        Throwable x) {
          thrown=x;
          throw new Error(x);
        }
 finally {
          afterExecute(task,thrown);
        }
      }
  finally {
        task=null;
        w.completedTasks++;
        w.unlock();
      }
    }
    completedAbruptly=false;
  }
  finally {
    processWorkerExit(w,completedAbruptly);
  }
}
