{
  DateFormat format=DateFormat.getDateTimeInstance(DateFormat.SHORT,DateFormat.SHORT,Locale.US);
  try {
    format.parse("not a Date");
    fail("should throw ParseException first");
  }
 catch (  ParseException pe) {
    assertNotNull(pe.getMessage());
  }
  Date current=new Date();
  try {
    Date date=format.parse(format.format(current).toString());
    assertEquals(current.getDate(),date.getDate());
    assertEquals(current.getDay(),date.getDay());
    assertEquals(current.getMonth(),date.getMonth());
    assertEquals(current.getYear(),date.getYear());
    assertEquals(current.getHours(),date.getHours());
    assertEquals(current.getMinutes(),date.getMinutes());
    assertEquals(0,date.getSeconds());
  }
 catch (  ParseException pe) {
    fail("ParseException was thrown for current Date.");
  }
  try {
    format.parse("27/08/1998");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException pe) {
  }
  try {
    format.parse("30/30/908 4:50, PDT");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException pe) {
  }
  try {
    format.parse("837039928046");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException pe) {
  }
  format=DateFormat.getDateInstance(DateFormat.DEFAULT,Locale.US);
  try {
    Date date=format.parse(format.format(current).toString());
    assertEquals(current.getDate(),date.getDate());
    assertEquals(current.getDay(),date.getDay());
    assertEquals(current.getMonth(),date.getMonth());
    assertEquals(current.getYear(),date.getYear());
    assertEquals(0,date.getHours());
    assertEquals(0,date.getMinutes());
    assertEquals(0,date.getSeconds());
  }
 catch (  ParseException pe) {
    fail("ParseException was thrown for current Date.");
  }
  try {
    format.parse("Jan 16 1970");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException pe) {
  }
  try {
    format.parse("27/08/1998");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException pe) {
  }
  format=DateFormat.getDateInstance(DateFormat.LONG,Locale.US);
  try {
    Date date=format.parse(format.format(current).toString());
    assertEquals(current.getDate(),date.getDate());
    assertEquals(current.getDay(),date.getDay());
    assertEquals(current.getMonth(),date.getMonth());
    assertEquals(current.getYear(),date.getYear());
    assertEquals(0,date.getHours());
    assertEquals(0,date.getMinutes());
    assertEquals(0,date.getSeconds());
  }
 catch (  ParseException pe) {
    fail("ParseException was thrown for current Date.");
  }
  format=DateFormat.getDateInstance(DateFormat.MEDIUM,Locale.US);
  try {
    Date date=format.parse(format.format(current).toString());
    assertEquals(current.getDate(),date.getDate());
    assertEquals(current.getDay(),date.getDay());
    assertEquals(current.getMonth(),date.getMonth());
    assertEquals(current.getYear(),date.getYear());
    assertEquals(0,date.getHours());
    assertEquals(0,date.getMinutes());
    assertEquals(0,date.getSeconds());
  }
 catch (  ParseException pe) {
    fail("ParseException was thrown for current Date.");
  }
  format=DateFormat.getTimeInstance(DateFormat.DEFAULT,Locale.US);
  try {
    Date date=format.parse(format.format(current).toString());
    assertEquals(1,date.getDate());
    assertEquals(0,date.getMonth());
    assertEquals(70,date.getYear());
    assertEquals(current.getHours(),date.getHours());
    assertEquals(current.getMinutes(),date.getMinutes());
  }
 catch (  ParseException pe) {
    fail("ParseException was thrown for current Date.");
  }
  try {
    format.parse("8:58:44");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException pe) {
  }
  format=DateFormat.getDateTimeInstance(DateFormat.DEFAULT,DateFormat.SHORT,Locale.US);
  try {
    Date date=format.parse(format.format(current).toString());
    assertEquals(current.getDate(),date.getDate());
    assertEquals(current.getDay(),date.getDay());
    assertEquals(current.getMonth(),date.getMonth());
    assertEquals(current.getYear(),date.getYear());
    assertEquals(current.getHours(),date.getHours());
    assertEquals(current.getMinutes(),date.getMinutes());
  }
 catch (  ParseException pe) {
    fail("ParseException was thrown for current Date.");
  }
  try {
    format.parse("January 31 1970 7:52:34 AM PST");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException expected) {
  }
  try {
    format.parse("January 31 1970");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException expected) {
  }
  format=DateFormat.getDateTimeInstance(DateFormat.FULL,DateFormat.FULL,Locale.US);
  String formatPattern=((SimpleDateFormat)format).toPattern();
  String formattedCurrent=format.format(current);
  Date date=format.parse(formattedCurrent);
  if (date.getTime() / 1000 != current.getTime() / 1000) {
    fail(date.getTime() + " != " + current.getTime()+ "; "+ formatPattern+ "; "+ formattedCurrent);
  }
  try {
    format.parse("January 16, 1970 8:03:52 PM CET");
    fail("ParseException was not thrown.");
  }
 catch (  ParseException expected) {
  }
}
