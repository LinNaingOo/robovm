{
synchronized (lock) {
    if (!isConnected) {
      throw new IOException(Messages.getString("luni.D1"));
    }
    if (data == null) {
      throw new IOException(Messages.getString("luni.CF"));
    }
    if (offset < 0 || count > buffer.length - offset || count < 0) {
      throw new IndexOutOfBoundsException();
    }
    if (count == 0) {
      return 0;
    }
    lastReader=Thread.currentThread();
    try {
      boolean first=true;
      while (in == -1) {
        if (isClosed) {
          return -1;
        }
        if (!first && lastWriter != null && !lastWriter.isAlive()) {
          throw new IOException(Messages.getString("luni.CE"));
        }
        first=false;
        lock.notifyAll();
        lock.wait(1000);
      }
    }
 catch (    InterruptedException e) {
      throw new InterruptedIOException();
    }
    int copyLength=0;
    if (out >= in) {
      copyLength=count > data.length - out ? data.length - out : count;
      System.arraycopy(data,out,buffer,offset,copyLength);
      out+=copyLength;
      if (out == data.length) {
        out=0;
      }
      if (out == in) {
        in=-1;
        out=0;
      }
    }
    if (copyLength == count || in == -1) {
      return copyLength;
    }
    int charsCopied=copyLength;
    copyLength=in - out > count - copyLength ? count - copyLength : in - out;
    System.arraycopy(data,out,buffer,offset + charsCopied,copyLength);
    out+=copyLength;
    if (out == in) {
      in=-1;
      out=0;
    }
    return charsCopied + copyLength;
  }
}
