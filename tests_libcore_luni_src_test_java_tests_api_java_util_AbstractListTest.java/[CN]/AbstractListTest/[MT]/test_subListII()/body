{
  SimpleList mList=new SimpleList();
  mList.add(new Object());
  mList.add(new Object());
  List sList=mList.subList(0,2);
  sList.add(new Object());
  sList.get(0);
  sList.add(0,new Object());
  sList.get(0);
  sList.addAll(Arrays.asList(new String[]{"1","2"}));
  sList.get(0);
  sList.addAll(0,Arrays.asList(new String[]{"3","4"}));
  sList.get(0);
  sList.remove(0);
  sList.get(0);
  ListIterator lit=sList.listIterator();
  lit.add(new Object());
  lit.next();
  lit.remove();
  lit.next();
  sList.clear();
  sList.add(new Object());
  List al=new ArrayList();
  for (int i=0; i < 10; i++) {
    al.add(new Integer(i));
  }
  assertTrue("Sublist returned should have implemented Random Access interface",al.subList(3,7) instanceof RandomAccess);
  List ll=new LinkedList();
  for (int i=0; i < 10; i++) {
    ll.add(new Integer(i));
  }
  assertTrue("Sublist returned should not have implemented Random Access interface",!(ll.subList(3,7) instanceof RandomAccess));
}
