{
  if (isPrimitiveComponentType(targetClass)) {
    throw new IllegalArgumentException();
  }
  String fnName="array_" + mangleClass(targetClass) + "_ldc";
  FunctionRef fnRef=new FunctionRef(fnName,new FunctionType(OBJECT_PTR,ENV_PTR));
  if (!mb.hasSymbol(fnName)) {
    Function fn=new FunctionBuilder(fnRef).name(fnName).linkage(weak).build();
    Global g=new Global("array_" + mangleClass(targetClass) + "_ptr",weak,new NullConstant(OBJECT_PTR));
    if (!mb.hasSymbol(g.getName())) {
      mb.addGlobal(g);
    }
    FunctionRef ldcArrayClassFn=BC_LDC_ARRAY_BOOT_CLASS;
    if (!isPrimitiveBaseType(targetClass)) {
      Clazz baseType=config.getClazzes().load(getBaseType(targetClass));
      if (!baseType.isInBootClasspath()) {
        ldcArrayClassFn=BC_LDC_ARRAY_CLASS;
      }
    }
    Value arrayClass=call(fn,ldcArrayClassFn,fn.getParameterRef(0),g.ref(),mb.getString(targetClass));
    fn.add(new Ret(arrayClass));
    mb.addFunction(fn);
  }
  return fnRef;
}
