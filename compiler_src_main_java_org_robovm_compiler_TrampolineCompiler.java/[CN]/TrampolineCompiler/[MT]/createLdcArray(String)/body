{
  String fnName="array_" + mangleClass(targetClass) + "_ldc";
  FunctionRef fnRef=new FunctionRef(fnName,new FunctionType(OBJECT_PTR,ENV_PTR));
  if (!mb.hasSymbol(fnName)) {
    Function fn=new Function(weak,fnRef,fnName);
    Value arrayClass=null;
    if (isPrimitiveComponentType(targetClass)) {
      String primitiveDesc=targetClass.substring(1);
      Variable result=fn.newVariable(OBJECT_PTR);
      fn.add(new Load(result,new GlobalRef("array_" + primitiveDesc,OBJECT_PTR)));
      arrayClass=result.ref();
    }
 else {
      Global g=new Global("array_" + mangleClass(targetClass) + "_ptr",weak,new NullConstant(OBJECT_PTR));
      if (!mb.hasSymbol(g.getName())) {
        mb.addGlobal(g);
      }
      FunctionRef ldcArrayClassFn=BC_LDC_ARRAY_BOOT_CLASS;
      if (!isPrimitiveBaseType(targetClass)) {
        Clazz baseType=config.getClazzes().load(getBaseType(targetClass));
        if (!baseType.isInBootClasspath()) {
          ldcArrayClassFn=BC_LDC_ARRAY_CLASS;
        }
      }
      arrayClass=call(fn,ldcArrayClassFn,fn.getParameterRef(0),g.ref(),mb.getString(targetClass));
    }
    fn.add(new Ret(arrayClass));
    mb.addFunction(fn);
  }
  return fnRef;
}
