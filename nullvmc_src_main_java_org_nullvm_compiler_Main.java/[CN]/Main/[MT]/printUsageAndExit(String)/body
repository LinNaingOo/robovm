{
  if (errorMessage != null) {
    System.err.format("nullvm: %s\n",errorMessage);
  }
  System.err.println("Usage: nullvm [-options] class");
  System.err.println("   or  nullvm [-options] -jar jarfile");
  System.err.println("Options:");
  System.err.println("  -ar-bin <path>       Path to the ar binary");
  System.err.println("  -cache <dir>         Directory where cached compiled class files will be placed. Default is ~/.nullvm/cache");
  System.err.println("  -clean               Compile class files even if a compiled version already exists in the cache.");
  System.err.println("  -cp <list>           : separated list of directories, JAR archives, and ZIP archives to search for class files.");
  System.err.println("  -classpath <list>    : separated list of directories, JAR archives, and ZIP archives to search for class files.");
  System.err.println("  -d <dir>             Place the generated executable and other files in <dir>.");
  System.err.println("  -verify:skip         Don't verify classes (the default)");
  System.err.println("  -verify:now          Verify classes and abort compilation if verification fails");
  System.err.println("  -verify:defer        Verify classes but don't abort compilation. java.lang.VerifyError will be thrown when the class is loaded at runtime.");
  System.err.println("  -gcc-bin <path>      Path to the gcc binary");
  System.err.println("  -gcc-opt <opt>       Option to pass to gcc");
  System.err.println("  -help, -?            Display this information");
  System.err.println("  -home <dir>          Directory where NullVM runtime has been installed and where compiled class files will be cached. Default is ~/.nullvm");
  System.err.println("  -jar <path>          Use main class as specified by the manifest in this JAR archive.");
  System.err.println("  -ld-bin <path>       Path to the ld binary");
  System.err.println("  -ld-opt <opt>        Option to pass to ld");
  System.err.println("  -llc-opt <opt        Option to pass to llc");
  System.err.println("  -llvm-bin-dir <path> Path where the LLVM binaries can be found");
  System.err.println("  -o <name>            The name of the target executable or library");
  System.err.println("  -opt-opt <opt>       Option to pass to opt");
  System.err.println("  -verbose             Output messages about what the compiler is doing");
  System.exit(errorMessage != null ? 1 : 0);
}
