{
  assertEquals("Incorrect number of methods",10,Cls2.class.getMethods().length);
  assertEquals("Incorrect number of methods",11,Cls3.class.getMethods().length);
  Method expected=null;
  Method[] methods=Cls2.class.getMethods();
  for (  Method method : methods) {
    if (method.toString().equals("public void libcore.java.lang.OldClassTest$Cls2.test()")) {
      expected=method;
      break;
    }
  }
  if (expected == null) {
    fail("getMethods() did not return all methods");
  }
  assertEquals(expected,Cls2.class.getMethod("test"));
  expected=null;
  methods=Cls3.class.getMethods();
  for (  Method method : methods) {
    if (method.toString().equals("public void libcore.java.lang.OldClassTest$Cls3.test()")) {
      expected=method;
      break;
    }
  }
  if (expected == null) {
    fail("getMethods() did not return all methods");
  }
  assertEquals(expected,Cls3.class.getMethod("test"));
  expected=null;
  methods=Cls3.class.getMethods();
  for (  Method method : methods) {
    if (method.toString().equals("public void libcore.java.lang.OldClassTest$Cls3.test2(int," + "java.lang.Object)")) {
      expected=method;
      break;
    }
  }
  if (expected == null) {
    fail("getMethods() did not return all methods");
  }
  assertEquals(expected,Cls3.class.getMethod("test2",int.class,Object.class));
  assertEquals("Incorrect number of methods",1,Intf5.class.getMethods().length);
}
