{
  URL codebase=null;
  Certificate[] signers=null;
  Set<Principal> principals=new HashSet<Principal>();
  Set<Permission> permissions=new HashSet<Permission>();
  if (ge.codebase != null) {
    codebase=new URL(resolve ? PolicyUtils.expandURL(ge.codebase,system) : ge.codebase);
  }
  if (ge.signers != null) {
    if (resolve) {
      ge.signers=PolicyUtils.expand(ge.signers,system);
    }
    signers=resolveSigners(ks,ge.signers);
  }
  if (ge.principals != null) {
    for (Iterator<PrincipalEntry> iter=ge.principals.iterator(); iter.hasNext(); ) {
      DefaultPolicyScanner.PrincipalEntry pe=iter.next();
      if (resolve) {
        pe.name=PolicyUtils.expand(pe.name,system);
      }
      if (pe.klass == null) {
        principals.add(getPrincipalByAlias(ks,pe.name));
      }
 else {
        principals.add(new UnresolvedPrincipal(pe.klass,pe.name));
      }
    }
  }
  if (ge.permissions != null) {
    for (Iterator<PermissionEntry> iter=ge.permissions.iterator(); iter.hasNext(); ) {
      DefaultPolicyScanner.PermissionEntry pe=iter.next();
      try {
        permissions.add(resolvePermission(pe,ge,ks,system,resolve));
      }
 catch (      Exception e) {
      }
    }
  }
  return new PolicyEntry(new CodeSource(codebase,signers),principals,permissions);
}
