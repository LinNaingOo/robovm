{
  AlgorithmParameterSpec ap=new IvParameterSpec(IV);
  Cipher c=Cipher.getInstance("DES/CBC/PKCS5Padding");
  c.init(Cipher.WRAP_MODE,CIPHER_KEY_DES,ap,new SecureRandom());
  byte[] arDES=c.wrap(CIPHER_KEY_DES);
  byte[] ar=c.wrap(CIPHER_KEY_3DES);
  try {
    c.unwrap(arDES,"DES",Cipher.SECRET_KEY);
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  c.init(Cipher.UNWRAP_MODE,CIPHER_KEY_DES,ap,new SecureRandom());
  assertTrue(CIPHER_KEY_DES.equals(c.unwrap(arDES,"DES",Cipher.SECRET_KEY)));
  assertFalse(CIPHER_KEY_DES.equals(c.unwrap(ar,"DES",Cipher.SECRET_KEY)));
  try {
    c.unwrap(arDES,"RSA38",Cipher.PUBLIC_KEY);
    fail();
  }
 catch (  NoSuchAlgorithmException expected) {
  }
  c=Cipher.getInstance("DESede/CBC/PKCS5Padding");
  c.init(Cipher.UNWRAP_MODE,CIPHER_KEY_3DES,ap,new SecureRandom());
  try {
    c.unwrap(arDES,"DESede",Cipher.SECRET_KEY);
    fail();
  }
 catch (  InvalidKeyException expected) {
  }
}
