{
  AlgorithmParameterSpec ap=new IvParameterSpec(IV);
  Cipher c=Cipher.getInstance("DES/CBC/PKCS5Padding");
  c.init(Cipher.WRAP_MODE,CIPHER_KEY_DES,ap,new SecureRandom());
  assertNotNull(c.wrap(CIPHER_KEY_DES));
  assertNotNull(c.wrap(CIPHER_KEY_3DES));
  String certName=Support_Resources.getURL("test.cert");
  InputStream is=new URL(certName).openConnection().getInputStream();
  CertificateFactory cf=CertificateFactory.getInstance("X.509");
  Certificate cert=cf.generateCertificate(is);
  assertNotNull(c.wrap(cert.getPublicKey()));
  c=Cipher.getInstance("DES/CBC/NoPadding");
  c.init(Cipher.WRAP_MODE,CIPHER_KEY_DES,ap,new SecureRandom());
  try {
    assertNotNull(c.wrap(cert.getPublicKey()));
    fail();
  }
 catch (  IllegalBlockSizeException expected) {
  }
  c.init(Cipher.DECRYPT_MODE,CIPHER_KEY_DES,ap,new SecureRandom());
  try {
    c.wrap(CIPHER_KEY_DES);
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  c.init(Cipher.WRAP_MODE,CIPHER_KEY_DES,ap,new SecureRandom());
  try {
    c.wrap(new Mock_Key());
    fail();
  }
 catch (  InvalidKeyException expected) {
  }
}
