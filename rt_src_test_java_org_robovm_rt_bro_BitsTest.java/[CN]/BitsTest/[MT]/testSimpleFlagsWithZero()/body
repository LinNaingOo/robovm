{
  FlagsWithZero pos=FlagsWithZero.V0;
  assertEquals(0,pos.value());
  assertEquals(set(FlagsWithZero.V0),pos.asSet());
  assertEquals("FlagsWithZero(0x0 = V0(0x0))",pos.toString());
  pos=pos.set(FlagsWithZero.V1).set(FlagsWithZero.V4);
  assertEquals(1 | 4,pos.value());
  assertEquals(set(FlagsWithZero.V1,FlagsWithZero.V4),pos.asSet());
  assertEquals("FlagsWithZero(0x5 = V1(0x1) | V4(0x4))",pos.toString());
  pos=pos.clear(FlagsWithZero.V1);
  assertEquals(4,pos.value());
  assertEquals(set(FlagsWithZero.V4),pos.asSet());
  assertEquals("FlagsWithZero(0x4 = V4(0x4))",pos.toString());
  pos=pos.clear(FlagsWithZero.V4);
  assertEquals(0,pos.value());
  assertEquals(set(FlagsWithZero.V0),pos.asSet());
  assertEquals("FlagsWithZero(0x0 = V0(0x0))",pos.toString());
  pos=pos.set(FlagsWithZero.V8);
  assertEquals(8,pos.value());
  assertEquals(set(FlagsWithZero.V8),pos.asSet());
  assertEquals("FlagsWithZero(0x8 = V8(0x8))",pos.toString());
  pos=pos.clear(FlagsWithZero.V4);
  assertEquals(8,pos.value());
  assertEquals(set(FlagsWithZero.V8),pos.asSet());
  assertEquals("FlagsWithZero(0x8 = V8(0x8))",pos.toString());
  pos=pos.clear(FlagsWithZero.V0);
  assertEquals(8,pos.value());
  assertEquals(set(FlagsWithZero.V8),pos.asSet());
  assertEquals("FlagsWithZero(0x8 = V8(0x8))",pos.toString());
  pos=pos.set(FlagsWithZero.V0);
  assertEquals(0,pos.value());
  assertEquals(set(FlagsWithZero.V0),pos.asSet());
  assertEquals("FlagsWithZero(0x0 = V0(0x0))",pos.toString());
}
