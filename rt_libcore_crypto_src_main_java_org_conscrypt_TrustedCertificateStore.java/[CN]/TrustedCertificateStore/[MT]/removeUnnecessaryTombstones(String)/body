{
  if (!isUser(alias)) {
    throw new AssertionError(alias);
  }
  int dotIndex=alias.lastIndexOf('.');
  if (dotIndex == -1) {
    throw new AssertionError(alias);
  }
  String hash=alias.substring(PREFIX_USER.length(),dotIndex);
  int lastTombstoneIndex=Integer.parseInt(alias.substring(dotIndex + 1));
  if (exists(file(addedDir,hash,lastTombstoneIndex + 1))) {
    return;
  }
  while (lastTombstoneIndex >= 0) {
    URI file=file(addedDir,hash,lastTombstoneIndex);
    if (!isTombstone(file)) {
      break;
    }
    if (!"file".equals(file.getScheme()) || !new File(file).delete()) {
      throw new IOException("Could not remove " + file);
    }
    lastTombstoneIndex--;
  }
}
