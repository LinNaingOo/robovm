{
  QueueReader worklist=reachables.listener();
  while (true) {
    ofcgb.processReachables();
    reachables.update();
    if (!worklist.hasNext())     break;
    MethodOrMethodContext momc=(MethodOrMethodContext)worklist.next();
    List receivers=(List)ofcgb.methodToReceivers().get(momc.method());
    if (receivers != null)     for (Iterator receiverIt=receivers.iterator(); receiverIt.hasNext(); ) {
      final Local receiver=(Local)receiverIt.next();
      final PointsToSet p2set=pa.reachingObjects(receiver);
      for (Iterator typeIt=p2set.possibleTypes().iterator(); typeIt.hasNext(); ) {
        final Type type=(Type)typeIt.next();
        ofcgb.addType(receiver,momc.context(),type,null);
      }
    }
    List stringConstants=(List)ofcgb.methodToStringConstants().get(momc.method());
    if (stringConstants != null)     for (Iterator stringConstantIt=stringConstants.iterator(); stringConstantIt.hasNext(); ) {
      final Local stringConstant=(Local)stringConstantIt.next();
      PointsToSet p2set=pa.reachingObjects(stringConstant);
      Collection possibleStringConstants=p2set.possibleStringConstants();
      if (possibleStringConstants == null) {
        ofcgb.addStringConstant(stringConstant,momc.context(),null);
      }
 else {
        for (Iterator constantIt=possibleStringConstants.iterator(); constantIt.hasNext(); ) {
          final String constant=(String)constantIt.next();
          ofcgb.addStringConstant(stringConstant,momc.context(),constant);
        }
      }
    }
  }
}
