{
  final byte[] enc=new byte[]{0x02,0x01,0x03};
  final String strFormatParam="format";
  MyAlgorithmParameters paramSpi=new MyAlgorithmParameters(){
    protected void engineInit(    byte[] params,    String format) throws IOException {
      runEngineInitB$String=true;
      assertSame(enc,params);
      assertSame(strFormatParam,format);
    }
  }
;
  AlgorithmParameters params=new DummyAlgorithmParameters(paramSpi,p,"algorithm");
  params.init(enc,strFormatParam);
  assertTrue(paramSpi.runEngineInitB$String);
  try {
    params.init(enc,strFormatParam);
    fail("No expected IOException");
  }
 catch (  IOException e) {
  }
  params=new DummyAlgorithmParameters(paramSpi,p,"algorithm");
  params.init(new MyAlgorithmParameterSpec());
  try {
    params.init(enc,strFormatParam);
    fail("No expected IOException");
  }
 catch (  IOException e) {
  }
  params=new DummyAlgorithmParameters(paramSpi,p,"algorithm");
  params.init(enc);
  try {
    params.init(enc,strFormatParam);
    fail("No expected IOException");
  }
 catch (  IOException e) {
  }
  paramSpi=new MyAlgorithmParameters(){
    protected void engineInit(    byte[] params,    String format) throws IOException {
      runEngineInitB$String=true;
      assertNull(params);
      assertNull(format);
    }
  }
;
  params=new DummyAlgorithmParameters(paramSpi,p,"algorithm");
  params.init(null,null);
  assertTrue(paramSpi.runEngineInitB$String);
}
