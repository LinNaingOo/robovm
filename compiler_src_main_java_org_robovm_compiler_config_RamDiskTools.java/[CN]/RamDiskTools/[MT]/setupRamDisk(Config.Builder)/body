{
  if (OS.getDefaultOS() != OS.macosx) {
    return;
  }
  File volume=new File(ROBOVM_RAM_DISK_PATH);
  if (!volume.exists()) {
    builder.config.getLogger().debug("No RAM disk available");
    return;
  }
  File cacheDir=builder.config.getCacheDir();
  File tmpDir=builder.config.getTmpDir();
  try {
    FileStore store=Files.getFileStore(volume.toPath());
    if (store.getUsableSpace() < MIN_FREE_SPACE) {
      cleanRamDisk(store,volume);
      if (store.getUsableSpace() < MIN_FREE_SPACE) {
        builder.config.getLogger().debug("Couldn't free enough space on RAM disk, using hard drive");
        return;
      }
    }
    File newCacheDir=new File(volume,"cache");
    if (!newCacheDir.exists() && !newCacheDir.mkdirs()) {
      builder.config.getLogger().debug("Couldn't create cache directory on RAM disk, using hard drive");
      return;
    }
    File newTmpDir=new File(volume,"tmp");
    if (!newTmpDir.exists() && !newTmpDir.mkdirs()) {
      builder.config.getLogger().debug("Couldn't create tmp directory on RAM disk, using hard drive");
      return;
    }
    newTmpDir=new File(newTmpDir,tmpDir.getAbsolutePath());
    builder.config.getLogger().debug("Using RAM disk at %s for cache and tmp directory",ROBOVM_RAM_DISK_PATH);
    builder.cacheDir(newCacheDir);
    builder.tmpDir(newTmpDir);
  }
 catch (  Throwable t) {
    builder.config.getLogger().error("Couldn't setup RAM disk, using hard drive, %s",t.getMessage());
    builder.cacheDir(cacheDir);
    builder.tmpDir(tmpDir);
  }
}
