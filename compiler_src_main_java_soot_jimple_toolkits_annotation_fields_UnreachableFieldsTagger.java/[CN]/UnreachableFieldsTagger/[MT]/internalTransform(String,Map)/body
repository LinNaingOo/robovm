{
  ArrayList<SootField> fieldList=new ArrayList<SootField>();
  Iterator getClassesIt=Scene.v().getApplicationClasses().iterator();
  while (getClassesIt.hasNext()) {
    SootClass appClass=(SootClass)getClassesIt.next();
    Iterator getFieldsIt=appClass.getFields().iterator();
    while (getFieldsIt.hasNext()) {
      SootField field=(SootField)getFieldsIt.next();
      fieldList.add(field);
    }
  }
  getClassesIt=Scene.v().getApplicationClasses().iterator();
  while (getClassesIt.hasNext()) {
    SootClass appClass=(SootClass)getClassesIt.next();
    Iterator mIt=appClass.getMethods().iterator();
    while (mIt.hasNext()) {
      SootMethod sm=(SootMethod)mIt.next();
      if (!sm.hasActiveBody())       continue;
      if (!Scene.v().getReachableMethods().contains(sm))       continue;
      Body b=sm.getActiveBody();
      Iterator usesIt=b.getUseBoxes().iterator();
      while (usesIt.hasNext()) {
        ValueBox vBox=(ValueBox)usesIt.next();
        Value v=vBox.getValue();
        if (v instanceof FieldRef) {
          FieldRef fieldRef=(FieldRef)v;
          SootField f=fieldRef.getField();
          if (fieldList.contains(f)) {
            int index=fieldList.indexOf(f);
            fieldList.remove(index);
          }
        }
      }
    }
  }
  Iterator<SootField> unusedIt=fieldList.iterator();
  while (unusedIt.hasNext()) {
    SootField unusedField=unusedIt.next();
    unusedField.addTag(new StringTag("Field " + unusedField.getName() + " is not used!","Unreachable Fields"));
    unusedField.addTag(new ColorTag(ColorTag.RED,true,"Unreachable Fields"));
  }
}
