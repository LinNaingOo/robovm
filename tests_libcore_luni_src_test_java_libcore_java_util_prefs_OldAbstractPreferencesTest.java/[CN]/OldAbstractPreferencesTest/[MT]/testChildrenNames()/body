{
  AbstractPreferences first=(AbstractPreferences)pref.node("First node");
  AbstractPreferences second=(AbstractPreferences)pref.node("Second node");
  assertEquals(2,pref.childrenNames().length);
  assertEquals(0,first.childrenNames().length);
  assertEquals(0,second.childrenNames().length);
  second.removeNode();
  try {
    second.childrenNames();
    fail("IllegalStateException expected");
  }
 catch (  IllegalStateException e) {
  }
  pref.removeNode();
  try {
    first.childrenNames();
    fail("IllegalStateException expected");
  }
 catch (  IllegalStateException e) {
  }
}
