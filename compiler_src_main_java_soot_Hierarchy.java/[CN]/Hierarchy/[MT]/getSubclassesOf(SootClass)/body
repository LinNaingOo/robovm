{
  c.checkLevel(SootClass.HIERARCHY);
  if (c.isInterface())   throw new RuntimeException("class needed!");
  checkState();
  if (classToSubclasses.get(c) != null)   return classToSubclasses.get(c);
  List<SootClass> l=new ArrayList<SootClass>();
  ListIterator it=classToDirSubclasses.get(c).listIterator();
  while (it.hasNext()) {
    SootClass cls=(SootClass)it.next();
    if (cls.resolvingLevel() < SootClass.HIERARCHY)     continue;
    l.addAll(getSubclassesOfIncluding(cls));
  }
  l=Collections.unmodifiableList(l);
  classToSubclasses.put(c,l);
  return l;
}
