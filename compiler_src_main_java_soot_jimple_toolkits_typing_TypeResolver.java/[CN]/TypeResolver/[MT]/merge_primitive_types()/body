{
  compute_solved();
  Iterator<TypeVariable> varIt=solved.iterator();
  while (varIt.hasNext()) {
    TypeVariable var=varIt.next();
    if (var.type().type() instanceof IntType || var.type().type() instanceof LongType || var.type().type() instanceof FloatType|| var.type().type() instanceof DoubleType) {
      List<TypeVariable> parents;
      List<TypeVariable> children;
      boolean finished;
      do {
        finished=true;
        parents=var.parents();
        if (parents.size() != 0) {
          finished=false;
          for (          TypeVariable parent : parents) {
            if (DEBUG) {
              G.v().out.print(".");
            }
            var=var.union(parent);
          }
        }
        children=var.children();
        if (children.size() != 0) {
          finished=false;
          for (          TypeVariable child : children) {
            if (DEBUG) {
              G.v().out.print(".");
            }
            var=var.union(child);
          }
        }
      }
 while (!finished);
    }
  }
}
