{
  String anno=isBridge(method) ? "@Bridge" : "@Callback";
  Type returnType=getType(method.getReturnType());
  if (hasAnnotation(method,"Lorg/nullvm/rt/bro/annotation/Pointer;")) {
    if (!method.getReturnType().equals(LongType.v())) {
      throw new IllegalArgumentException(anno + " annotated method " + method.getName()+ " must return long when annotated with @Pointer");
    }
    returnType=I8_PTR;
  }
  Type[] paramTypes=new Type[method.getParameterTypes().size()];
  int i=0;
  for (  soot.Type t : (List<soot.Type>)method.getParameterTypes()) {
    paramTypes[i++]=getType(t);
  }
  for (i=0; i < paramTypes.length; i++) {
    if (hasParameterAnnotation(method,i,"Lorg/nullvm/rt/bro/annotation/Pointer;")) {
      if (!method.getParameterType(i).equals(LongType.v())) {
        throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " must be of type long when annotated with @Pointer");
      }
      paramTypes[i]=I8_PTR;
    }
  }
  return new FunctionType(returnType,paramTypes);
}
