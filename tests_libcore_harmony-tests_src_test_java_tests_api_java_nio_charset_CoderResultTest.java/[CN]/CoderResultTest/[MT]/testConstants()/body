{
  assertNotSame(CoderResult.OVERFLOW,CoderResult.UNDERFLOW);
  assertNotNull(CoderResult.OVERFLOW);
  assertFalse(CoderResult.OVERFLOW.isError());
  assertFalse(CoderResult.OVERFLOW.isMalformed());
  assertFalse(CoderResult.OVERFLOW.isUnderflow());
  assertFalse(CoderResult.OVERFLOW.isUnmappable());
  assertTrue(CoderResult.OVERFLOW.isOverflow());
  assertTrue(CoderResult.OVERFLOW.toString().indexOf("OVERFLOW") != -1);
  try {
    CoderResult.OVERFLOW.throwException();
    fail("Should throw BufferOverflowException");
  }
 catch (  BufferOverflowException ex) {
  }
  try {
    CoderResult.OVERFLOW.length();
    fail("Should throw UnsupportedOperationException");
  }
 catch (  UnsupportedOperationException ex) {
  }
  assertNotNull(CoderResult.UNDERFLOW);
  assertFalse(CoderResult.UNDERFLOW.isError());
  assertFalse(CoderResult.UNDERFLOW.isMalformed());
  assertTrue(CoderResult.UNDERFLOW.isUnderflow());
  assertFalse(CoderResult.UNDERFLOW.isUnmappable());
  assertFalse(CoderResult.UNDERFLOW.isOverflow());
  assertTrue(CoderResult.UNDERFLOW.toString().indexOf("UNDERFLOW") != -1);
  try {
    CoderResult.UNDERFLOW.throwException();
    fail("Should throw BufferOverflowException");
  }
 catch (  BufferUnderflowException ex) {
  }
  try {
    CoderResult.UNDERFLOW.length();
    fail("Should throw UnsupportedOperationException");
  }
 catch (  UnsupportedOperationException ex) {
  }
}
