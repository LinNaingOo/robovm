{
  server.enqueue(response.setBody("A").setStatus("HTTP/1.1 200 A-OK"));
  server.enqueue(new MockResponse().setResponseCode(HttpURLConnection.HTTP_NOT_MODIFIED));
  server.enqueue(response.setBody("B").setStatus("HTTP/1.1 200 B-OK"));
  server.enqueue(new MockResponse().setStatus("HTTP/1.1 200 C-OK").setBody("C"));
  server.play();
  URL valid=server.getUrl("/valid");
  HttpURLConnection connection1=(HttpURLConnection)valid.openConnection();
  assertEquals("A",readAscii(connection1));
  assertEquals(HttpURLConnection.HTTP_OK,connection1.getResponseCode());
  assertEquals("A-OK",connection1.getResponseMessage());
  HttpURLConnection connection2=(HttpURLConnection)valid.openConnection();
  assertEquals("A",readAscii(connection2));
  assertEquals(HttpURLConnection.HTTP_OK,connection2.getResponseCode());
  assertEquals("A-OK",connection2.getResponseMessage());
  URL invalid=server.getUrl("/invalid");
  HttpURLConnection connection3=(HttpURLConnection)invalid.openConnection();
  assertEquals("B",readAscii(connection3));
  assertEquals(HttpURLConnection.HTTP_OK,connection3.getResponseCode());
  assertEquals("B-OK",connection3.getResponseMessage());
  HttpURLConnection connection4=(HttpURLConnection)invalid.openConnection();
  assertEquals("C",readAscii(connection4));
  assertEquals(HttpURLConnection.HTTP_OK,connection4.getResponseCode());
  assertEquals("C-OK",connection4.getResponseMessage());
  server.takeRequest();
  return server.takeRequest();
}
