{
  MockWebServer server2=new MockWebServer();
  try {
    MockResponse response=new MockResponse().addHeader("Last-Modified: " + formatDate(-1,TimeUnit.HOURS)).addHeader("Expires: " + formatDate(1,TimeUnit.HOURS)).setResponseCode(responseCode).setBody("ABCDE").addHeader("WWW-Authenticate: challenge");
    if (responseCode == HttpURLConnection.HTTP_PROXY_AUTH) {
      response.addHeader("Proxy-Authenticate: Basic realm=\"protected area\"");
    }
 else     if (responseCode == HttpURLConnection.HTTP_UNAUTHORIZED) {
      response.addHeader("WWW-Authenticate: Basic realm=\"protected area\"");
    }
    server2.enqueue(response);
    server2.play();
    URL url=server2.getUrl("/");
    HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    assertEquals(responseCode,conn.getResponseCode());
    readAscii(conn);
    CacheResponse cached=cache.get(url.toURI(),"GET",Collections.<String,List<String>>emptyMap());
    if (shouldPut) {
      assertNotNull(Integer.toString(responseCode),cached);
      cached.getBody().close();
    }
 else {
      assertNull(Integer.toString(responseCode),cached);
    }
  }
  finally {
    server2.shutdown();
  }
}
