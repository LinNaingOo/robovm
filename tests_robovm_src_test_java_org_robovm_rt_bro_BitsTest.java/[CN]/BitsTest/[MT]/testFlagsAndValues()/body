{
  FlagsAndValues pos=FlagsAndValues.V1;
  pos=pos.set(FlagsAndValues.V1).set(FlagsAndValues.V4);
  assertEquals(1 | 4,pos.value());
  assertEquals(set(FlagsAndValues.V1,FlagsAndValues.V4,FlagsAndValues.O0),pos.asSet());
  assertEquals("FlagsAndValues(0x5 = V1(0x1) | V4(0x4) | O0(0x0))",pos.toString());
  pos=pos.set(FlagsAndValues.O1);
  assertEquals((1 << 4) | 1 | 4,pos.value());
  assertEquals(set(FlagsAndValues.V1,FlagsAndValues.V4,FlagsAndValues.O1),pos.asSet());
  assertEquals("FlagsAndValues(0x15 = V1(0x1) | V4(0x4) | O1(0x10))",pos.toString());
  pos=pos.set(FlagsAndValues.O2);
  assertEquals((2 << 4) | 1 | 4,pos.value());
  assertEquals(set(FlagsAndValues.V1,FlagsAndValues.V4,FlagsAndValues.O2),pos.asSet());
  assertEquals("FlagsAndValues(0x25 = V1(0x1) | V4(0x4) | O2(0x20))",pos.toString());
  pos=pos.set(FlagsAndValues.Unknown);
  assertEquals(0xffffffffL,pos.value());
  assertEquals(set(FlagsAndValues.Unknown),pos.asSet());
  assertEquals("FlagsAndValues(0xffffffff = Unknown(0xffffffff))",pos.toString());
}
