{
  Unit blockHead=block.getHead();
  Unit blockTail=block.getTail();
  ArrayList<ExceptionDest> blocksDests=null;
  ThrowableSet escapingThrowables=ThrowableSet.Manager.v().EMPTY;
  Map<Trap,ThrowableSet> trapToThrowables=null;
  int caughtCount=0;
  for (Iterator<Unit> unitIt=block.iterator(); unitIt.hasNext(); ) {
    Unit unit=(Unit)unitIt.next();
    Collection<ExceptionalUnitGraph.ExceptionDest> unitDests=unitGraph.getExceptionDests(unit);
    if (unitDests.size() != 1 && unit != blockHead && unit != blockTail) {
      throw new IllegalStateException("Multiple ExceptionDests associated with a unit which does not begin or end its block.");
    }
    for (Iterator<ExceptionalUnitGraph.ExceptionDest> destIt=unitDests.iterator(); destIt.hasNext(); ) {
      ExceptionalUnitGraph.ExceptionDest unitDest=destIt.next();
      if (unitDest.getTrap() == null) {
        try {
          escapingThrowables=escapingThrowables.add(unitDest.getThrowables());
        }
 catch (        ThrowableSet.AlreadyHasExclusionsException e) {
          if (escapingThrowables != ThrowableSet.Manager.v().EMPTY) {
            if (blocksDests == null) {
              blocksDests=new ArrayList<ExceptionDest>(10);
            }
            blocksDests.add(new ExceptionDest(null,escapingThrowables,null));
          }
          escapingThrowables=unitDest.getThrowables();
        }
      }
 else {
        if (unit != blockHead && unit != blockTail) {
          throw new IllegalStateException("Unit " + unit.toString() + " is not a block head or tail, yet it throws "+ unitDest.getThrowables()+ " to "+ unitDest.getTrap());
        }
        caughtCount++;
        if (trapToThrowables == null) {
          trapToThrowables=new HashMap<Trap,ThrowableSet>(unitDests.size() * 2);
        }
        Trap trap=unitDest.getTrap();
        ThrowableSet throwables=trapToThrowables.get(trap);
        if (throwables == null) {
          throwables=unitDest.getThrowables();
        }
 else {
          throwables=throwables.add(unitDest.getThrowables());
        }
        trapToThrowables.put(trap,throwables);
      }
    }
  }
  if (blocksDests == null) {
    blocksDests=new ArrayList<ExceptionDest>(caughtCount + 1);
  }
 else {
    blocksDests.ensureCapacity(blocksDests.size() + caughtCount);
  }
  if (escapingThrowables != ThrowableSet.Manager.v().EMPTY) {
    ExceptionDest escapingDest=new ExceptionDest(null,escapingThrowables,null);
    blocksDests.add(escapingDest);
  }
  if (trapToThrowables != null) {
    for (    Map.Entry<Trap,ThrowableSet> entry : trapToThrowables.entrySet()) {
      Trap trap=entry.getKey();
      Block trapBlock=(Block)unitToBlock.get(trap.getHandlerUnit());
      if (trapBlock == null) {
        throw new IllegalStateException("catching unit is not recorded as a block leader.");
      }
      ThrowableSet throwables=entry.getValue();
      ExceptionDest blockDest=new ExceptionDest(trap,throwables,trapBlock);
      blocksDests.add(blockDest);
    }
  }
  return blocksDests;
}
