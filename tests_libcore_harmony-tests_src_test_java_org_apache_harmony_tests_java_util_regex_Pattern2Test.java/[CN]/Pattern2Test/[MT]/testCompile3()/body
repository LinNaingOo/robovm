{
  Pattern p;
  Matcher m;
  p=Pattern.compile("a$");
  m=p.matcher("a\n");
  assertTrue(m.find());
  assertEquals("a",m.group());
  assertFalse(m.find());
  p=Pattern.compile("(a$)");
  m=p.matcher("a\n");
  assertTrue(m.find());
  assertEquals("a",m.group());
  assertEquals("a",m.group(1));
  assertFalse(m.find());
  p=Pattern.compile("^.*$",Pattern.MULTILINE);
  m=p.matcher("a\n");
  assertTrue(m.find());
  assertEquals("a",m.group());
  assertFalse(m.find());
  m=p.matcher("a\nb\n");
  assertTrue(m.find());
  assertEquals("a",m.group());
  assertTrue(m.find());
  assertEquals("b",m.group());
  assertFalse(m.find());
  m=p.matcher("a\nb");
  assertTrue(m.find());
  assertEquals("a",m.group());
  assertTrue(m.find());
  assertEquals("b",m.group());
  assertFalse(m.find());
  m=p.matcher("\naa\r\nbb\rcc\n\n");
  assertTrue(m.find());
  assertTrue(m.group().equals(""));
  assertTrue(m.find());
  assertEquals("aa",m.group());
  assertTrue(m.find());
  assertEquals("bb",m.group());
  assertTrue(m.find());
  assertEquals("cc",m.group());
  assertTrue(m.find());
  assertTrue(m.group().equals(""));
  assertFalse(m.find());
  m=p.matcher("a");
  assertTrue(m.find());
  assertEquals("a",m.group());
  assertFalse(m.find());
  m=p.matcher("");
  assertTrue(m.find());
  assertTrue(m.group().equals(""));
  assertFalse(m.find());
  p=Pattern.compile("^.*$");
  m=p.matcher("");
  assertTrue(m.find());
  assertTrue(m.group().equals(""));
  assertFalse(m.find());
}
