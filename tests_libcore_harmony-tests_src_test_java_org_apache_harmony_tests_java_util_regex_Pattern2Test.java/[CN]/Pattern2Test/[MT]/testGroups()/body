{
  Pattern p;
  Matcher m;
  p=Pattern.compile("(p[0-9]*)#?(q[0-9]*)");
  m=p.matcher("p1#q3p2q42p5p71p63#q888");
  assertTrue(m.find());
  assertEquals(0,m.start());
  assertEquals(5,m.end());
  assertEquals(2,m.groupCount());
  assertEquals(0,m.start(0));
  assertEquals(5,m.end(0));
  assertEquals(0,m.start(1));
  assertEquals(2,m.end(1));
  assertEquals(3,m.start(2));
  assertEquals(5,m.end(2));
  assertEquals("p1#q3",m.group());
  assertEquals("p1#q3",m.group(0));
  assertEquals("p1",m.group(1));
  assertEquals("q3",m.group(2));
  assertTrue(m.find());
  assertEquals(5,m.start());
  assertEquals(10,m.end());
  assertEquals(2,m.groupCount());
  assertEquals(10,m.end(0));
  assertEquals(5,m.start(1));
  assertEquals(7,m.end(1));
  assertEquals(7,m.start(2));
  assertEquals(10,m.end(2));
  assertEquals("p2q42",m.group());
  assertEquals("p2q42",m.group(0));
  assertEquals("p2",m.group(1));
  assertEquals("q42",m.group(2));
  assertTrue(m.find());
  assertEquals(15,m.start());
  assertEquals(23,m.end());
  assertEquals(2,m.groupCount());
  assertEquals(15,m.start(0));
  assertEquals(23,m.end(0));
  assertEquals(15,m.start(1));
  assertEquals(18,m.end(1));
  assertEquals(19,m.start(2));
  assertEquals(23,m.end(2));
  assertEquals("p63#q888",m.group());
  assertEquals("p63#q888",m.group(0));
  assertEquals("p63",m.group(1));
  assertEquals("q888",m.group(2));
  assertFalse(m.find());
}
