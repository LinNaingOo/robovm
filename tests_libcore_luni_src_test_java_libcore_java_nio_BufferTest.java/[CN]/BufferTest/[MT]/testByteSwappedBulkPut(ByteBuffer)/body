{
  b.position(1);
  char[] chars=new char[]{'\u2222','\u0102','\u0304','\u0506','\u0708','\u2222'};
  b.order(ByteOrder.BIG_ENDIAN).asCharBuffer().put(chars,1,4);
  assertEquals("00010203040506070800",toString(b));
  b.order(ByteOrder.LITTLE_ENDIAN).asCharBuffer().put(chars,1,4);
  assertEquals("00020104030605080700",toString(b));
  double[] doubles=new double[]{0,Double.longBitsToDouble(0x0102030405060708L),0};
  b.order(ByteOrder.BIG_ENDIAN).asDoubleBuffer().put(doubles,1,1);
  assertEquals("00010203040506070800",toString(b));
  b.order(ByteOrder.LITTLE_ENDIAN).asDoubleBuffer().put(doubles,1,1);
  assertEquals("00080706050403020100",toString(b));
  float[] floats=new float[]{0,Float.intBitsToFloat(0x01020304),Float.intBitsToFloat(0x05060708),0};
  b.order(ByteOrder.BIG_ENDIAN).asFloatBuffer().put(floats,1,2);
  assertEquals("00010203040506070800",toString(b));
  b.order(ByteOrder.LITTLE_ENDIAN).asFloatBuffer().put(floats,1,2);
  assertEquals("00040302010807060500",toString(b));
  int[] ints=new int[]{0,0x01020304,0x05060708,0};
  b.order(ByteOrder.BIG_ENDIAN).asIntBuffer().put(ints,1,2);
  assertEquals("00010203040506070800",toString(b));
  b.order(ByteOrder.LITTLE_ENDIAN).asIntBuffer().put(ints,1,2);
  assertEquals("00040302010807060500",toString(b));
  long[] longs=new long[]{0,0x0102030405060708L,0};
  b.order(ByteOrder.BIG_ENDIAN).asLongBuffer().put(longs,1,1);
  assertEquals("00010203040506070800",toString(b));
  b.order(ByteOrder.LITTLE_ENDIAN).asLongBuffer().put(longs,1,1);
  assertEquals("00080706050403020100",toString(b));
  short[] shorts=new short[]{0,0x0102,0x0304,0x0506,0x0708,0};
  b.order(ByteOrder.BIG_ENDIAN).asShortBuffer().put(shorts,1,4);
  assertEquals("00010203040506070800",toString(b));
  b.order(ByteOrder.LITTLE_ENDIAN).asShortBuffer().put(shorts,1,4);
  assertEquals("00020104030605080700",toString(b));
}
