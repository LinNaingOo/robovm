{
  if ('a' <= c && c <= 'z') {
    return (char)(c - ('a' - 'A'));
  }
  if (c < 181) {
    return c;
  }
  if (c < 1000) {
    return (char)uppercaseValuesCache[(int)c - 181];
  }
  int result=BinarySearch.binarySearchRange(uppercaseKeys,c);
  if (result >= 0) {
    boolean by2=false;
    char start=uppercaseKeys.charAt(result);
    char end=uppercaseValues[result * 2];
    if ((start & 0x8000) != (end & 0x8000)) {
      end^=0x8000;
      by2=true;
    }
    if (c <= end) {
      if (by2 && (c & 1) != (start & 1)) {
        return c;
      }
      char mapping=uppercaseValues[result * 2 + 1];
      return (char)(c + mapping);
    }
  }
  return c;
}
