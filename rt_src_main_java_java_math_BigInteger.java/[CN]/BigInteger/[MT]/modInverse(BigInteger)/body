{
  if (m.sign <= 0) {
    throw new ArithmeticException(Messages.getString("math.18"));
  }
  if (!(testBit(0) || m.testBit(0))) {
    throw new ArithmeticException(Messages.getString("math.19"));
  }
  if (m.isOne()) {
    return ZERO;
  }
  BigInteger res=Division.modInverseMontgomery(abs().mod(m),m);
  if (res.sign == 0) {
    throw new ArithmeticException(Messages.getString("math.19"));
  }
  res=((sign < 0) ? m.subtract(res) : res);
  return res;
}
