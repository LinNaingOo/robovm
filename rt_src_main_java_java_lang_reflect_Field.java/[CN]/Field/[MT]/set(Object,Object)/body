{
  checkAccess(object,true);
  checkReceiver(object);
  Class<?> type=getType();
  long address=getAddress(object);
  if (type.isPrimitive()) {
    if (value == null) {
      throwSetConversionException(type,null);
    }
    if (value instanceof Boolean) {
      setBoolean(address,((Boolean)value).booleanValue(),type,Boolean.TYPE);
    }
 else     if (value instanceof Byte) {
      setByte(address,((Byte)value).byteValue(),type,Byte.TYPE);
    }
 else     if (value instanceof Short) {
      setShort(address,((Short)value).shortValue(),type,Short.TYPE);
    }
 else     if (value instanceof Character) {
      setChar(address,((Character)value).charValue(),type,Character.TYPE);
    }
 else     if (value instanceof Integer) {
      setInt(address,((Integer)value).intValue(),type,Integer.TYPE);
    }
 else     if (value instanceof Long) {
      setLong(address,((Long)value).longValue(),type,Long.TYPE);
    }
 else     if (value instanceof Float) {
      setFloat(address,((Float)value).floatValue(),type,Float.TYPE);
    }
 else     if (value instanceof Double) {
      setDouble(address,((Double)value).doubleValue(),type,Double.TYPE);
    }
 else {
      throwSetConversionException(type,value.getClass());
    }
  }
 else {
    if (value != null && !getType().isInstance(value)) {
      throw new IllegalArgumentException(String.format("Can not set %s field %s.%s to %s",getType().getName(),getDeclaringClass().getName(),getName(),value.getClass().getName()));
    }
    VM.setObject(address,value);
  }
}
