{
  KeyFactory factory=null;
  try {
    factory=KeyFactory.getInstance(TEST_KEYFACTORY_NAME);
  }
 catch (  NoSuchAlgorithmException e) {
    fail("unexpected exception: " + e);
  }
  assertNotNull(factory);
{
    Key[] keys={new TestPrivateKey(),new TestPublicKey(),new TestPrivateKey(new byte[]{42,41,40}),new TestPublicKey(new byte[]{40,41,42})};
    Class[] keySpecs={TestPrivateKeySpec.class,TestPublicKeySpec.class,TestPrivateKeySpec.class,TestPublicKeySpec.class};
    for (int i=0; i < keys.length; i++) {
      Key key=keys[i];
      Class keySpec=keySpecs[i];
      String message="getKeySpec(" + key.toString() + ", "+ keySpec.toString()+ ")";
      try {
        KeySpec spec=factory.getKeySpec(key,keySpec);
        assertNotNull(spec);
        assertTrue(spec.getClass() == keySpec);
      }
 catch (      InvalidKeySpecException e) {
        fail("unexpected exception: " + e);
      }
    }
  }
{
    Key[] keys={new AnotherKey(),null,new TestPrivateKey(),null};
    Class[] keySpecs={KeySpec.class,TestPrivateKeySpec.class,null,null};
    Class[] exceptions={InvalidKeySpecException.class,NullPointerException.class,InvalidKeySpecException.class,NullPointerException.class};
    for (int i=0; i < keys.length; i++) {
      Key key=keys[i];
      Class keySpec=keySpecs[i];
      exceptionThrown=false;
      String message="getKeySpec(" + (key == null ? "null" : key.toString()) + ", "+ (keySpec == null ? "null" : keySpec.toString())+ ")";
      try {
        factory.getKeySpec(key,keySpec);
      }
 catch (      Exception e) {
        checkException(message,e,exceptions[i]);
      }
 finally {
        checkException(message,null,exceptions[i]);
      }
    }
  }
}
