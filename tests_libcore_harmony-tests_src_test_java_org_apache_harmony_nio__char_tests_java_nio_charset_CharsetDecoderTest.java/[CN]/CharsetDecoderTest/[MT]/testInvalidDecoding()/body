{
  byte[][] invalidSequences=new byte[][]{{(byte)0xC0,(byte)0x80},{(byte)0xC0,(byte)0xC1},{(byte)0x2F,(byte)0xC0,(byte)0xAE,(byte)0x2E,(byte)0x2F},{(byte)0xF8},{(byte)0x80}};
  CharsetDecoder decoder=Charset.forName("UTF-8").newDecoder();
  decoder.onMalformedInput(CodingErrorAction.REPORT);
  decoder.onUnmappableCharacter(CodingErrorAction.REPORT);
  for (  byte[] bytes : invalidSequences) {
    try {
      CharBuffer cb=decoder.decode(ByteBuffer.wrap(bytes));
      fail("No exception thrown on " + Arrays.toString(bytes) + " '"+ cb+ "'");
    }
 catch (    MalformedInputException expected) {
    }
  }
  for (  byte[] bytes : invalidSequences) {
    try {
      ByteBuffer bb=ByteBuffer.allocateDirect(8);
      bb.put(bytes).flip();
      CharBuffer cb=decoder.decode(bb);
      fail("No exception thrown on " + Arrays.toString(bytes) + " '"+ cb+ "'");
    }
 catch (    MalformedInputException expected) {
    }
  }
}
