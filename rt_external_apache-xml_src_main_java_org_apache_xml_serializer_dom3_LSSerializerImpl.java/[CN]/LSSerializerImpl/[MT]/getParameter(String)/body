{
  if (name.equalsIgnoreCase(DOMConstants.DOM_COMMENTS)) {
    return ((fFeatures & COMMENTS) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_CDATA_SECTIONS)) {
    return ((fFeatures & CDATA) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_ENTITIES)) {
    return ((fFeatures & ENTITIES) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_NAMESPACES)) {
    return ((fFeatures & NAMESPACES) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_NAMESPACE_DECLARATIONS)) {
    return ((fFeatures & NAMESPACEDECLS) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_SPLIT_CDATA)) {
    return ((fFeatures & SPLITCDATA) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_WELLFORMED)) {
    return ((fFeatures & WELLFORMED) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_DISCARD_DEFAULT_CONTENT)) {
    return ((fFeatures & DISCARDDEFAULT) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_FORMAT_PRETTY_PRINT)) {
    return ((fFeatures & PRETTY_PRINT) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_XMLDECL)) {
    return ((fFeatures & XMLDECL) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_ELEMENT_CONTENT_WHITESPACE)) {
    return ((fFeatures & ELEM_CONTENT_WHITESPACE) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_FORMAT_PRETTY_PRINT)) {
    return ((fFeatures & PRETTY_PRINT) != 0) ? Boolean.TRUE : Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_IGNORE_UNKNOWN_CHARACTER_DENORMALIZATIONS)) {
    return Boolean.TRUE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_CANONICAL_FORM) || name.equalsIgnoreCase(DOMConstants.DOM_CHECK_CHAR_NORMALIZATION) || name.equalsIgnoreCase(DOMConstants.DOM_DATATYPE_NORMALIZATION)|| name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE)|| name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE_IF_SCHEMA)) {
    return Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_INFOSET)) {
    if ((fFeatures & ENTITIES) == 0 && (fFeatures & CDATA) == 0 && (fFeatures & ELEM_CONTENT_WHITESPACE) != 0 && (fFeatures & NAMESPACES) != 0 && (fFeatures & NAMESPACEDECLS) != 0 && (fFeatures & WELLFORMED) != 0 && (fFeatures & COMMENTS) != 0) {
      return Boolean.TRUE;
    }
    return Boolean.FALSE;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_ERROR_HANDLER)) {
    return fDOMErrorHandler;
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_SCHEMA_LOCATION) || name.equalsIgnoreCase(DOMConstants.DOM_SCHEMA_TYPE)) {
    return null;
  }
 else {
    String msg=Utils.messages.createMessage(MsgKey.ER_FEATURE_NOT_FOUND,new Object[]{name});
    throw new DOMException(DOMException.NOT_FOUND_ERR,msg);
  }
}
