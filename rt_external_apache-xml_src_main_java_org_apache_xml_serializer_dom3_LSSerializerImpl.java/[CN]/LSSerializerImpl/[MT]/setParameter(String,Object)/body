{
  if (value instanceof Boolean) {
    boolean state=((Boolean)value).booleanValue();
    if (name.equalsIgnoreCase(DOMConstants.DOM_COMMENTS)) {
      fFeatures=state ? fFeatures | COMMENTS : fFeatures & ~COMMENTS;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_COMMENTS,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_COMMENTS,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_CDATA_SECTIONS)) {
      fFeatures=state ? fFeatures | CDATA : fFeatures & ~CDATA;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_CDATA_SECTIONS,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_CDATA_SECTIONS,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_ENTITIES)) {
      fFeatures=state ? fFeatures | ENTITIES : fFeatures & ~ENTITIES;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_ENTITIES,DOMConstants.DOM3_EXPLICIT_TRUE);
        fDOMConfigProperties.setProperty(DOMConstants.S_XERCES_PROPERTIES_NS + DOMConstants.DOM_ENTITIES,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_ENTITIES,DOMConstants.DOM3_EXPLICIT_FALSE);
        fDOMConfigProperties.setProperty(DOMConstants.S_XERCES_PROPERTIES_NS + DOMConstants.DOM_ENTITIES,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_NAMESPACES)) {
      fFeatures=state ? fFeatures | NAMESPACES : fFeatures & ~NAMESPACES;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_NAMESPACES,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_NAMESPACES,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_NAMESPACE_DECLARATIONS)) {
      fFeatures=state ? fFeatures | NAMESPACEDECLS : fFeatures & ~NAMESPACEDECLS;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_NAMESPACE_DECLARATIONS,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_NAMESPACE_DECLARATIONS,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_SPLIT_CDATA)) {
      fFeatures=state ? fFeatures | SPLITCDATA : fFeatures & ~SPLITCDATA;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_SPLIT_CDATA,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_SPLIT_CDATA,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_WELLFORMED)) {
      fFeatures=state ? fFeatures | WELLFORMED : fFeatures & ~WELLFORMED;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_WELLFORMED,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_WELLFORMED,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_DISCARD_DEFAULT_CONTENT)) {
      fFeatures=state ? fFeatures | DISCARDDEFAULT : fFeatures & ~DISCARDDEFAULT;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_DISCARD_DEFAULT_CONTENT,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_DISCARD_DEFAULT_CONTENT,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_FORMAT_PRETTY_PRINT)) {
      fFeatures=state ? fFeatures | PRETTY_PRINT : fFeatures & ~PRETTY_PRINT;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_FORMAT_PRETTY_PRINT,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_FORMAT_PRETTY_PRINT,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_XMLDECL)) {
      fFeatures=state ? fFeatures | XMLDECL : fFeatures & ~XMLDECL;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_XSL_OUTPUT_OMIT_XML_DECL,"no");
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_XSL_OUTPUT_OMIT_XML_DECL,"yes");
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_ELEMENT_CONTENT_WHITESPACE)) {
      fFeatures=state ? fFeatures | ELEM_CONTENT_WHITESPACE : fFeatures & ~ELEM_CONTENT_WHITESPACE;
      if (state) {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_ELEMENT_CONTENT_WHITESPACE,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_ELEMENT_CONTENT_WHITESPACE,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_IGNORE_UNKNOWN_CHARACTER_DENORMALIZATIONS)) {
      if (!state) {
        String msg=Utils.messages.createMessage(MsgKey.ER_FEATURE_NOT_SUPPORTED,new Object[]{name});
        throw new DOMException(DOMException.NOT_SUPPORTED_ERR,msg);
      }
 else {
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_IGNORE_UNKNOWN_CHARACTER_DENORMALIZATIONS,DOMConstants.DOM3_EXPLICIT_TRUE);
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_CANONICAL_FORM) || name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE_IF_SCHEMA) || name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE)|| name.equalsIgnoreCase(DOMConstants.DOM_CHECK_CHAR_NORMALIZATION)|| name.equalsIgnoreCase(DOMConstants.DOM_DATATYPE_NORMALIZATION)) {
      if (state) {
        String msg=Utils.messages.createMessage(MsgKey.ER_FEATURE_NOT_SUPPORTED,new Object[]{name});
        throw new DOMException(DOMException.NOT_SUPPORTED_ERR,msg);
      }
 else {
        if (name.equalsIgnoreCase(DOMConstants.DOM_CANONICAL_FORM)) {
          fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_CANONICAL_FORM,DOMConstants.DOM3_EXPLICIT_FALSE);
        }
 else         if (name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE_IF_SCHEMA)) {
          fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_VALIDATE_IF_SCHEMA,DOMConstants.DOM3_EXPLICIT_FALSE);
        }
 else         if (name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE)) {
          fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_VALIDATE,DOMConstants.DOM3_EXPLICIT_FALSE);
        }
 else         if (name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE_IF_SCHEMA)) {
          fDOMConfigProperties.setProperty(DOMConstants.DOM_CHECK_CHAR_NORMALIZATION + DOMConstants.DOM_CHECK_CHAR_NORMALIZATION,DOMConstants.DOM3_EXPLICIT_FALSE);
        }
 else         if (name.equalsIgnoreCase(DOMConstants.DOM_DATATYPE_NORMALIZATION)) {
          fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_DATATYPE_NORMALIZATION,DOMConstants.DOM3_EXPLICIT_FALSE);
        }
      }
    }
 else     if (name.equalsIgnoreCase(DOMConstants.DOM_INFOSET)) {
      if (state) {
        fFeatures&=~ENTITIES;
        fFeatures&=~CDATA;
        fFeatures&=~SCHEMAVALIDATE;
        fFeatures&=~DTNORMALIZE;
        fFeatures|=NAMESPACES;
        fFeatures|=NAMESPACEDECLS;
        fFeatures|=WELLFORMED;
        fFeatures|=ELEM_CONTENT_WHITESPACE;
        fFeatures|=COMMENTS;
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_NAMESPACES,DOMConstants.DOM3_EXPLICIT_TRUE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_NAMESPACE_DECLARATIONS,DOMConstants.DOM3_EXPLICIT_TRUE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_COMMENTS,DOMConstants.DOM3_EXPLICIT_TRUE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_ELEMENT_CONTENT_WHITESPACE,DOMConstants.DOM3_EXPLICIT_TRUE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_WELLFORMED,DOMConstants.DOM3_EXPLICIT_TRUE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_ENTITIES,DOMConstants.DOM3_EXPLICIT_FALSE);
        fDOMConfigProperties.setProperty(DOMConstants.S_XERCES_PROPERTIES_NS + DOMConstants.DOM_ENTITIES,DOMConstants.DOM3_EXPLICIT_FALSE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_CDATA_SECTIONS,DOMConstants.DOM3_EXPLICIT_FALSE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_VALIDATE_IF_SCHEMA,DOMConstants.DOM3_EXPLICIT_FALSE);
        fDOMConfigProperties.setProperty(DOMConstants.S_DOM3_PROPERTIES_NS + DOMConstants.DOM_DATATYPE_NORMALIZATION,DOMConstants.DOM3_EXPLICIT_FALSE);
      }
    }
 else {
      if (name.equalsIgnoreCase(DOMConstants.DOM_ERROR_HANDLER) || name.equalsIgnoreCase(DOMConstants.DOM_SCHEMA_LOCATION) || name.equalsIgnoreCase(DOMConstants.DOM_SCHEMA_TYPE)) {
        String msg=Utils.messages.createMessage(MsgKey.ER_TYPE_MISMATCH_ERR,new Object[]{name});
        throw new DOMException(DOMException.TYPE_MISMATCH_ERR,msg);
      }
      String msg=Utils.messages.createMessage(MsgKey.ER_FEATURE_NOT_FOUND,new Object[]{name});
      throw new DOMException(DOMException.NOT_FOUND_ERR,msg);
    }
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_ERROR_HANDLER)) {
    if (value == null || value instanceof DOMErrorHandler) {
      fDOMErrorHandler=(DOMErrorHandler)value;
    }
 else {
      String msg=Utils.messages.createMessage(MsgKey.ER_TYPE_MISMATCH_ERR,new Object[]{name});
      throw new DOMException(DOMException.TYPE_MISMATCH_ERR,msg);
    }
  }
 else   if (name.equalsIgnoreCase(DOMConstants.DOM_SCHEMA_LOCATION) || name.equalsIgnoreCase(DOMConstants.DOM_SCHEMA_TYPE)) {
    if (value != null) {
      if (!(value instanceof String)) {
        String msg=Utils.messages.createMessage(MsgKey.ER_TYPE_MISMATCH_ERR,new Object[]{name});
        throw new DOMException(DOMException.TYPE_MISMATCH_ERR,msg);
      }
      String msg=Utils.messages.createMessage(MsgKey.ER_FEATURE_NOT_SUPPORTED,new Object[]{name});
      throw new DOMException(DOMException.NOT_SUPPORTED_ERR,msg);
    }
  }
 else {
    if (name.equalsIgnoreCase(DOMConstants.DOM_COMMENTS) || name.equalsIgnoreCase(DOMConstants.DOM_CDATA_SECTIONS) || name.equalsIgnoreCase(DOMConstants.DOM_ENTITIES)|| name.equalsIgnoreCase(DOMConstants.DOM_NAMESPACES)|| name.equalsIgnoreCase(DOMConstants.DOM_NAMESPACE_DECLARATIONS)|| name.equalsIgnoreCase(DOMConstants.DOM_SPLIT_CDATA)|| name.equalsIgnoreCase(DOMConstants.DOM_WELLFORMED)|| name.equalsIgnoreCase(DOMConstants.DOM_DISCARD_DEFAULT_CONTENT)|| name.equalsIgnoreCase(DOMConstants.DOM_FORMAT_PRETTY_PRINT)|| name.equalsIgnoreCase(DOMConstants.DOM_XMLDECL)|| name.equalsIgnoreCase(DOMConstants.DOM_ELEMENT_CONTENT_WHITESPACE)|| name.equalsIgnoreCase(DOMConstants.DOM_IGNORE_UNKNOWN_CHARACTER_DENORMALIZATIONS)|| name.equalsIgnoreCase(DOMConstants.DOM_CANONICAL_FORM)|| name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE_IF_SCHEMA)|| name.equalsIgnoreCase(DOMConstants.DOM_VALIDATE)|| name.equalsIgnoreCase(DOMConstants.DOM_CHECK_CHAR_NORMALIZATION)|| name.equalsIgnoreCase(DOMConstants.DOM_DATATYPE_NORMALIZATION)|| name.equalsIgnoreCase(DOMConstants.DOM_INFOSET)) {
      String msg=Utils.messages.createMessage(MsgKey.ER_TYPE_MISMATCH_ERR,new Object[]{name});
      throw new DOMException(DOMException.TYPE_MISMATCH_ERR,msg);
    }
    String msg=Utils.messages.createMessage(MsgKey.ER_FEATURE_NOT_FOUND,new Object[]{name});
    throw new DOMException(DOMException.NOT_FOUND_ERR,msg);
  }
}
