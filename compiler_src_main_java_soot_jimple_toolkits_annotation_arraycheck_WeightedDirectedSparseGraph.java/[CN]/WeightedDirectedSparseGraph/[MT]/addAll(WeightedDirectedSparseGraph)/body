{
  WeightedDirectedSparseGraph another=othergraph;
  this.isUnknown=another.isUnknown;
  this.clear();
  Hashtable<Object,Hashtable<Object,IntContainer>> othersources=another.sources;
  Iterator<Object> othersrcIt=othersources.keySet().iterator();
  while (othersrcIt.hasNext()) {
    Object src=othersrcIt.next();
    Hashtable othertargets=othersources.get(src);
    Hashtable<Object,IntContainer> thistargets=new Hashtable<Object,IntContainer>(othersources.size());
    this.sources.put(src,thistargets);
    Iterator targetIt=othertargets.keySet().iterator();
    while (targetIt.hasNext()) {
      Object target=targetIt.next();
      IntContainer otherweight=(IntContainer)othertargets.get(target);
      thistargets.put(target,otherweight.dup());
    }
  }
}
