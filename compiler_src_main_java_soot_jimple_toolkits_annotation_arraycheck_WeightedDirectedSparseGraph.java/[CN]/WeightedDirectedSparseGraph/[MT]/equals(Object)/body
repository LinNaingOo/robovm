{
  if (other == null)   return false;
  if (!(other instanceof WeightedDirectedSparseGraph))   return false;
  WeightedDirectedSparseGraph othergraph=(WeightedDirectedSparseGraph)other;
  if (this.isUnknown != othergraph.isUnknown)   return false;
  if (this.isUnknown)   return true;
  Hashtable<Object,Hashtable<Object,IntContainer>> othersources=othergraph.sources;
  if (this.sources.size() != othersources.size())   return false;
  Iterator<Object> sourceIt=this.sources.keySet().iterator();
  while (sourceIt.hasNext()) {
    Object src=sourceIt.next();
    Hashtable thistarget=sources.get(src);
    Hashtable othertarget=othersources.get(src);
    if (othertarget == null)     return false;
    if (thistarget.size() != othertarget.size())     return false;
    Iterator targetIt=thistarget.keySet().iterator();
    while (targetIt.hasNext()) {
      Object target=targetIt.next();
      IntContainer thisweight=(IntContainer)thistarget.get(target);
      IntContainer otherweight=(IntContainer)othertarget.get(target);
      if (otherweight == null)       return false;
      if (thisweight.value != otherweight.value)       return false;
    }
  }
  return true;
}
