{
  if (Options.v().time())   Timers.v().defsTimer.start();
  if (Options.v().verbose())   G.v().out.println("[" + g.getBody().getMethod().getName() + "]     Constructing SimpleLocalDefs...");
  LocalDefsFlowAnalysis analysis=new LocalDefsFlowAnalysis(g);
  if (Options.v().time())   Timers.v().defsPostTimer.start();
{
    Iterator unitIt=g.iterator();
    localUnitPairToDefs=new HashMap<LocalUnitPair,List>(g.size() * 2 + 1,0.7f);
    while (unitIt.hasNext()) {
      Unit s=(Unit)unitIt.next();
      Iterator boxIt=s.getUseBoxes().iterator();
      while (boxIt.hasNext()) {
        ValueBox box=(ValueBox)boxIt.next();
        if (box.getValue() instanceof Local) {
          Local l=(Local)box.getValue();
          LocalUnitPair pair=new LocalUnitPair(l,s);
          if (!localUnitPairToDefs.containsKey(pair)) {
            IntPair intPair=analysis.localToIntPair.get(l);
            ArrayPackedSet value=(ArrayPackedSet)analysis.getFlowBefore(s);
            List unitLocalDefs=value.toList(intPair.op1,intPair.op2);
            localUnitPairToDefs.put(pair,Collections.unmodifiableList(unitLocalDefs));
          }
        }
      }
    }
  }
  if (Options.v().time())   Timers.v().defsPostTimer.end();
  if (Options.v().time())   Timers.v().defsTimer.end();
  if (Options.v().verbose())   G.v().out.println("[" + g.getBody().getMethod().getName() + "]     SimpleLocalDefs finished.");
}
