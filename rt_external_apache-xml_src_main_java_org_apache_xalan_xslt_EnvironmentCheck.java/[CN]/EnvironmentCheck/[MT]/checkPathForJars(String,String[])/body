{
  if ((null == cp) || (null == jars) || (0 == cp.length())|| (0 == jars.length))   return null;
  Vector v=new Vector();
  StringTokenizer st=new StringTokenizer(cp,File.pathSeparator);
  while (st.hasMoreTokens()) {
    String filename=st.nextToken();
    for (int i=0; i < jars.length; i++) {
      if (filename.indexOf(jars[i]) > -1) {
        File f=new File(filename);
        if (f.exists()) {
          try {
            Hashtable h=new Hashtable(2);
            h.put(jars[i] + "-path",f.getAbsolutePath());
            if (!("xalan.jar".equalsIgnoreCase(jars[i]))) {
              h.put(jars[i] + "-apparent.version",getApparentVersion(jars[i],f.length()));
            }
            v.addElement(h);
          }
 catch (          Exception e) {
          }
        }
 else {
          Hashtable h=new Hashtable(2);
          h.put(jars[i] + "-path",WARNING + " Classpath entry: " + filename+ " does not exist");
          h.put(jars[i] + "-apparent.version",CLASS_NOTPRESENT);
          v.addElement(h);
        }
      }
    }
  }
  return v;
}
