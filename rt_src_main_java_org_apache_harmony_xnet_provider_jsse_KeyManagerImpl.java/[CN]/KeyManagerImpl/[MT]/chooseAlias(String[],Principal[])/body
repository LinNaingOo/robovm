{
  if (keyType == null || keyType.length == 0) {
    return null;
  }
  Vector<String> found=new Vector<String>();
  for (Enumeration<String> aliases=hash.keys(); aliases.hasMoreElements(); ) {
    final String alias=aliases.nextElement();
    final KeyStore.PrivateKeyEntry entry=hash.get(alias);
    final Certificate[] certs=entry.getCertificateChain();
    final String alg=certs[0].getPublicKey().getAlgorithm();
    for (int i=0; i < keyType.length; i++) {
      if (alg.equals(keyType[i])) {
        if (issuers != null && issuers.length != 0) {
          loop:           for (int ii=0; ii < certs.length; ii++) {
            if (certs[ii] instanceof X509Certificate) {
              X500Principal issuer=((X509Certificate)certs[ii]).getIssuerX500Principal();
              for (int iii=0; iii < issuers.length; iii++) {
                if (issuer.equals(issuers[iii])) {
                  found.add(alias);
                  break loop;
                }
              }
            }
          }
        }
 else {
          found.add(alias);
        }
      }
    }
  }
  if (!found.isEmpty()) {
    return found.toArray(new String[found.size()]);
  }
  return null;
}
