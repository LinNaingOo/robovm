{
  if (closed) {
    throw new IOException(Messages.getString("luni.24"));
  }
  if (buffer == null) {
    throw new NullPointerException();
  }
  if (offset < 0 || count < 0 || offset > buffer.length || buffer.length - offset < count) {
    throw new ArrayIndexOutOfBoundsException(Messages.getString("luni.13"));
  }
  if (limit >= 0) {
    if (count > limit && fixedMod) {
      throw new IOException(Messages.getString("luni.26"));
    }
    limit-=count;
    cache.write(buffer,offset,count);
    if (limit == 0) {
      socketOut.write(cache.toByteArray());
    }
  }
 else {
    if (!writeToSocket || cache.size() + count < cacheLength) {
      cache.write(buffer,offset,count);
    }
 else {
      output(Integer.toHexString(cacheLength) + "\r\n");
      int writeNum=cacheLength - cache.size();
      cache.write(buffer,offset,writeNum);
      socketOut.write(cache.toByteArray());
      output("\r\n");
      cache.reset();
      int left=count - writeNum;
      int position=offset + writeNum;
      while (left > cacheLength) {
        output(Integer.toHexString(cacheLength) + "\r\n");
        socketOut.write(buffer,position,cacheLength);
        output("\r\n");
        left=left - cacheLength;
        position=position + cacheLength;
      }
      cache.write(buffer,position,left);
    }
  }
}
