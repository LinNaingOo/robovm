{
  Pattern p=Pattern.compile(" ");
  String input="poodle zoo";
  String tokens[];
  tokens=p.split(input,1);
  assertEquals(1,tokens.length);
  assertTrue(tokens[0].equals(input));
  tokens=p.split(input,2);
  assertEquals(2,tokens.length);
  assertEquals("poodle",tokens[0]);
  assertEquals("zoo",tokens[1]);
  tokens=p.split(input,5);
  assertEquals(2,tokens.length);
  assertEquals("poodle",tokens[0]);
  assertEquals("zoo",tokens[1]);
  tokens=p.split(input,-2);
  assertEquals(2,tokens.length);
  assertEquals("poodle",tokens[0]);
  assertEquals("zoo",tokens[1]);
  tokens=p.split(input,0);
  assertEquals(2,tokens.length);
  assertEquals("poodle",tokens[0]);
  assertEquals("zoo",tokens[1]);
  tokens=p.split(input);
  assertEquals(2,tokens.length);
  assertEquals("poodle",tokens[0]);
  assertEquals("zoo",tokens[1]);
  p=Pattern.compile("d");
  tokens=p.split(input,1);
  assertEquals(1,tokens.length);
  assertTrue(tokens[0].equals(input));
  tokens=p.split(input,2);
  assertEquals(2,tokens.length);
  assertEquals("poo",tokens[0]);
  assertEquals("le zoo",tokens[1]);
  tokens=p.split(input,5);
  assertEquals(2,tokens.length);
  assertEquals("poo",tokens[0]);
  assertEquals("le zoo",tokens[1]);
  tokens=p.split(input,-2);
  assertEquals(2,tokens.length);
  assertEquals("poo",tokens[0]);
  assertEquals("le zoo",tokens[1]);
  tokens=p.split(input,0);
  assertEquals(2,tokens.length);
  assertEquals("poo",tokens[0]);
  assertEquals("le zoo",tokens[1]);
  tokens=p.split(input);
  assertEquals(2,tokens.length);
  assertEquals("poo",tokens[0]);
  assertEquals("le zoo",tokens[1]);
  p=Pattern.compile("o");
  tokens=p.split(input,1);
  assertEquals(1,tokens.length);
  assertTrue(tokens[0].equals(input));
  tokens=p.split(input,2);
  assertEquals(2,tokens.length);
  assertEquals("p",tokens[0]);
  assertEquals("odle zoo",tokens[1]);
  tokens=p.split(input,5);
  assertEquals(5,tokens.length);
  assertEquals("p",tokens[0]);
  assertTrue(tokens[1].equals(""));
  assertEquals("dle z",tokens[2]);
  assertTrue(tokens[3].equals(""));
  assertTrue(tokens[4].equals(""));
  tokens=p.split(input,-2);
  assertEquals(5,tokens.length);
  assertEquals("p",tokens[0]);
  assertTrue(tokens[1].equals(""));
  assertEquals("dle z",tokens[2]);
  assertTrue(tokens[3].equals(""));
  assertTrue(tokens[4].equals(""));
  tokens=p.split(input,0);
  assertEquals(3,tokens.length);
  assertEquals("p",tokens[0]);
  assertTrue(tokens[1].equals(""));
  assertEquals("dle z",tokens[2]);
  tokens=p.split(input);
  assertEquals(3,tokens.length);
  assertEquals("p",tokens[0]);
  assertTrue(tokens[1].equals(""));
  assertEquals("dle z",tokens[2]);
}
