{
  String testPattern="(abb)";
  String testString="cccabbabbabbabbabb";
  Pattern pat=Pattern.compile(testPattern);
  Matcher mat=pat.matcher(testString);
  int start=3;
  int end=6;
  int j;
  for (j=0; j < 3; j++) {
    while (mat.find(start + j - 2)) {
      assertEquals(start,mat.start(1));
      assertEquals(end,mat.end(1));
      start=end;
      end+=3;
    }
    start=6;
    end=9;
  }
  testPattern="(\\d{1,3})";
  testString="aaaa123456789045";
  Pattern pat2=Pattern.compile(testPattern);
  Matcher mat2=pat2.matcher(testString);
  start=4;
  int length=3;
  for (j=0; j < length; j++) {
    for (int i=4 + j; i < testString.length() - length; i+=length) {
      mat2.find(i);
      assertEquals(testString.substring(i,i + length),mat2.group(1));
    }
  }
  String string3="Brave new world";
  Pattern pat3=Pattern.compile("new");
  Matcher mat3=pat3.matcher(string3);
  try {
    mat3.find(-1);
    fail();
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  assertFalse(mat3.find(string3.length()));
  try {
    mat3.find(string3.length() + 1);
    fail();
  }
 catch (  IndexOutOfBoundsException expected) {
  }
  assertTrue(mat3.find(6));
  assertFalse(mat3.find(7));
  mat3.region(7,10);
  assertFalse(mat3.find());
  assertTrue(mat3.find(3));
  assertTrue(mat3.find(6));
  assertFalse(mat3.find(7));
  mat3.region(1,4);
  assertFalse(mat3.find());
  assertTrue(mat3.find(5));
}
