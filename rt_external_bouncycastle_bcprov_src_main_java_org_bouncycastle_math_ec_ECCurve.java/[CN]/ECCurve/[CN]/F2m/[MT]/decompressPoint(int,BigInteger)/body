{
  ECFieldElement xp=fromBigInteger(X1);
  ECFieldElement yp=null;
  if (xp.toBigInteger().equals(ECConstants.ZERO)) {
    yp=(ECFieldElement.F2m)b;
    for (int i=0; i < m - 1; i++) {
      yp=yp.square();
    }
  }
 else {
    ECFieldElement beta=xp.add(a).add(b.multiply(xp.square().invert()));
    ECFieldElement z=solveQuadradicEquation(beta);
    if (z == null) {
      throw new IllegalArgumentException("Invalid point compression");
    }
    int zBit=z.toBigInteger().testBit(0) ? 1 : 0;
    if (zBit != yTilde) {
      z=z.add(fromBigInteger(ECConstants.ONE));
    }
    yp=xp.multiply(z);
  }
  return new ECPoint.F2m(this,xp,yp,true);
}
