{
  if (man == null || signatures.size() == 0) {
    return null;
  }
  Attributes attributes=man.getAttributes(name);
  if (attributes == null) {
    return null;
  }
  ArrayList<Certificate> certs=new ArrayList<Certificate>();
  Iterator<Map.Entry<String,HashMap<String,Attributes>>> it=signatures.entrySet().iterator();
  while (it.hasNext()) {
    Map.Entry<String,HashMap<String,Attributes>> entry=it.next();
    HashMap<String,Attributes> hm=entry.getValue();
    if (hm.get(name) != null) {
      String signatureFile=entry.getKey();
      certs.addAll(getSignerCertificates(signatureFile,certificates));
    }
  }
  if (certs.isEmpty()) {
    return null;
  }
  Certificate[] certificatesArray=certs.toArray(new Certificate[certs.size()]);
  for (int i=0; i < DIGEST_ALGORITHMS.length; i++) {
    final String algorithm=DIGEST_ALGORITHMS[i];
    final String hash=attributes.getValue(algorithm + "-Digest");
    if (hash == null) {
      continue;
    }
    byte[] hashBytes=hash.getBytes(StandardCharsets.ISO_8859_1);
    try {
      return new VerifierEntry(name,MessageDigest.getInstance(algorithm),hashBytes,certificatesArray);
    }
 catch (    NoSuchAlgorithmException e) {
    }
  }
  return null;
}
