{
  DependencyGraph graph=new DependencyGraph(TreeShakerMode.none);
  graph.add(Root,true);
  graph.add(A,false);
  graph.add(B,false);
  graph.add(C,false);
  assertEquals(19,graph.findReachableMethods().size());
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(Root.getInternalName(),"<init>","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(A.getInternalName(),"<init>","(B)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(A.getInternalName(),"<init>","(S)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(A.getInternalName(),"<init>","(I)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(A.getInternalName(),"a","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(A.getInternalName(),"b","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(A.getInternalName(),"c","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(B.getInternalName(),"<init>","(B)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(B.getInternalName(),"<init>","(S)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(B.getInternalName(),"<init>","(I)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(B.getInternalName(),"a","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(B.getInternalName(),"b","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(B.getInternalName(),"c","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(C.getInternalName(),"<init>","(B)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(C.getInternalName(),"<init>","(S)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(C.getInternalName(),"<init>","(I)V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(C.getInternalName(),"a","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(C.getInternalName(),"b","()V")));
  assertTrue(graph.findReachableMethods().contains(new ImmutableTriple<>(C.getInternalName(),"c","()V")));
}
