{
  final String buff[]={"0","1","2","3","4","5"};
  AbstractSequentialList asl=new AbstractSequentialList(){
    int currPos=0;
    @Override public int size(){
      return buff.length;
    }
    @Override public ListIterator listIterator(    int index){
      currPos=index;
      return new ListIterator(){
        public void add(        Object o){
        }
        public boolean hasNext(){
          return true;
        }
        public boolean hasPrevious(){
          return false;
        }
        public Object next(){
          return buff[currPos];
        }
        public int nextIndex(){
          return 0;
        }
        public Object previous(){
          return null;
        }
        public int previousIndex(){
          return 0;
        }
        public void remove(){
        }
        public void set(        Object o){
        }
      }
;
    }
  }
;
  for (int i=0; i < buff.length; i++) {
    assertEquals(buff[i],asl.get(i));
  }
  try {
    asl.get(asl.size() + 1);
    fail("IndexOutOfBoundsException expected");
  }
 catch (  IndexOutOfBoundsException e) {
  }
  try {
    asl.get(-1);
    fail("IndexOutOfBoundsException expected");
  }
 catch (  IndexOutOfBoundsException e) {
  }
}
