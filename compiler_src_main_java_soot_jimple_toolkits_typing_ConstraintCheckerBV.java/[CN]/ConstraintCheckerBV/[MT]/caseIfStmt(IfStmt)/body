{
  ConditionExpr cond=(ConditionExpr)stmt.getCondition();
  BinopExpr expr=cond;
  Value lv=expr.getOp1();
  Value rv=expr.getOp2();
  TypeNode lop;
  TypeNode rop;
  if (lv instanceof Local) {
    lop=hierarchy.typeNode(((Local)lv).getType());
  }
 else   if (lv instanceof DoubleConstant) {
    lop=hierarchy.typeNode(DoubleType.v());
  }
 else   if (lv instanceof FloatConstant) {
    lop=hierarchy.typeNode(FloatType.v());
  }
 else   if (lv instanceof IntConstant) {
    lop=hierarchy.typeNode(IntType.v());
  }
 else   if (lv instanceof LongConstant) {
    lop=hierarchy.typeNode(LongType.v());
  }
 else   if (lv instanceof NullConstant) {
    lop=hierarchy.typeNode(NullType.v());
  }
 else   if (lv instanceof StringConstant) {
    lop=hierarchy.typeNode(RefType.v("java.lang.String"));
  }
 else   if (lv instanceof ClassConstant) {
    lop=hierarchy.typeNode(RefType.v("java.lang.Class"));
  }
 else {
    throw new RuntimeException("Unhandled binary expression left operand type: " + lv.getClass());
  }
  if (rv instanceof Local) {
    rop=hierarchy.typeNode(((Local)rv).getType());
  }
 else   if (rv instanceof DoubleConstant) {
    rop=hierarchy.typeNode(DoubleType.v());
  }
 else   if (rv instanceof FloatConstant) {
    rop=hierarchy.typeNode(FloatType.v());
  }
 else   if (rv instanceof IntConstant) {
    rop=hierarchy.typeNode(IntType.v());
  }
 else   if (rv instanceof LongConstant) {
    rop=hierarchy.typeNode(LongType.v());
  }
 else   if (rv instanceof NullConstant) {
    rop=hierarchy.typeNode(NullType.v());
  }
 else   if (rv instanceof StringConstant) {
    rop=hierarchy.typeNode(RefType.v("java.lang.String"));
  }
 else   if (rv instanceof ClassConstant) {
    rop=hierarchy.typeNode(RefType.v("java.lang.Class"));
  }
 else {
    throw new RuntimeException("Unhandled binary expression right operand type: " + rv.getClass());
  }
  try {
    lop.lca(rop);
  }
 catch (  TypeException e) {
    error(e.getMessage());
  }
}
