{
  provider.addAlgorithm("AlgorithmParameters.AES",PREFIX + "$AlgParams");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + wrongAES128,"AES");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + wrongAES192,"AES");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + wrongAES256,"AES");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + NISTObjectIdentifiers.id_aes128_CBC,"AES");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + NISTObjectIdentifiers.id_aes192_CBC,"AES");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + NISTObjectIdentifiers.id_aes256_CBC,"AES");
  provider.addAlgorithm("Cipher.AES",PREFIX + "$ECB");
  provider.addAlgorithm("Alg.Alias.Cipher." + wrongAES128,"AES");
  provider.addAlgorithm("Alg.Alias.Cipher." + wrongAES192,"AES");
  provider.addAlgorithm("Alg.Alias.Cipher." + wrongAES256,"AES");
  provider.addAlgorithm("Cipher.AESWRAP",PREFIX + "$Wrap");
  provider.addAlgorithm("Alg.Alias.Cipher." + NISTObjectIdentifiers.id_aes128_wrap,"AESWRAP");
  provider.addAlgorithm("Alg.Alias.Cipher." + NISTObjectIdentifiers.id_aes192_wrap,"AESWRAP");
  provider.addAlgorithm("Alg.Alias.Cipher." + NISTObjectIdentifiers.id_aes256_wrap,"AESWRAP");
  provider.addAlgorithm("KeyGenerator.AES",PREFIX + "$KeyGen");
  provider.addAlgorithm("Alg.Alias.Cipher." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes128_cbc.getId(),"PBEWITHSHAAND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes192_cbc.getId(),"PBEWITHSHAAND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes256_cbc.getId(),"PBEWITHSHAAND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes128_cbc.getId(),"PBEWITHSHA256AND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes192_cbc.getId(),"PBEWITHSHA256AND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes256_cbc.getId(),"PBEWITHSHA256AND256BITAES-CBC-BC");
  provider.addAlgorithm("Cipher.PBEWITHSHAAND128BITAES-CBC-BC",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Cipher.PBEWITHSHAAND192BITAES-CBC-BC",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Cipher.PBEWITHSHAAND256BITAES-CBC-BC",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Cipher.PBEWITHSHA256AND128BITAES-CBC-BC",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Cipher.PBEWITHSHA256AND192BITAES-CBC-BC",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Cipher.PBEWITHSHA256AND256BITAES-CBC-BC",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1AND128BITAES-CBC-BC","PBEWITHSHAAND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1AND192BITAES-CBC-BC","PBEWITHSHAAND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1AND256BITAES-CBC-BC","PBEWITHSHAAND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA-1AND128BITAES-CBC-BC","PBEWITHSHAAND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA-1AND192BITAES-CBC-BC","PBEWITHSHAAND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA-1AND256BITAES-CBC-BC","PBEWITHSHAAND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA-256AND128BITAES-CBC-BC","PBEWITHSHA256AND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA-256AND192BITAES-CBC-BC","PBEWITHSHA256AND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA-256AND256BITAES-CBC-BC","PBEWITHSHA256AND256BITAES-CBC-BC");
  provider.addAlgorithm("Cipher.PBEWITHMD5AND128BITAES-CBC-OPENSSL",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Cipher.PBEWITHMD5AND192BITAES-CBC-OPENSSL",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("Cipher.PBEWITHMD5AND256BITAES-CBC-OPENSSL",PREFIX + "$PBEWithAESCBC");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHMD5AND128BITAES-CBC-OPENSSL",PREFIX + "$PBEWithMD5And128BitAESCBCOpenSSL");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHMD5AND192BITAES-CBC-OPENSSL",PREFIX + "$PBEWithMD5And192BitAESCBCOpenSSL");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHMD5AND256BITAES-CBC-OPENSSL",PREFIX + "$PBEWithMD5And256BitAESCBCOpenSSL");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHAAND128BITAES-CBC-BC",PREFIX + "$PBEWithSHAAnd128BitAESBC");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHAAND192BITAES-CBC-BC",PREFIX + "$PBEWithSHAAnd192BitAESBC");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHAAND256BITAES-CBC-BC",PREFIX + "$PBEWithSHAAnd256BitAESBC");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHA256AND128BITAES-CBC-BC",PREFIX + "$PBEWithSHA256And128BitAESBC");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHA256AND192BITAES-CBC-BC",PREFIX + "$PBEWithSHA256And192BitAESBC");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHA256AND256BITAES-CBC-BC",PREFIX + "$PBEWithSHA256And256BitAESBC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA1AND128BITAES-CBC-BC","PBEWITHSHAAND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA1AND192BITAES-CBC-BC","PBEWITHSHAAND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA1AND256BITAES-CBC-BC","PBEWITHSHAAND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA-1AND128BITAES-CBC-BC","PBEWITHSHAAND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA-1AND192BITAES-CBC-BC","PBEWITHSHAAND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA-1AND256BITAES-CBC-BC","PBEWITHSHAAND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND128BITAES-CBC-BC","PBEWITHSHA256AND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND192BITAES-CBC-BC","PBEWITHSHA256AND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWITHSHA-256AND256BITAES-CBC-BC","PBEWITHSHA256AND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes128_cbc.getId(),"PBEWITHSHAAND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes192_cbc.getId(),"PBEWITHSHAAND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes256_cbc.getId(),"PBEWITHSHAAND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes128_cbc.getId(),"PBEWITHSHA256AND128BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes192_cbc.getId(),"PBEWITHSHA256AND192BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes256_cbc.getId(),"PBEWITHSHA256AND256BITAES-CBC-BC");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND128BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND192BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND256BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA256AND128BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA256AND192BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA256AND256BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA1AND128BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA1AND192BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA1AND256BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA-1AND128BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA-1AND192BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA-1AND256BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA-256AND128BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA-256AND192BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHA-256AND256BITAES-CBC-BC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes128_cbc.getId(),"PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes192_cbc.getId(),"PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes256_cbc.getId(),"PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes128_cbc.getId(),"PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes192_cbc.getId(),"PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes256_cbc.getId(),"PKCS12PBE");
}
