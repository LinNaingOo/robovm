{
  Instruction insn=this.sentinel;
  while (insn.next != null) {
    insn=insn.next;
  }
  this.lastInstruction=insn;
  HashMap<Instruction,Instruction> todoBlocks=new HashMap<Instruction,Instruction>();
  todoBlocks.put(this.sentinel.next,this.lastInstruction);
  LinkedList<Instruction> todoList=new LinkedList<Instruction>();
  todoList.add(this.sentinel.next);
  while (!todoList.isEmpty()) {
    Instruction firstInsn=todoList.removeFirst();
    Instruction lastInsn=todoBlocks.get(firstInsn);
    jsrorder.clear();
    jsr2astore.clear();
    astore2ret.clear();
    if (findOutmostJsrs(firstInsn,lastInsn)) {
      HashMap<Instruction,Instruction> newblocks=inliningJsrTargets();
      todoBlocks.putAll(newblocks);
      todoList.addAll(newblocks.keySet());
    }
  }
{
    method.instructions=this.sentinel.next;
    adjustExceptionTable();
    adjustLineNumberTable();
    adjustBranchTargets();
    adjustLocalVariableTable();
  }
  return true;
}
