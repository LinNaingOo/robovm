{
  Stmt stmt;
  Value rvalue;
  cp_info c=constant_pool[i];
  if (c instanceof CONSTANT_Integer_info) {
    CONSTANT_Integer_info ci=(CONSTANT_Integer_info)c;
    rvalue=IntConstant.v((int)ci.bytes);
    stmt=Jimple.v().newAssignStmt(Util.v().getLocalForStackOp(listBody,postTypeStack,postTypeStack.topIndex()),rvalue);
  }
 else   if (c instanceof CONSTANT_Float_info) {
    CONSTANT_Float_info cf=(CONSTANT_Float_info)c;
    rvalue=FloatConstant.v(cf.convert());
    stmt=Jimple.v().newAssignStmt(Util.v().getLocalForStackOp(listBody,postTypeStack,postTypeStack.topIndex()),rvalue);
  }
 else   if (c instanceof CONSTANT_Long_info) {
    CONSTANT_Long_info cl=(CONSTANT_Long_info)c;
    rvalue=LongConstant.v(cl.convert());
    stmt=Jimple.v().newAssignStmt(Util.v().getLocalForStackOp(listBody,postTypeStack,postTypeStack.topIndex()),rvalue);
  }
 else   if (c instanceof CONSTANT_Double_info) {
    CONSTANT_Double_info cd=(CONSTANT_Double_info)c;
    rvalue=DoubleConstant.v(cd.convert());
    stmt=Jimple.v().newAssignStmt(Util.v().getLocalForStackOp(listBody,postTypeStack,postTypeStack.topIndex()),rvalue);
  }
 else   if (c instanceof CONSTANT_String_info) {
    CONSTANT_String_info cs=(CONSTANT_String_info)c;
    String constant=cs.toString(constant_pool);
    if (constant.startsWith("\"") && constant.endsWith("\""))     constant=constant.substring(1,constant.length() - 1);
    rvalue=StringConstant.v(constant);
    stmt=Jimple.v().newAssignStmt(Util.v().getLocalForStackOp(listBody,postTypeStack,postTypeStack.topIndex()),rvalue);
  }
 else   if (c instanceof CONSTANT_Utf8_info) {
    CONSTANT_Utf8_info cu=(CONSTANT_Utf8_info)c;
    String constant=cu.convert();
    if (constant.startsWith("\"") && constant.endsWith("\""))     constant=constant.substring(1,constant.length() - 1);
    rvalue=StringConstant.v(constant);
    stmt=Jimple.v().newAssignStmt(Util.v().getLocalForStackOp(listBody,postTypeStack,postTypeStack.topIndex()),rvalue);
  }
 else   if (c instanceof CONSTANT_Class_info) {
    String className=((CONSTANT_Utf8_info)(constant_pool[((CONSTANT_Class_info)c).name_index])).convert();
    rvalue=ClassConstant.v(className);
    stmt=Jimple.v().newAssignStmt(Util.v().getLocalForStackOp(listBody,postTypeStack,postTypeStack.topIndex()),rvalue);
  }
 else {
    throw new RuntimeException("Attempting to push a non-constant cp entry" + c);
  }
  statements.add(stmt);
}
