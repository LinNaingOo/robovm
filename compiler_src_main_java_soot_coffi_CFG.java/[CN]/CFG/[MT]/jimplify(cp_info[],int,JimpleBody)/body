{
  Util.v().setClassNameToAbbreviation(new HashMap());
  Chain units=listBody.getUnits();
  this.listBody=listBody;
  this.units=units;
  instructionToFirstStmt=new HashMap<Instruction,Stmt>();
  instructionToLastStmt=new HashMap<Instruction,Stmt>();
  jmethod=listBody.getMethod();
  cm=Scene.v();
  Set initialLocals=new ArraySet();
  List parameterTypes=jmethod.getParameterTypes();
{
    Code_attribute ca=method.locate_code_attribute();
    LocalVariableTable_attribute la=ca.findLocalVariableTable();
    LocalVariableTypeTable_attribute lt=ca.findLocalVariableTypeTable();
    Util.v().activeVariableTable=la;
    Util.v().activeVariableTypeTable=lt;
    Util.v().activeConstantPool=constant_pool;
    Type thisType=RefType.v(jmethod.getDeclaringClass().getName());
    boolean isStatic=Modifier.isStatic(jmethod.getModifiers());
    int currentLocalIndex=0;
{
      if (!isStatic) {
        String name;
        if (!Util.v().useFaithfulNaming || la == null)         name="l0";
 else {
          name=la.getLocalVariableName(constant_pool,currentLocalIndex);
          if (!Util.v().isValidJimpleName(name))           name="l0";
        }
        Local local=Jimple.v().newLocal(name,UnknownType.v());
        listBody.getLocals().add(local);
        currentLocalIndex++;
        units.add(Jimple.v().newIdentityStmt(local,Jimple.v().newThisRef(jmethod.getDeclaringClass().getType())));
      }
    }
{
      Iterator typeIt=parameterTypes.iterator();
      int argCount=0;
      while (typeIt.hasNext()) {
        String name;
        Type type=(Type)typeIt.next();
        if (!Util.v().useFaithfulNaming || la == null)         name="l" + currentLocalIndex;
 else {
          name=la.getLocalVariableName(constant_pool,currentLocalIndex);
          if (!Util.v().isValidJimpleName(name))           name="l" + currentLocalIndex;
        }
        Local local=Jimple.v().newLocal(name,UnknownType.v());
        initialLocals.add(local);
        listBody.getLocals().add(local);
        units.add(Jimple.v().newIdentityStmt(local,Jimple.v().newParameterRef(type,argCount)));
        if (type.equals(DoubleType.v()) || type.equals(LongType.v())) {
          currentLocalIndex+=2;
        }
 else {
          currentLocalIndex+=1;
        }
        argCount++;
      }
    }
    Util.v().resetEasyNames();
  }
  jimplify(constant_pool,this_class);
  return true;
}
