{
  cp_info c=constant_pool[i];
  if (c instanceof CONSTANT_Integer_info)   typeStack=typeStack.push(IntType.v());
 else   if (c instanceof CONSTANT_Float_info)   typeStack=typeStack.push(FloatType.v());
 else   if (c instanceof CONSTANT_Long_info) {
    typeStack=typeStack.push(LongType.v());
    typeStack=typeStack.push(Long2ndHalfType.v());
  }
 else   if (c instanceof CONSTANT_Double_info) {
    typeStack=typeStack.push(DoubleType.v());
    typeStack=typeStack.push(Double2ndHalfType.v());
  }
 else   if (c instanceof CONSTANT_String_info)   typeStack=typeStack.push(RefType.v("java.lang.String"));
 else   if (c instanceof CONSTANT_Utf8_info)   typeStack=typeStack.push(RefType.v("java.lang.String"));
 else   if (c instanceof CONSTANT_Class_info) {
    CONSTANT_Class_info info=(CONSTANT_Class_info)c;
    String name=((CONSTANT_Utf8_info)(constant_pool[info.name_index])).convert();
    name=name.replace('/','.');
    if (name.charAt(0) == '[') {
      int dim=0;
      while (name.charAt(dim) == '[') {
        dim++;
      }
      Type baseType=null;
      char typeIndicator=name.charAt(dim);
switch (typeIndicator) {
case 'I':
        baseType=IntType.v();
      break;
case 'C':
    baseType=CharType.v();
  break;
case 'F':
baseType=FloatType.v();
break;
case 'D':
baseType=DoubleType.v();
break;
case 'B':
baseType=ByteType.v();
break;
case 'S':
baseType=ShortType.v();
break;
case 'Z':
baseType=BooleanType.v();
break;
case 'J':
baseType=LongType.v();
break;
case 'L':
baseType=RefType.v(name.substring(dim + 1,name.length() - 1));
break;
default :
throw new RuntimeException("Unknown Array Base Type in Class Constant");
}
typeStack=typeStack.push(ArrayType.v(baseType,dim));
}
 else {
typeStack=typeStack.push(RefType.v(name));
}
}
 else throw new RuntimeException("Attempting to push a non-constant cp entry" + c.getClass());
return new OutFlow(typeStack);
}
