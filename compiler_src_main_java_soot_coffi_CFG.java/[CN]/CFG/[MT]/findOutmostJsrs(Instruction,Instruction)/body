{
  HashSet<Instruction> innerJsrs=new HashSet<Instruction>();
  boolean unusual=false;
  Instruction insn=start;
  do {
    if (insn instanceof Instruction_Jsr || insn instanceof Instruction_Jsr_w) {
      if (innerJsrs.contains(insn)) {
        insn=insn.next;
        continue;
      }
      Instruction astore=((Instruction_branch)insn).target;
      if (!(astore instanceof Interface_Astore)) {
        unusual=true;
        break;
      }
      Instruction ret=findMatchingRet(astore,insn,innerJsrs);
      jsrorder.addLast(insn);
      jsr2astore.put(insn,astore);
      astore2ret.put(astore,ret);
    }
    insn=insn.next;
  }
 while (insn != end.next);
  if (unusual) {
    G.v().out.println("Sorry, I cannot handle this method.");
    return false;
  }
  return true;
}
