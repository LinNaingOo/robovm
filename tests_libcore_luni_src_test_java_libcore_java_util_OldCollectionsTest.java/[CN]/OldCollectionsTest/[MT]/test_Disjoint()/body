{
  Object[] arr1=new Object[10];
  for (int i=0; i < arr1.length; i++) {
    arr1[i]=new Integer(i);
  }
  Object[] arr2=new Object[20];
  for (int i=0; i < arr2.length; i++) {
    arr2[i]=new Integer(100 + i);
  }
  Collection<Object> c1=new ArrayList<Object>();
  Collection<Object> c2=new ArrayList<Object>();
  Collections.addAll(c1,arr1);
  Collections.addAll(c2,arr2);
  assertTrue(Collections.disjoint(c1,c2));
  c1.add(arr2[10]);
  assertFalse(Collections.disjoint(c1,c2));
  c1=new LinkedList<Object>();
  c2=new LinkedList<Object>();
  Collections.addAll(c1,arr1);
  Collections.addAll(c2,arr2);
  assertTrue(Collections.disjoint(c1,c2));
  c1.add(arr2[10]);
  assertFalse(Collections.disjoint(c1,c2));
  c1=new TreeSet<Object>();
  c2=new TreeSet<Object>();
  Collections.addAll(c1,arr1);
  Collections.addAll(c2,arr2);
  assertTrue(Collections.disjoint(c1,c2));
  c1.add(arr2[10]);
  assertFalse(Collections.disjoint(c1,c2));
  c1=new HashSet<Object>();
  c2=new HashSet<Object>();
  Collections.addAll(c1,arr1);
  Collections.addAll(c2,arr2);
  assertTrue(Collections.disjoint(c1,c2));
  c1.add(arr2[10]);
  assertFalse(Collections.disjoint(c1,c2));
  c1=new LinkedList<Object>();
  c2=new TreeSet<Object>();
  Collections.addAll(c1,arr1);
  Collections.addAll(c2,arr2);
  assertTrue(Collections.disjoint(c1,c2));
  c1.add(arr2[10]);
  assertFalse(Collections.disjoint(c1,c2));
  c1=new Vector<Object>();
  c2=new HashSet<Object>();
  Collections.addAll(c1,arr1);
  Collections.addAll(c2,arr2);
  assertTrue(Collections.disjoint(c1,c2));
  c1.add(arr2[10]);
  assertFalse(Collections.disjoint(c1,c2));
  try {
    Collections.disjoint(c1,null);
    fail("NullPointerException expected");
  }
 catch (  NullPointerException e) {
  }
  try {
    Collections.disjoint(null,c2);
    fail("NullPointerException expected");
  }
 catch (  NullPointerException e) {
  }
}
