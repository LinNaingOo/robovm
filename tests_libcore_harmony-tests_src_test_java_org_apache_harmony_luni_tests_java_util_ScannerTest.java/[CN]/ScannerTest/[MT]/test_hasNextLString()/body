{
  s=new Scanner("aab@2@abb@").useDelimiter("\\@");
  try {
    s.hasNext((String)null);
    fail();
  }
 catch (  NullPointerException expected) {
  }
  s=new Scanner("aab*b*").useDelimiter("\\*");
  assertTrue(s.hasNext("a+b"));
  assertEquals("aab",s.next("a+b"));
  assertFalse(s.hasNext("a+b"));
  try {
    s.next("a+b");
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s.close();
  try {
    s.hasNext("a+b");
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  s=new Scanner("WORD ? ");
  assertTrue(s.hasNext("\\w+"));
  assertEquals("WORD",s.next("\\w+"));
  assertFalse(s.hasNext("\\w+"));
  try {
    s.next("\\w+");
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s=new Scanner("word1 word2  ");
  assertEquals("word1",s.next("\\w+"));
  assertEquals("word2",s.next("\\w+"));
  try {
    s.next("\\w+");
    fail();
  }
 catch (  NoSuchElementException expected) {
  }
  os.write("aab 2".getBytes());
  serverSocket.close();
  s=new Scanner(client);
  assertTrue(s.hasNext("a*b"));
  assertEquals("aab",s.next("a*b"));
  assertFalse(s.hasNext("a*b"));
  try {
    s.next("a*b");
    fail();
  }
 catch (  InputMismatchException expected) {
  }
}
