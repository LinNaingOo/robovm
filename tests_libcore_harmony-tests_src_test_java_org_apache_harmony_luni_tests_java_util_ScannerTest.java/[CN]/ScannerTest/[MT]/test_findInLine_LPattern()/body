{
  Scanner s=new Scanner("");
  try {
    s.findInLine((Pattern)null);
    fail();
  }
 catch (  NullPointerException expected) {
  }
  String result=s.findInLine(Pattern.compile("^"));
  assertEquals("",result);
  MatchResult matchResult=s.match();
  assertEquals(0,matchResult.start());
  assertEquals(0,matchResult.end());
  result=s.findInLine(Pattern.compile("$"));
  assertEquals("",result);
  matchResult=s.match();
  assertEquals(0,matchResult.start());
  assertEquals(0,matchResult.end());
  s=new Scanner("aa\nb.b");
  result=s.findInLine(Pattern.compile("a\nb*"));
  assertNull(result);
  s=new Scanner("aa\nbb.b");
  result=s.findInLine(Pattern.compile("\\."));
  assertNull(result);
  s=new Scanner("abcd1234test\n");
  result=s.findInLine(Pattern.compile("\\p{Lower}+"));
  assertEquals("abcd",result);
  matchResult=s.match();
  assertEquals(0,matchResult.start());
  assertEquals(4,matchResult.end());
  result=s.findInLine(Pattern.compile("\\p{Digit}{5}"));
  assertNull(result);
  try {
    matchResult=s.match();
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  assertEquals(0,matchResult.start());
  assertEquals(4,matchResult.end());
  result=s.findInLine(Pattern.compile("\\p{Lower}+"));
  assertEquals("test",result);
  matchResult=s.match();
  assertEquals(8,matchResult.start());
  assertEquals(12,matchResult.end());
  char[] chars=new char[2048];
  Arrays.fill(chars,'a');
  StringBuilder stringBuilder=new StringBuilder();
  stringBuilder.append(chars);
  stringBuilder.append("1234");
  s=new Scanner(stringBuilder.toString());
  result=s.findInLine(Pattern.compile("\\p{Digit}+"));
  assertEquals("1234",result);
  matchResult=s.match();
  assertEquals(2048,matchResult.start());
  assertEquals(2052,matchResult.end());
  s=new Scanner("test");
  s.close();
  try {
    s.findInLine((Pattern)null);
    fail();
  }
 catch (  IllegalStateException expected) {
  }
  s=new Scanner("test1234\n1234 test");
  result=s.findInLine(Pattern.compile("test"));
  assertEquals("test",result);
  matchResult=s.match();
  assertEquals(0,matchResult.start());
  assertEquals(4,matchResult.end());
  int number=s.nextInt();
  assertEquals(1234,number);
  matchResult=s.match();
  assertEquals(4,matchResult.start());
  assertEquals(8,matchResult.end());
  result=s.next();
  assertEquals("1234",result);
  matchResult=s.match();
  assertEquals(9,matchResult.start());
  assertEquals(13,matchResult.end());
  result=s.findInLine(Pattern.compile("test"));
  assertEquals("test",result);
  matchResult=s.match();
  assertEquals(14,matchResult.start());
  assertEquals(18,matchResult.end());
  s=new Scanner("test\u0085\ntest");
  result=s.findInLine("est");
  assertEquals("est",result);
  result=s.findInLine("est");
  assertEquals("est",result);
  s=new Scanner("test\ntest");
  result=s.findInLine("est");
  assertEquals("est",result);
  result=s.findInLine("est");
  assertEquals("est",result);
  s=new Scanner("test\n123\ntest");
  result=s.findInLine("est");
  assertEquals("est",result);
  result=s.findInLine("est");
  assertNull(result);
  s=new Scanner("   *\n");
  result=s.findInLine(Pattern.compile("^\\s*(?:\\*(?=[^/]))"));
  assertEquals("   *",result);
}
