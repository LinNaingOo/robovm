{
  s=new Scanner("123 456");
  assertTrue(s.hasNextShort(10));
  assertEquals(123,s.nextShort(10));
  assertTrue(s.hasNextShort(10));
  assertEquals(456,s.nextShort(10));
  assertFalse(s.hasNextShort(10));
  try {
    s.nextShort(10);
    fail();
  }
 catch (  NoSuchElementException expected) {
  }
  s=new Scanner("123 456");
  assertTrue(s.hasNextShort(5));
  assertEquals(38,s.nextShort(5));
  assertFalse(s.hasNextShort(5));
  try {
    s.nextShort(5);
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s=new Scanner("123456789");
  assertFalse(s.hasNextShort(10));
  try {
    s.nextShort(10);
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s=new Scanner("23,456 23,456");
  s.useLocale(Locale.GERMANY);
  assertFalse(s.hasNextShort(10));
  try {
    s.nextShort(10);
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextShort(10));
  assertEquals(23456,s.nextInt(10));
  assertTrue(s.hasNextShort(10));
  assertEquals(23456,s.nextInt(10));
  s=new Scanner("23'456 23'456");
  s.useLocale(Locale.GERMANY);
  assertFalse(s.hasNextShort(10));
  try {
    s.nextShort(10);
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s.useLocale(new Locale("it","CH"));
  assertTrue(s.hasNextShort(10));
  assertEquals(23456,s.nextShort(10));
  assertTrue(s.hasNextShort(10));
  assertEquals(23456,s.nextShort(10));
  s=new Scanner("1\u06602 1\u06662");
  assertTrue(s.hasNextShort(10));
  assertEquals(102,s.nextShort(10));
  assertFalse(s.hasNextShort(5));
  try {
    s.nextShort(5);
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  assertTrue(s.hasNextShort(10));
  assertEquals(162,s.nextShort(10));
  s=new Scanner("23.45\u0666 23.456");
  s.useLocale(Locale.CHINESE);
  assertFalse(s.hasNextShort(10));
  try {
    s.nextShort(10);
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s.useLocale(Locale.GERMANY);
  assertTrue(s.hasNextShort(10));
  assertEquals(23456,s.nextShort(10));
  assertTrue(s.hasNextShort(10));
  assertEquals(23456,s.nextShort(10));
  s=new Scanner("03,456");
  s.useLocale(Locale.ENGLISH);
  assertFalse(s.hasNextShort(10));
  try {
    s.nextShort(10);
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s=new Scanner("03456");
  assertTrue(s.hasNextShort(10));
  assertEquals(3456,s.nextShort(10));
  s=new Scanner("\u06603,456");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextShort(10));
  assertEquals(3456,s.nextShort(10));
  s=new Scanner("E34");
  assertTrue(s.hasNextShort(16));
  assertEquals(3636,s.nextShort(16));
  s=new Scanner("12300");
  s.useLocale(Locale.CHINESE);
  assertTrue(s.hasNextShort(10));
  assertEquals(12300,s.nextShort(10));
  s=new Scanner("123\u0966\u0966");
  s.useLocale(Locale.CHINESE);
  assertTrue(s.hasNextShort(10));
  assertEquals(12300,s.nextShort(10));
  s=new Scanner("123\u0e50\u0e50");
  s.useLocale(Locale.CHINESE);
  assertTrue(s.hasNextShort(10));
  assertEquals(12300,s.nextShort(10));
  s=new Scanner("-123");
  s.useLocale(new Locale("ar","AE"));
  assertTrue(s.hasNextShort(10));
  assertEquals(-123,s.nextShort(10));
  s=new Scanner("-123");
  s.useLocale(new Locale("mk","MK"));
  assertTrue(s.hasNextShort(10));
  assertEquals(-123,s.nextShort(10));
}
