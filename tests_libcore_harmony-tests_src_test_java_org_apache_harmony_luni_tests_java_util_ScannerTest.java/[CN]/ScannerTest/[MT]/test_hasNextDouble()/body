{
  s=new Scanner("123 45\u0666. 123.4 .123 ");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  assertEquals(123.0,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(456.0,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(123.4,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(0.123,s.nextDouble());
  assertFalse(s.hasNextDouble());
  try {
    s.nextDouble();
    fail();
  }
 catch (  NoSuchElementException expected) {
  }
  s=new Scanner("+123.4 -456.7 123,456.789 0.1\u06623,4");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  assertEquals(123.4,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(-456.7,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(123456.789,s.nextDouble());
  assertFalse(s.hasNextDouble());
  try {
    s.nextDouble();
    fail();
  }
 catch (  InputMismatchException expected) {
  }
  s=new Scanner("+123.4E10 -456.7e+12 123,456.789E-10");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  assertEquals(1.234E12,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(-4.567E14,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(1.23456789E-5,s.nextDouble());
  s=new Scanner("NaN Infinity -Infinity");
  assertTrue(s.hasNextDouble());
  assertEquals(Double.NaN,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(Double.POSITIVE_INFINITY,s.nextDouble());
  assertTrue(s.hasNextDouble());
  assertEquals(Double.NEGATIVE_INFINITY,s.nextDouble());
  String str=String.valueOf(Double.MAX_VALUE * 2);
  s=new Scanner(str);
  assertTrue(s.hasNextDouble());
  assertEquals(Double.POSITIVE_INFINITY,s.nextDouble());
  s=new Scanner("23,456 23,456");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  assertEquals(23456.0,s.nextDouble());
  s.useLocale(Locale.GERMANY);
  assertTrue(s.hasNextDouble());
  assertEquals(23.456,s.nextDouble());
  s=new Scanner("23.456 23.456");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  assertEquals(23.456,s.nextDouble());
  s.useLocale(Locale.GERMANY);
  assertTrue(s.hasNextDouble());
  assertEquals(23456.0,s.nextDouble());
  s=new Scanner("23,456.7 23.456,7");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  assertEquals(23456.7,s.nextDouble());
  s.useLocale(Locale.GERMANY);
  assertTrue(s.hasNextDouble());
  assertEquals(23456.7,s.nextDouble());
  s=new Scanner("-123.4");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  assertEquals(-123.4,s.nextDouble());
  s=new Scanner("+123.4 -456.7");
  s.useLocale(Locale.ENGLISH);
  assertTrue(s.hasNextDouble());
  s.close();
  try {
    s.nextDouble();
    fail();
  }
 catch (  IllegalStateException expected) {
  }
}
