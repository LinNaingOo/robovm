{
  assertTrue(Charset.isSupported("US-ASCII"));
  assertTrue(Charset.isSupported("ASCII"));
  assertTrue(Charset.isSupported("ISO-8859-1"));
  assertTrue(Charset.isSupported("ISO8859_1"));
  assertTrue(Charset.isSupported("UTF-8"));
  assertTrue(Charset.isSupported("UTF8"));
  assertTrue(Charset.isSupported("UTF-16"));
  assertTrue(Charset.isSupported("UTF-16BE"));
  assertTrue(Charset.isSupported("UTF-16LE"));
  Charset c1=Charset.forName("US-ASCII");
  assertEquals("US-ASCII",Charset.forName("US-ASCII").name());
  assertEquals("US-ASCII",Charset.forName("ASCII").name());
  assertEquals("ISO-8859-1",Charset.forName("ISO-8859-1").name());
  assertEquals("ISO-8859-1",Charset.forName("ISO8859_1").name());
  assertEquals("UTF-8",Charset.forName("UTF-8").name());
  assertEquals("UTF-8",Charset.forName("UTF8").name());
  assertEquals("UTF-16",Charset.forName("UTF-16").name());
  assertEquals("UTF-16BE",Charset.forName("UTF-16BE").name());
  assertEquals("UTF-16LE",Charset.forName("UTF-16LE").name());
  assertNotSame(Charset.availableCharsets(),Charset.availableCharsets());
  assertTrue(Charset.availableCharsets().containsKey("US-ASCII"));
  assertTrue(Charset.availableCharsets().containsKey("ISO-8859-1"));
  assertTrue(Charset.availableCharsets().containsKey("UTF-8"));
  assertTrue(Charset.availableCharsets().containsKey("UTF-16"));
  assertTrue(Charset.availableCharsets().containsKey("UTF-16BE"));
  assertTrue(Charset.availableCharsets().containsKey("UTF-16LE"));
}
