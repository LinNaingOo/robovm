{
  provider.addAlgorithm("Cipher.DESEDE",PREFIX + "$ECB");
  provider.addAlgorithm("Cipher.DESEDEWRAP",PREFIX + "$Wrap");
  provider.addAlgorithm("Alg.Alias.Cipher." + PKCSObjectIdentifiers.id_alg_CMS3DESwrap,"DESEDEWRAP");
  provider.addAlgorithm("Alg.Alias.Cipher.TDEA","DESEDE");
  provider.addAlgorithm("Alg.Alias.Cipher.TDEAWRAP","DESEDEWRAP");
  provider.addAlgorithm("Alg.Alias.KeyGenerator.TDEA","DESEDE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.TDEA","DESEDE");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.TDEA","DESEDE");
  if (provider.hasAlgorithm("MessageDigest","SHA-1")) {
    provider.addAlgorithm("Cipher.PBEWITHSHAAND3-KEYTRIPLEDES-CBC",PREFIX + "$PBEWithSHAAndDES3Key");
    provider.addAlgorithm("Cipher.PBEWITHSHAAND2-KEYTRIPLEDES-CBC",PREFIX + "$PBEWithSHAAndDES2Key");
    provider.addAlgorithm("Alg.Alias.Cipher." + PKCSObjectIdentifiers.pbeWithSHAAnd3_KeyTripleDES_CBC,"PBEWITHSHAAND3-KEYTRIPLEDES-CBC");
    provider.addAlgorithm("Alg.Alias.Cipher." + PKCSObjectIdentifiers.pbeWithSHAAnd2_KeyTripleDES_CBC,"PBEWITHSHAAND2-KEYTRIPLEDES-CBC");
    provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1ANDDESEDE","PBEWITHSHAAND3-KEYTRIPLEDES-CBC");
    provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1AND3-KEYTRIPLEDES-CBC","PBEWITHSHAAND3-KEYTRIPLEDES-CBC");
    provider.addAlgorithm("Alg.Alias.Cipher.PBEWITHSHA1AND2-KEYTRIPLEDES-CBC","PBEWITHSHAAND2-KEYTRIPLEDES-CBC");
  }
  provider.addAlgorithm("KeyGenerator.DESEDE",PREFIX + "$KeyGenerator");
  provider.addAlgorithm("SecretKeyFactory.DESEDE",PREFIX + "$KeyFactory");
  provider.addAlgorithm("AlgorithmParameters.DESEDE",PACKAGE + ".util.IvAlgorithmParameters");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters." + PKCSObjectIdentifiers.des_EDE3_CBC,"DESEDE");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHAAND3-KEYTRIPLEDES-CBC",PREFIX + "$PBEWithSHAAndDES3KeyFactory");
  provider.addAlgorithm("SecretKeyFactory.PBEWITHSHAAND2-KEYTRIPLEDES-CBC",PREFIX + "$PBEWithSHAAndDES2KeyFactory");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND3-KEYTRIPLEDES","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND2-KEYTRIPLEDES","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND3-KEYTRIPLEDES-CBC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAAND2-KEYTRIPLEDES-CBC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAANDDES3KEY-CBC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.PBEWITHSHAANDDES2KEY-CBC","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.3","PBEWITHSHAAND3-KEYTRIPLEDES-CBC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.1.2.840.113549.1.12.1.4","PBEWITHSHAAND2-KEYTRIPLEDES-CBC");
  provider.addAlgorithm("Alg.Alias.SecretKeyFactory.PBEWithSHAAnd3KeyTripleDES","PBEWITHSHAAND3-KEYTRIPLEDES-CBC");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.3","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.AlgorithmParameters.1.2.840.113549.1.12.1.4","PKCS12PBE");
  provider.addAlgorithm("Alg.Alias.Cipher.PBEWithSHAAnd3KeyTripleDES","PBEWITHSHAAND3-KEYTRIPLEDES-CBC");
}
