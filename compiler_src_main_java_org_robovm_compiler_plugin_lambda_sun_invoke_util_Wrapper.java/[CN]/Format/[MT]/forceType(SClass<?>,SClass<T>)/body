{
  boolean z=(type == exampleType || type.isPrimitive() && forPrimitiveType(type) == findWrapperType(exampleType) || exampleType.isPrimitive() && forPrimitiveType(exampleType) == findWrapperType(type) || type == SClass.ObjectClass && !exampleType.isPrimitive());
  if (!z)   System.out.println(type + " <= " + exampleType);
  assert(type == exampleType || type.isPrimitive() && forPrimitiveType(type) == findWrapperType(exampleType) || exampleType.isPrimitive() && forPrimitiveType(exampleType) == findWrapperType(type) || type == SClass.ObjectClass && !exampleType.isPrimitive());
  @SuppressWarnings("unchecked") SClass<T> result=(SClass<T>)type;
  return result;
}
