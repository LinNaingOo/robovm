{
  try {
    NativeCrypto.i2d_SSL_SESSION(NULL);
    fail();
  }
 catch (  NullPointerException expected) {
  }
  final ServerSocket listener=new ServerSocket(0);
  Hooks cHooks=new Hooks(){
    @Override public void afterHandshake(    int session,    int s,    int c,    Socket sock,    FileDescriptor fd,    SSLHandshakeCallbacks callback) throws Exception {
      byte[] b=NativeCrypto.i2d_SSL_SESSION(session);
      assertNotNull(b);
      int session2=NativeCrypto.d2i_SSL_SESSION(b);
      assertTrue(session2 != NULL);
      NativeCrypto.SSL_SESSION_free(session2);
      super.afterHandshake(session,s,c,sock,fd,callback);
    }
  }
;
  Hooks sHooks=new ServerHooks(getServerPrivateKey(),getServerCertificates());
  Future<TestSSLHandshakeCallbacks> client=handshake(listener,0,true,cHooks,null);
  Future<TestSSLHandshakeCallbacks> server=handshake(listener,0,false,sHooks,null);
  client.get(TIMEOUT_SECONDS,TimeUnit.SECONDS);
  server.get(TIMEOUT_SECONDS,TimeUnit.SECONDS);
}
