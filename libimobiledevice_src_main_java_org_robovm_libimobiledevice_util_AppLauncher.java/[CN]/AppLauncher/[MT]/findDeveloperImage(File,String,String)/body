{
  String[] versionParts=Arrays.copyOf(productVersion.split("\\."),3);
  for (int i=0; i < versionParts.length; i++) {
    if (versionParts[i] == null) {
      versionParts[i]="0";
    }
  }
  String[] patterns=new String[]{String.format("%s\\.%s\\.%s \\(%s\\)",versionParts[0],versionParts[1],versionParts[2],buildVersion),String.format("%s\\.%s\\.%s \\(.*\\)",versionParts[0],versionParts[1],versionParts[2],buildVersion),String.format("%s\\.%s\\.%s",versionParts[0],versionParts[1],versionParts[2]),String.format("%s\\.%s \\(%s\\)",versionParts[0],versionParts[1],buildVersion),String.format("%s\\.%s \\(.*\\)",versionParts[0],versionParts[1],buildVersion),String.format("%s\\.%s",versionParts[0],versionParts[1])};
  File[] dirs=dsDir.listFiles();
  for (  String pattern : patterns) {
    for (    File dir : dirs) {
      if (dir.isDirectory() && dir.getName().matches(pattern)) {
        File dmg=new File(dir,"DeveloperDiskImage.dmg");
        File sig=new File(dir,dmg.getName() + ".signature");
        if (dmg.isFile() && sig.isFile()) {
          return dmg;
        }
      }
    }
  }
  throw new FileNotFoundException("No DeveloperDiskImage.dmg found in " + dsDir.getAbsolutePath() + " for iOS version "+ productVersion+ " ("+ buildVersion+ ")");
}
