{
  EmulatedFields.ObjectSlot[] slots=emulatedFields.emulatedFields().slots();
  for (  ObjectSlot element : slots) {
    element.defaulted=false;
    Class<?> type=element.field.getType();
    if (type == Integer.TYPE) {
      element.fieldValue=Integer.valueOf(input.readInt());
    }
 else     if (type == Byte.TYPE) {
      element.fieldValue=Byte.valueOf(input.readByte());
    }
 else     if (type == Character.TYPE) {
      element.fieldValue=Character.valueOf(input.readChar());
    }
 else     if (type == Short.TYPE) {
      element.fieldValue=Short.valueOf(input.readShort());
    }
 else     if (type == Boolean.TYPE) {
      element.fieldValue=Boolean.valueOf(input.readBoolean());
    }
 else     if (type == Long.TYPE) {
      element.fieldValue=Long.valueOf(input.readLong());
    }
 else     if (type == Float.TYPE) {
      element.fieldValue=Float.valueOf(input.readFloat());
    }
 else     if (type == Double.TYPE) {
      element.fieldValue=Double.valueOf(input.readDouble());
    }
 else {
      try {
        element.fieldValue=readObject();
      }
 catch (      ClassNotFoundException cnf) {
        throw new InvalidClassException(cnf.toString());
      }
    }
  }
}
