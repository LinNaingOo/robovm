{
  String anno=isBridge(method) ? "@Bridge" : "@Callback";
  soot.Type sootRetType=method.getReturnType();
  Type returnType=isStruct(sootRetType) ? getStructType(sootRetType) : getType(sootRetType);
  if (hasAnnotation(method,"Lorg/nullvm/rt/bro/annotation/Pointer;")) {
    if (!sootRetType.equals(LongType.v()) && !isStruct(sootRetType)) {
      throw new IllegalArgumentException(anno + " annotated method " + method.getName()+ " must return long or Struct when annotated with @Pointer");
    }
    returnType=I8_PTR;
  }
 else   if (hasAnnotation(method,"Lorg/nullvm/rt/bro/annotation/MachineWord;")) {
    if (!method.getReturnType().equals(LongType.v()) && !method.getReturnType().equals(DoubleType.v())) {
      throw new IllegalArgumentException(anno + " annotated method " + method.getName()+ " must return long or double when annotated with @MachineWord");
    }
    returnType=method.getReturnType().equals(LongType.v()) ? MACHINE_INT : MACHINE_FP;
  }
  Type[] paramTypes=new Type[method.getParameterTypes().size()];
  int i=0;
  for (  soot.Type t : (List<soot.Type>)method.getParameterTypes()) {
    paramTypes[i++]=isStruct(t) ? new PointerType(getStructType(t)) : getType(t);
  }
  for (i=0; i < paramTypes.length; i++) {
    if (hasParameterAnnotation(method,i,"Lorg/nullvm/rt/bro/annotation/StructRet;")) {
      if (i > 0) {
        throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " cannot be annotated with @StructRet. Only first parameter can have this annotation.");
      }
      if (!hasParameterAnnotation(method,i,"Lorg/nullvm/rt/bro/annotation/Pointer;")) {
        throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " must be annotated with @Pointer when annotated with @StructRet.");
      }
    }
    soot.Type t=method.getParameterType(i);
    if (hasParameterAnnotation(method,i,"Lorg/nullvm/rt/bro/annotation/Pointer;")) {
      if (!t.equals(LongType.v()) && !isStruct(t)) {
        throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " must be of type long or Struct when annotated with @Pointer");
      }
      paramTypes[i]=I8_PTR;
    }
 else     if (hasParameterAnnotation(method,i,"Lorg/nullvm/rt/bro/annotation/MachineWord;")) {
      if (!t.equals(LongType.v()) && !t.equals(DoubleType.v())) {
        throw new IllegalArgumentException("Parameter " + (i + 1) + " of "+ anno+ " annotated method "+ method.getName()+ " must be of type long or double when annotated with @MachineWord");
      }
      paramTypes[i]=t.equals(LongType.v()) ? MACHINE_INT : MACHINE_FP;
    }
  }
  return new FunctionType(returnType,paramTypes);
}
