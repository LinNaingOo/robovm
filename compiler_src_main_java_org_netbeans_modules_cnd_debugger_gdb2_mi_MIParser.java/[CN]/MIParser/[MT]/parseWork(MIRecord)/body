{
  Token t=getToken();
  if (t.type == TokenType.NUM) {
    try {
      record.token=java.lang.Integer.parseInt(t.value);
    }
 catch (    NumberFormatException nfe) {
      throw new MIParserException("Unable to parse token: " + t.value);
    }
    t=getToken();
  }
switch (t.type) {
case EOL:
    record.results=new MITList(false,true);
  return record;
case CARET:
record.type='^';
record.isStream=false;
break;
case PLUS:
record.type='+';
record.isStream=false;
break;
case STAR:
record.type='*';
record.isStream=false;
break;
case EQ:
record.type='=';
record.isStream=false;
break;
case TILDE:
record.type='~';
record.isStream=true;
break;
case AT:
record.type='@';
record.isStream=true;
break;
case AMP:
record.type='&';
record.isStream=true;
break;
}
if (record.isStream) {
t=getToken();
if (t.type != TokenType.STR) error("stream-record","c-string",t);
record.stream=t.value;
}
 else {
t=getToken();
if (t.type != TokenType.SYM) error("non-stream-record","SYM",t);
record.cls=t.value;
t=getToken();
if (t.type == TokenType.EOL) {
record.results=new MITList(false,true);
}
 else if (t.type == TokenType.COMMA) {
record.results=parseTList(TokenType.EOL);
}
 else {
record.results=new MITList(false,true);
error("results",", or EOL",t);
}
}
return record;
}
